{"version":3,"sources":["cache.js","asset/srLogo.png","reducer/headerReducer.js","context/headerContext.js","dynamic/menu.js","dynamic/navbar.js","asset/goglobalschool.png","reducer/dashboardReducer.js","context/dashboardContext.js","function/set.js","reducer/caseReducer.js","context/caseContext.js","graphql/auth.js","context/userContext.js","reducer/quarantineReducer.js","context/quarantineContext.js","reducer/hospitalReducer.js","context/hospitalContext.js","page/dashboard.js","component/case/tableColumn/caseColumn.js","static/own-comp.js","function/fn.js","graphql/case.js","component/case/modal/addCase.js","page/case.js","component/case/tableColumn/subCaseColumn.js","component/case/modal/editCase.js","component/case/modal/addSubCase.js","component/case/modal/editSubCase.js","component/case/subCase.js","component/user/tableColumn/userColumn.js","component/user/modal/addUser.js","component/user/modal/editUser.js","component/user/tableColumn/roleColumn.js","component/user/modal/addRole.js","component/user/modal/editAccount.js","page/user.js","component/quarantine/tableColumn/quarantineColumn.js","graphql/quarantine.js","component/quarantine/modal/addQuarantine.js","page/quarantine.js","component/quarantine/tableColumn/subQuarantineColumn.js","component/quarantine/modal/editQuarantine.js","component/quarantine/modal/addSubQuarantine.js","component/quarantine/modal/editSubQuarantine.js","graphql/people.js","component/quarantine/subQuarantine.js","reducer/peopleReducer.js","context/peopleContext.js","component/people/tableColumn/peopleColumn.js","component/people/modal/addPeople.js","graphql/hospital.js","page/people.js","component/people/tableColumn/testColumn.js","component/people/tableColumn/relatedColumn.js","component/people/modal/addPeopleTest.js","component/people/modal/addPeopleHospital.js","component/people/modal/addPeopleStatus.js","component/people/modal/addPeopleQuarantine.js","component/people/modal/addPeopleHistory.js","component/people/modal/uploadPic.js","component/people/subPeople.js","component/hospital/tableColumn/hospitalColumn.js","component/hospital/modal/addHospital.js","page/hospital.js","component/hospital/tableColumn/subHospitalColumn.js","component/hospital/modal/editHospital.js","component/hospital/modal/addSubHospital.js","component/hospital/modal/editSubHospital.js","component/hospital/subHospital.js","page/login.js","component/covideComponents/InfoBox.js","component/covideComponents/LineGraph.js","component/covideComponents/Table.js","component/covideComponents/util.js","component/covideComponents/Map.js","graphql/dashboardAndReport.js","page/map.jsx","Routes.js","App.js","reportWebVitals.js","index.js"],"names":["isLoggedInVar","makeVar","localStorage","getItem","cache","InMemoryCache","typePolicies","Query","fields","isLoggedIn","read","headerReducer","state","action","type","payload","HeaderData","createContext","genderData","require","provinceData","districtData","communeData","villageData","HeaderContext","props","urlPath","useLocation","pathname","useReducer","displayName","role","user","userDispatch","Provider","value","children","Sider","Layout","SubMenu","Menu","MenuHeader","useContext","useState","collapsed","setCollapsed","collapsible","onCollapse","style","to","className","width","src","Logo","preview","theme","selectedKeys","mode","Item","icon","HomeOutlined","LoginOutlined","TeamOutlined","BankOutlined","ReconciliationOutlined","ContainerOutlined","title","UserOutlined","ExportOutlined","onClick","removeItem","Header","Navbar","padding","textAlign","color","paddingRight","fontStyle","dashboardReducer","count","Error","DashboardController","DashBoardContext","today","total","dashBoardData","dashBoardDataDispatch","case","dashboardList","dashboardListDispatch","setEditCase","values","id","caseName","date","moment","related","undefined","province","district","commune","village","other","long","lat","setQuarantine","length","quarantineName","place","inCharge","tel","note","setSubQuarantine","caseId","name","gender","status","relatedInfo","setEditSubQuarantine","date_in","date_out","in","others","personalInfo","personalType","setEditSubHospital","setEditHospital","capacity","createdAt","hospitalName","personInCharge","firstName","lastName","position","setAddQuarantine","locationName","parseFloat","setAddHospital","otehrs","setAddPeople","age","parseInt","nationality","occupation","idCard","direct","vaccinated","setEditQuarantine","caseReducer","item","index","findIndex","e","index1","push","caseTitle","Date","remark","splice","setSubCase","CaseController","CaseContext","caseData","caseDataDispatch","subCaseData","subCaseDataDispatch","LOGIN_USER","gql","IS_LOGGED_IN","REGISTER_USER","GET_ALL_USERS","UPDATE_USER_DETAIL","DELETE_USER","ADD_USER_ROLE","UserController","UserContext","userData","setUserData","useQuery","variables","page","limit","keyword","onCompleted","getUserWithPagination","users","data","loading","error","quarantineReducer","QuarantineController","QuarantineContext","quarantineData","quarantineDataDispatch","subQuarantineData","subQuarantineDataDispatch","hospitalReducer","HospitalController","HospitalContext","hospitalData","hospitalDataDispatch","subHospitalData","subHospitalDataDispatch","Typography","Title","DatePicker","RangePicker","Select","Option","caseCol","handleDelete","no","dataIndex","key","render","text","record","i","size","format","fixed","align","EditOutlined","onConfirm","okText","cancelText","DeleteOutlined","ListSelect","setValue","disabled","showSearch","placeholder","onChange","optionFilterProp","filterOption","input","option","indexOf","filterSort","optionA","optionB","localeCompare","map","load","convertToDistrict","convertToCommune","distict","convertToVillage","getRelated","condition","getRoles","txt","GET_ALL_CASES","CREATE_NEW_CASE","GET_ALL_CASES_NO_LIMIT","GET_PERSON_BY_CASE","GET_CASE_BY_ID","UPDATE_CASE_BY_ID","AddCase","open","setOpen","refetch","useMutation","createCase","onError","console","log","message","setProvince","setDistrict","setCommune","Form","useForm","form","visible","onOk","onCancel","footer","onFinish","resetFields","onFinishFailed","errorInfo","xs","md","span","rules","required","offset","setFieldsValue","htmlType","Case","setCaseData","openAdd","setOpenAdd","setPage","setLimit","setKeyword","getCaseWithPagination","useEffect","PlusOutlined","Search","target","marginTop","columns","dataSource","cases","rowKey","pagination","paginator","totalDocs","pageSize","scroll","x","sticky","subCaseCol","handleEditSubCase","currentState","confirm","EyeOutlined","EditCase","success","updateCase","destroyOnClose","getContainer","forceRender","initialValues","AddSubCase","toLowerCase","EditSubCase","setData","SubCase","useParams","updateSubData","setUpdateSubData","setSubCaseData","openEdit","setOpenEdit","openAddSub","setOpenAddSub","openEditSub","setOpenEditSub","getPersonalInfoByCaseWithPagination","getCaseById","level","personalInfos","userCol","handleUserEdit","handleAccountEdit","handleUserRole","setRoleUserID","roles","KeyOutlined","AddUser","registerUser","username","password","firstname","lastname","email","EditUser","updateUserDetail","userId","roleColumn","AddRole","userID","dataRoles","addRole","EditAccount","Password","iconRender","EyeTwoTone","EyeInvisibleOutlined","User","setDataRoles","userEdit","setUserEdit","openRole","setOpenRole","roleUserID","openEditAccount","setOpenEditAccount","deleteUser","current","currentPage","quarantineCol","d","setHours","GET_ALL_QUARANTINEINFO","CREATE_QUARANTINEINFO","DELETE_QUARANTINE_BY_ID","CREATE_PERSON_QUARANTINE","GET_PERSON_BY_QUARANTINE","GET_QUARANTINE_BY_ID","UPDATE_QUARANTINE_BY_ID","DELETE_PERSON_BY_QUARANTINE","AddQuarantine","createQuarantineInfo","Quarantine","setQuarantineData","getQuarantineInfoWithPagination","fetchPolicy","deleteQuarantineInfo","quarantineInfos","subQuarantineCol","handleEditSubQuarantine","EditQuarantine","quarantineId","updateQuarantineInfo","AddSubQuarantine","peopleData","createQuarantine","setAddSubQuarantine","quarantineInfo","people","EditSubQuarantine","GET_ALL_PERSONINFO","CREATE_NEW_PERSON","GET_ALL_PERSONINFO_NO_LIMIT","RECORD_SAMPLETEST","GET_PERSONALINFO_BY_ID","DELETE_PERSONALINFO_BY_ID","SubQuarantine","setPeopleData","setSubQuarantineData","allPersonalInfos","getQuarantineInfoById","quarantineInfoId","getQuarantineByQurantineIdWithPagination","deleteQuarantine","PlusCircleOutlined","quarantines","peopleReducer","job","PeopleController","PeopleContext","peopleDataDispatch","peopleCol","AddPeople","allCases","setAllCases","createPersonalInfo","addonBefore","c","GET_ALL_HOSPITAL","CREATE_HOSPITALINFO","DELETE_HOSPITALINFO_BY_ID","CREATE_NEW_HOSPITALIZATION","GET_PERSON_BY_HOSPITALINFO","GET_HOSPITALINFO_BY_ID","UPDATE_HOSPITALINFO_BY_ID","UPDATE_PERSON_BY_HOSPITALINFO","People","getPersonalInfoWithPagination","deletePersonalInfo","testCol","result","relatedCol","AddPeopleTest","peopleID","recordSampleTest","times","location","symptom","personalInfoId","AddPeopleHospital","AddPeopleStatus","AddPeopleQuarantine","AddPeopleHistory","UploadPic","fileList","setFileList","onPreview","file","a","url","Promise","resolve","reader","FileReader","readAsDataURL","originFileObj","onload","image","Image","window","document","write","outerHTML","rotate","listType","newFileList","maxCount","SubPeople","personalData","setPersonalData","openAddSubCase","setOpenAddSubCase","openAddPeopleTest","setOpenAddPeopleTest","openAddPeopleHospital","setOpenAddPeopleHospital","openAddPeopleStatus","setOpenAddPeopleStatus","openAddPeopleQuarantine","setOpenAddPeopleQuarantine","openAddPeopleHistory","setOpenAddPeopleHistory","openUploadPic","setOpenUploadPic","getPersonalInfoById","border","CameraOutlined","paddingTop","CloseOutlined","CheckOutlined","recovered","death","sampleTest","y","hospitalCol","AddHospital","createHospitalInfo","Hospital","setHospitalData","getHospitalInfoWithPagination","deleteHospitalInfo","hospitalInfos","subHospitalCol","handleEditSubHospital","EditHospital","hospitalId","updateHospitalInfo","AddSubHospital","createHospitalization","hospitalInfo","EditSubHospital","updateHospitalization","SubHospital","setSubHospitalData","getHospitalInfoById","getQuarantineByHospitalIdIdWithPagination","hospitalizations","Login","useHistory","loginUser","setItem","JSON","stringify","lg","xl","autoComplete","height","fontSize","InfoBox","active","isRed","Card","CardContent","as","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","intersect","callbacks","label","tooltipItem","numeral","scales","xAxes","time","tooltipFormat","yAxes","gridLines","ticks","callback","buildChartData","casesType","lastDataPoint","chartData","newDataPoint","LineGraph","fetch","then","response","json","fetchData","datasets","backgroundColor","borderColor","Table","dis","confirmedCase","casesTypeColors","hex","rgb","half_op","multiplier","deaths","prettyPrintStat","stat","showDataOnMap","country","Circle","center","pathOptions","fillColor","fillOpacity","Popup","Map","zoom","React","satellite","setSatellite","TileLayer","attribution","googleMapsLoaderConf","KEY","GET_ALL_PROVINCE","GET_DATA_FOR_MAP","MapScreen","districtLatLong","countries","tableData","setTableData","setCasesType","lng","mapCenter","mapZoom","districtInfo","setDistrictInfo","districtDatas","setDistrictDatas","getAllProvince","mapDatas","arr1","arr2","arr","load1","_id","joinArray","getAllDistrictForMap","sortedData","sort","b","sortData","lower","obj","prop","forEach","FormControl","confirmedCaseToday","recoveredToday","deathToday","Footer","Content","Routes","login","minHeight","margin","exact","path","behavior","marginRight","GoGlobalLogo","top","tokens","newToken","parse","token","upLoadLink","createUploadLink","uri","headers","Authorization","wsLink","WebSocketLink","reconnect","splitLink","split","query","definition","getMainDefinition","kind","operation","client","ApolloClient","networkError","graphQLErrors","link","App","ApolloProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.a35db03e.chunk.js","sourcesContent":["import { InMemoryCache, Reference, makeVar } from '@apollo/client';\r\n\r\n\r\n// Initializes to true if localStorage includes a 'token' key,\r\n// false otherwise\r\nexport const  isLoggedInVar = makeVar(!!localStorage.getItem(\"user\"));\r\n\r\nexport const cache = new InMemoryCache({\r\n    typePolicies: {\r\n      Query: {\r\n        fields: {\r\n          isLoggedIn: {\r\n            read() {\r\n              return isLoggedInVar();\r\n            }\r\n          },\r\n        }\r\n      }\r\n    }\r\n  });","export default __webpack_public_path__ + \"static/media/srLogo.85fb41d7.png\";","export const headerReducer = (state, action) => {\r\n    switch(action.type){\r\n        case 'SET_DATA_BACK':\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}","import React, { createContext, useReducer } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { headerReducer } from '../reducer/headerReducer'\r\n\r\nexport const HeaderData = createContext()\r\n\r\nexport const genderData = require('../asset/data/gender.json')\r\nexport const provinceData = require('../asset/data/province.json')\r\nexport const districtData = require('../asset/data/district.json')\r\nexport const communeData = require('../asset/data/commune.json')\r\nexport const villageData = require('../asset/data/village.json')\r\n\r\nexport default function HeaderContext(props) {\r\n    const urlPath = useLocation().pathname\r\n    const [user, userDispatch] = useReducer(headerReducer, {\r\n        displayName: \"Sambath\",\r\n        role: \"Admin\"\r\n    })\r\n\r\n    return (\r\n        <HeaderData.Provider\r\n            value={{\r\n                urlPath,\r\n                user,\r\n                userDispatch\r\n            }}\r\n        >\r\n            {props.children}\r\n        </HeaderData.Provider>\r\n    )\r\n}\r\n","import { Layout, Menu, Image } from 'antd';\r\nimport {\r\n    SettingOutlined,\r\n    ContainerOutlined,\r\n    TeamOutlined,\r\n    ExportOutlined,\r\n    HomeOutlined,\r\n    LoginOutlined,\r\n    UserOutlined,\r\n    BankOutlined,\r\n    ReconciliationOutlined\r\n} from '@ant-design/icons';\r\nimport Logo from '../asset/srLogo.png'\r\nimport { Link } from 'react-router-dom'\r\nimport { useContext, useState } from 'react';\r\nimport { HeaderData } from '../context/headerContext';\r\n// import { auth } from '../api/firebase';\r\nimport { isLoggedInVar } from '../cache';\r\n\r\nconst { Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nexport default function MenuHeader() {\r\n    const { urlPath, user } = useContext(HeaderData)\r\n\r\n    const [collapsed, setCollapsed] = useState(false)\r\n\r\n    const handleLoggout = ()=>{\r\n        localStorage.removeItem(\"user\")\r\n        isLoggedInVar(false)\r\n    }\r\n\r\n    return (\r\n        <Sider collapsible collapsed={collapsed} onCollapse={() => setCollapsed(!collapsed)}\r\n            style={{\r\n                // backgroundColor: '#06385f' \r\n                // backgroundColor: '#22252A' \r\n            }}>\r\n            <Link to=\"/\">\r\n                <div className=\"logo\">\r\n                    <Image width={\"100%\"} src={Logo} preview={false} />\r\n                </div>\r\n            </Link>\r\n            <Menu theme=\"dark\"\r\n                // defaultSelectedKeys={[urlPath]} \r\n                selectedKeys={[urlPath]}\r\n                mode=\"inline\"\r\n                style={{\r\n                    // backgroundColor: '#06385f'\r\n                    // backgroundColor: '#22252A' \r\n                }}>\r\n                <Menu.Item key=\"/\" icon={<HomeOutlined />}>\r\n                    ទំព័រដើម\r\n                    <Link to=\"/\" />\r\n                </Menu.Item>\r\n                <Menu.Item key=\"/case\" icon={<LoginOutlined />}>\r\n                    កំណត់ត្រាករណី\r\n                    <Link to=\"/case\" />\r\n                </Menu.Item>\r\n                <Menu.Item key=\"/people\" icon={<TeamOutlined />}>\r\n                    ប្រវត្តិរូបប្រជាជន\r\n                    <Link to=\"/people\" />\r\n                </Menu.Item>\r\n                <Menu.Item key=\"/quarantine\" icon={<BankOutlined />}>\r\n                    ចត្តាឡីស័ក\r\n                    <Link to=\"/quarantine\" />\r\n                </Menu.Item>\r\n                <Menu.Item key=\"/hospital\" icon={<ReconciliationOutlined />}>\r\n                    មន្ទីរពេទ្យ\r\n                    <Link to=\"/hospital\" />\r\n                </Menu.Item>\r\n                <SubMenu key=\"sub1\" icon={<ContainerOutlined />} title=\"របាយការណ៍\">\r\n                    <Menu.Item key=\"/reportdaily\">\r\n                        របាយការណ៍ប្រចាំថ្ងៃ\r\n                        <Link to=\"/reportdaily\" />\r\n                    </Menu.Item>\r\n                    {/* <Menu.Item key=\"5\">\r\n                        របាយការណ៍ទាំងមូល\r\n                        <Link to=\"/reportall\" />\r\n                    </Menu.Item> */}\r\n                </SubMenu>\r\n                {/* <Menu.Item key=\"/setting\" icon={<SettingOutlined />}>\r\n                    ការកំណត់\r\n                    <Link to=\"/setting\" />\r\n                </Menu.Item> */}\r\n                {user.role === \"Admin\" ? (\r\n                    <Menu.Item key=\"/user\" icon={<UserOutlined />}>\r\n                        អ្នកប្រើប្រាស់\r\n                        <Link to=\"/user\" />\r\n                    </Menu.Item>\r\n                ) : (\r\n                    <></>\r\n                )}\r\n\r\n                <Menu.Item\r\n                    // onClick={() => auth.signOut()}\r\n                    key=\"6\"\r\n                    icon={<ExportOutlined />}\r\n                    onClick={() => handleLoggout()}\r\n                >\r\n                    ចាកចេញ\r\n                </Menu.Item>\r\n            </Menu>\r\n        </Sider>\r\n    )\r\n}","import React, { useContext } from 'react'\r\nimport { Layout } from 'antd'\r\nimport { HeaderData } from '../context/headerContext'\r\n\r\nconst { Header } = Layout\r\n\r\nexport default function Navbar() {\r\n    const { user } = useContext(HeaderData)\r\n\r\n    return (\r\n        <Header className=\"site-layout-background\" style={{ padding: 0, textAlign: \"right\" }}>\r\n            <p style={{ color: \"white\", paddingRight: 20, fontStyle: \"italic\" }}>@{user.displayName}</p>\r\n        </Header>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/goglobalschool.cd293cd0.png\";","export function dashboardReducer(state, action) {\r\n    switch (action.type) {\r\n      case 'increment':\r\n        return {count: state.count + 1};\r\n      case 'decrement':\r\n        return {count: state.count - 1};\r\n      default:\r\n        throw new Error();\r\n    }\r\n  }","import React, {useReducer, createContext} from 'react'\r\nimport { dashboardReducer } from '../reducer/dashboardReducer'\r\n\r\nexport const DashboardController = createContext()\r\n\r\nexport default function DashBoardContext(props) {\r\n    const [dashBoardData, dashBoardDataDispatch] = useReducer(dashboardReducer, [\r\n        {\r\n            title: \"ករណីឆ្លង\",\r\n            today: 200,\r\n            total: 200,\r\n        },\r\n        {\r\n            title: \"ជាសះស្បើយ\",\r\n            today: 200,\r\n            total: 200,\r\n        },\r\n        {\r\n            title: \"ករណីស្លាប់\",\r\n            today: 200,\r\n            total: 200,\r\n        },\r\n        {\r\n            title: \"ចត្តាឡីស័ក\",\r\n            today: 200,\r\n            total: 200,\r\n        },\r\n        {\r\n            title: \"ករណីឆ្លង\",\r\n            today: 200,\r\n            total: 200,\r\n        },\r\n        {\r\n            title: \"ករណីឆ្លង\",\r\n            today: 200,\r\n            total: 200,\r\n        },\r\n    ])\r\n\r\n    const [dashboardList, dashboardListDispatch] = useReducer(dashboardReducer, [\r\n        {\r\n            title: \"ស្រុកពួក\",\r\n            case: 10\r\n        },\r\n        {\r\n            title: \"ស្រុកបន្ទាយស្រី\",\r\n            case: 10\r\n        },\r\n    ])\r\n\r\n    return (\r\n        <DashboardController.Provider\r\n            value={{\r\n                dashBoardData,\r\n                dashboardList,\r\n\r\n                dashBoardDataDispatch,\r\n                dashboardListDispatch\r\n            }}\r\n        >\r\n            {props.children}\r\n        </DashboardController.Provider>\r\n    )\r\n}\r\n","import moment from \"moment\"\r\n\r\nexport function setCase(values, length) {\r\n    var array = {\r\n        id: values.id === undefined ? length += 1 + \"\" : values.id,\r\n        caseTitle: values.caseTitle,\r\n        date: new Date(values.date),\r\n        place: values.place,\r\n        related: values.related === undefined ? 0 : values.related,\r\n        province: values.province === undefined ? \"\" : values.province,\r\n        district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n        commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n        village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n        remark: values.remark,\r\n    }\r\n\r\n    return array\r\n}\r\n\r\nexport function setEditCase(values) {\r\n    var array = {\r\n        id: values.id + \"\",\r\n        caseName: values.caseName,\r\n        date: moment(values.date),\r\n        related: values.related === undefined ? 0 : values.related,\r\n        province: values.province === undefined ? \"\" : values.province,\r\n        district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n        commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n        village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n        other: values.other,\r\n        long: values.long === undefined ? \"\" : values.long,\r\n        lat: values.lat === undefined ? \"\" : values.lat,\r\n    }\r\n\r\n    return array\r\n}\r\n\r\nexport function setSubCase(values, length) {\r\n    var array = {\r\n        id: values.id === undefined ? length += 1 + \"\" : values.id,\r\n        caseId: values.caseId === undefined ? \"\" : values.caseId,\r\n        name: values.name === undefined ? \"\" : values.name,\r\n        gender: values.gender === undefined ? \"\" : values.gender,\r\n        province: values.province === undefined ? \"\" : values.province,\r\n        district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n        commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n        village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n        status: values.status === undefined ? \"\" : values.status,\r\n        relatedInfo: values.relatedInfo === undefined ? \"\" : values.relatedInfo,\r\n    }\r\n\r\n    return array\r\n}\r\n\r\nexport function setEditSubCase(values) {\r\n    var array = {\r\n        id: values.id + \"\",\r\n        caseId: values.caseId === undefined ? \"\" : values.caseId,\r\n        name: values.name === undefined ? \"\" : values.name,\r\n        gender: values.gender === undefined ? \"\" : values.gender,\r\n        province: values.province === undefined ? \"\" : values.province,\r\n        district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n        commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n        village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n        status: values.status === undefined ? \"\" : values.status,\r\n        relatedInfo: values.relatedInfo === undefined ? \"\" : values.relatedInfo,\r\n    }\r\n\r\n    return array\r\n}\r\n\r\nexport function setPeople(values, length) {\r\n    var array = {\r\n        id: values.id === undefined ? length += 1 + \"\" : values.id,\r\n        idCard: values.idCard === undefined ? \"\" : values.idCard,\r\n        name: values.name === undefined ? \"\" : values.name,\r\n        gender: values.gender === undefined ? \"\" : values.gender,\r\n        age: values.age === undefined ? \"\" : values.age,\r\n        tel: values.tel === undefined ? \"\" : values.tel,\r\n        job: values.job === undefined ? \"\" : values.job,\r\n        nationality: values.nationality === undefined ? \"\" : values.nationality,\r\n        province: values.province === undefined ? \"\" : values.province,\r\n        district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n        commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n        village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n        remark: values.remark === undefined ? \"\" : values.remark,\r\n    }\r\n\r\n    return array\r\n}\r\n\r\nexport function setUser(values, length) {\r\n    var array = {\r\n        id: values.id === undefined ? length += 1 + \"\" : values.id,\r\n        username: values.username,\r\n        firstName: values.firstName === undefined ? \"\" : values.firstName,\r\n        lastName: values.lastName === undefined ? \"\" : values.lastName,\r\n        role: values.roles.role,\r\n        tel: values.tel,\r\n        email: values.email,\r\n    }\r\n\r\n    return array\r\n}\r\n\r\nexport function setEditUser(values) {\r\n    const data = values.roles\r\n\r\n    console.log(data)\r\n\r\n    var array = {\r\n        id: values.id + \"\",\r\n        username: values.username === undefined ? \"\" : values.username,\r\n        firstName: values.firstName === undefined ? \"\" : values.firstName,\r\n        lastName: values.lastName === undefined ? \"\" : values.lastName,\r\n        role: values.role === undefined ? \"\" : values.role,\r\n        tel: values.tel === undefined ? \"\" : values.tel,\r\n        email: values.email === undefined ? \"\" : values.email,\r\n    }\r\n    return array\r\n}\r\n\r\nexport function setQuarantine(values, length) {\r\n    var array = {\r\n        id: values.id + \"\",\r\n        quarantineName: values.quarantineName === undefined ? \"\" : values.quarantineName,\r\n        place: values.place === undefined ? \"\" : values.place,\r\n        village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n        commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n        district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n        province: values.province === undefined ? \"\" : values.province,\r\n        inCharge: values.inCharge === undefined ? \"\" : values.inCharge,\r\n        tel: values.tel === undefined ? \"\" : values.tel,\r\n        note: values.note === undefined ? \"\" : values.note,\r\n    }\r\n\r\n    return array\r\n}\r\n\r\n// export function setEditQuarantine(values, length) {\r\n//     var array = {\r\n//         id: values.id + \"\",\r\n//         quarantineName: values.quarantineName === undefined ? \"\" : values.quarantineName,\r\n//         place: values.place === undefined ? \"\" : values.place,\r\n//         village: values.village === undefined ? \"\" : values.village,\r\n//         commune: values.commune === undefined ? \"\" : values.commune,\r\n//         district: values.district === undefined ? \"\" : values.district,\r\n//         province: values.province === undefined ? \"\" : values.province,\r\n//         inCharge: values.inCharge === undefined ? \"\" : values.inCharge,\r\n//         tel: values.tel === undefined ? \"\" : values.tel,\r\n//         note: values.note === undefined ? \"\" : values.note,\r\n//     }\r\n\r\n//     return array\r\n// }\r\n\r\nexport function setSubQuarantine(values, length) {\r\n    var array = {\r\n        id: values.id === undefined ? length += 1 + \"\" : values.id,\r\n        caseId: values.caseId === undefined ? \"\" : values.caseId,\r\n        name: values.name === undefined ? \"\" : values.name,\r\n        gender: values.gender === undefined ? \"\" : values.gender,\r\n        province: values.province === undefined ? \"\" : values.province,\r\n        district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n        commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n        village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n        status: values.status === undefined ? \"\" : values.status,\r\n        relatedInfo: values.relatedInfo === undefined ? \"\" : values.relatedInfo,\r\n    }\r\n\r\n    return array\r\n}\r\n\r\nexport function setEditSubQuarantine(values) {\r\n    var array = {\r\n        date_in: moment(values.date_in),\r\n        date_out: moment(values.date_out),\r\n        in: values.in,\r\n        others: values.others,\r\n        personalInfo: values?.personalInfo?.id,\r\n        personalType:values.personalType\r\n    }\r\n\r\n    return array\r\n}\r\n\r\nexport function setSubHospital(values, length) {\r\n    var array = {\r\n        id: values.id === undefined ? length += 1 + \"\" : values.id,\r\n        caseId: values.caseId === undefined ? \"\" : values.caseId,\r\n        name: values.name === undefined ? \"\" : values.name,\r\n        gender: values.gender === undefined ? \"\" : values.gender,\r\n        province: values.province === undefined ? \"\" : values.province,\r\n        district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n        commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n        village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n        status: values.status === undefined ? \"\" : values.status,\r\n        relatedInfo: values.relatedInfo === undefined ? \"\" : values.relatedInfo,\r\n    }\r\n\r\n    return array\r\n}\r\n\r\nexport function setEditSubHospital(values) {\r\n    var array = {\r\n        // id: values.id + \"\",\r\n        date_in: moment(values.date_in),\r\n        date_out: moment(values.date_out),\r\n        in: values.in,\r\n        others: values.others,\r\n        personalInfo: values?.personalInfo?.id,\r\n        personalType:values.personalType\r\n       \r\n    }\r\n\r\n    return array\r\n}\r\n\r\nexport function setHospital(values, length) {\r\n    var array = {\r\n        id: values.id + \"\",\r\n        hospitalName: values.hospitalName === undefined ? \"\" : values.hospitalName,\r\n        place: values.place === undefined ? \"\" : values.place,\r\n        village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n        commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n        district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n        province: values.province === undefined ? \"\" : values.province,\r\n        inCharge: values.inCharge === undefined ? \"\" : values.inCharge,\r\n        tel: values.tel === undefined ? \"\" : values.tel,\r\n        note: values.note === undefined ? \"\" : values.note,\r\n    }\r\n\r\n    return array\r\n}\r\n\r\nexport function setEditHospital(values, length) {\r\n    var array = {\r\n        lat: values.lat,\r\n        capacity: values.capacity,\r\n        createdAt: values.createdAt,\r\n        hospitalName:values.hospitalName,\r\n        long:values.long,\r\n        other:values.other,\r\n        tel:values?.personInCharge?.tel,\r\n        firstName:values?.personInCharge?.firstName, \r\n        lastName:values?.personInCharge?.lastName, \r\n        position:values?.personInCharge?.position, \r\n        others:values?.personInCharge?.others,\r\n        village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n        commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n        district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n        province: values.province === undefined ? \"\" : values.province,\r\n    }\r\n\r\n    return array\r\n}\r\n\r\nexport function setAddQuarantine(values) {\r\n    var array = {\r\n        locationName: values.locationName,\r\n        village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n        commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n        district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n        province: values.province === undefined ? \"\" : values.province,\r\n        long: parseFloat(values.long),\r\n        lat: parseFloat(values.lat),\r\n        other: values.other,\r\n        firstName: values.firstName,\r\n        lastName: values.lastName,\r\n        position: values.position,\r\n        tel: values.tel,\r\n        others: values.others,\r\n    }\r\n    return array\r\n}\r\n\r\nexport function setAddHospital(values) {\r\n    var array = {\r\n        hospitalName: values.hospitalName,\r\n        village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n        commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n        district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n        province: values.province === undefined ? \"\" : values.province,\r\n        long: parseFloat(values.long),\r\n        lat: parseFloat(values.lat),\r\n        other: values.other,\r\n        firstName: values.firstName,\r\n        lastName: values.lastName,\r\n        position: values.position,\r\n        others: values.otehrs,\r\n        tel: values.tel,\r\n\r\n    }\r\n    return array\r\n}\r\n\r\nexport function setAddPeople(values) {\r\n    var array = {\r\n        firstName:values.firstName,\r\n        lastName:values.lastName,\r\n        age:parseInt(values.age),\r\n        gender:values.gender,\r\n        tel:values.tel,\r\n        nationality:values.nationality,\r\n        occupation:values.occupation,\r\n        idCard:values.idCard,\r\n        village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n        commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n        district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n        province: values.province === undefined ? \"\" : values.province,\r\n        case:values.case,\r\n        direct:values.direct,\r\n        other:values.other,\r\n        vaccinated:parseInt(values.vaccinated),\r\n    }\r\n    return array\r\n}\r\n\r\nexport function setAddSubQuarantine(values){\r\n    var array= {\r\n        date_in: moment(values.date_in).format(),\r\n        date_out: moment(values.date_out).format(),\r\n        in: values.in,\r\n        others: values.others,\r\n        personalInfo: values.personalInfo,\r\n        personalType:values.personalType\r\n    }\r\n    return array;\r\n}\r\n\r\nexport function setEditQuarantine(values){\r\n    var array ={\r\n        lat: values.lat,\r\n        capacity: values.capacity,\r\n        createdAt: values.createdAt,\r\n        locationName:values.locationName,\r\n        long:values.long,\r\n        other:values.other,\r\n        tel:values?.personInCharge?.tel,\r\n        firstName:values?.personInCharge?.firstName, \r\n        lastName:values?.personInCharge?.lastName, \r\n        position:values?.personInCharge?.position, \r\n        others:values?.personInCharge?.others,\r\n        village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n        commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n        district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n        province: values.province === undefined ? \"\" : values.province,\r\n    }\r\n\r\n    return array;\r\n}\r\n\r\n","import { setCase, setSubCase } from '../function/set'\r\n\r\nexport function caseReducer(state, action) {\r\n\r\n    let item = [...state]\r\n    let index = item.findIndex(e => e.id === action.payload)\r\n    let index1 = item.findIndex(e => e.id === action.payload.id)\r\n\r\n    switch (action.type) {\r\n        case 'ADD_CASE':\r\n            item.push(setCase(action.payload, item.length))\r\n            return item;\r\n        case 'EDIT_CASE':\r\n            item[index1] = action.payload\r\n\r\n            return item;\r\n        case 'DELETE_CASE':\r\n            item.splice(index, 1)\r\n\r\n            return item;\r\n        case 'ADD_SUB_CASE':\r\n            item.push(setSubCase(action.payload, item.length))\r\n\r\n            return item;\r\n        case 'EDIT_SUB_CASE':\r\n            item[index1] = action.payload\r\n\r\n            return item;\r\n        case 'DELETE_SUB_CASE':\r\n            item.splice(index, 1)\r\n            return item;\r\n\r\n        default:\r\n            throw new Error();\r\n    }\r\n}","import React, {useReducer, createContext} from 'react'\r\nimport { caseReducer } from '../reducer/caseReducer'\r\n\r\nexport const CaseController = createContext()\r\n\r\nexport default function CaseContext(props) {\r\n    const [caseData, caseDataDispatch] = useReducer(caseReducer, [\r\n        {\r\n            id: \"1\",\r\n            caseTitle: \"ផ្សារក្រោម\",\r\n            date: new Date(),\r\n            place: \"តូបអ៊ីលាប\",\r\n            related: 100,\r\n            province: \"សៀមរាប\",\r\n            district: \"សៀមរាប\",\r\n            commune: \"ស្វាយដង្គំ\",\r\n            village: \"ល្វា\",\r\n            remark: \"ដេកពេទ្យ\",\r\n            lat:12.23434,\r\n            long:34.3344,\r\n        },\r\n        {\r\n            id: \"2\",\r\n            caseTitle: \"ផ្សារលើ\",\r\n            date: new Date(),\r\n            place: \"តូបអ៊ីលាប\",\r\n            related: 100,\r\n            province: \"សៀមរាប\",\r\n            district: \"សៀមរាប\",\r\n            commune: \"ស្វាយដង្គំ\",\r\n            village: \"ល្វា\",\r\n            remark: \"ដេកពេទ្យ\",\r\n            lat:12.23434,\r\n            long:34.3344,\r\n        },\r\n    ])\r\n\r\n    const [subCaseData, subCaseDataDispatch] = useReducer(caseReducer, [\r\n        {\r\n            id: \"1\",\r\n            caseId: \"1\",\r\n            name: \"សំបូរ\",\r\n            gender: \"ប្រុស\",\r\n            province: \"សៀមរាប\",\r\n            district: \"សៀមរាប\",\r\n            commune: \"ស្វាយដង្គំ\",\r\n            village: \"ល្វា\",\r\n            status: \"អវិជ្ជមាន\",\r\n            relatedInfo: \"ប្រយោល\"\r\n        },\r\n        {\r\n            id: \"2\",\r\n            caseId: \"2\",\r\n            name: \"សំណាង\",\r\n            gender: \"ប្រុស\",\r\n            province: \"សៀមរាប\",\r\n            district: \"សៀមរាប\",\r\n            commune: \"ស្វាយដង្គំ\",\r\n            village: \"ល្វា\",\r\n            status: \"វិជ្ជមាន\",\r\n            relatedInfo: \"ផ្ទាល់\"\r\n        },\r\n    ])\r\n\r\n    return (\r\n        <CaseController.Provider\r\n            value={{\r\n                caseData,\r\n                subCaseData,\r\n\r\n                caseDataDispatch,\r\n                subCaseDataDispatch,\r\n            }}\r\n        >\r\n            {props.children}\r\n        </CaseController.Provider>\r\n    )\r\n}\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const LOGIN_USER = gql`\r\n  mutation loginUser($username: String!, $password: String!) {\r\n    loginUser(username: $username, password: $password) {\r\n      user {\r\n        id\r\n        email\r\n        username\r\n        lastName\r\n        firstName\r\n        image\r\n        tel\r\n        roles {\r\n          id\r\n          role\r\n        }\r\n        createdAt\r\n        updatedAt\r\n      }\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nexport const IS_LOGGED_IN = gql`\r\n  query IsUserLoggedIn {\r\n    isLoggedIn @client\r\n  }\r\n`;\r\n\r\nexport const REGISTER_USER = gql`\r\nmutation registerUser($username:String!, $password:String!,$firstname:String!,$lastname:String!,$email:String!,$role:String!,$tel:String!){\r\n  registerUser(newUser:{\r\n    username:$username\r\n    password:$password\r\n    firstName:$firstname\r\n    lastName:$lastname\r\n    email:$email\r\n    role:$role\r\n    tel:$tel\r\n  }){\r\n    success\r\n    message\r\n  }\r\n}\r\n\r\n`;\r\n\r\nexport const GET_ALL_USERS = gql `\r\nquery getUserWithPagination($page:Int,$limit:Int,$keyword:String){\r\n  getUserWithPagination(page:$page,limit:$limit,keyword:$keyword){\r\n  \tusers{\r\n      id\r\n      username\r\n      lastName\r\n      firstName\r\n      email\r\n    \troles{\r\n        id\r\n        role\r\n      }\r\n      tel\r\n    }\r\n    paginator{\r\n      slNo\r\n      prev\r\n      next\r\n      perPage\r\n      totalPosts\r\n      totalPages\r\n      currentPage\r\n      hasPrevPage\r\n      hasNextPage\r\n      totalDocs\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nexport const UPDATE_USER_DETAIL = gql`\r\nmutation updateUserDetail($userId:ID!,$firstName:String!,$lastName:String!,$email:String!,$tel:String!){\r\n  updateUserDetail(\r\n    userId:$userId,\r\n    tel:$tel,\r\n    firstName:$firstName,\r\n    lastName:$lastName,\r\n    email:$email\r\n    ){\r\n    success\r\n    message\r\n  }\r\n}\r\n`;\r\n\r\nexport const DELETE_USER = gql`\r\nmutation deleteUser($userId:ID!){\r\n  deleteUser(userId:$userId){\r\n    success\r\n    message\r\n  }\r\n}\r\n`;\r\n\r\nexport const ADD_USER_ROLE = gql`\r\nmutation addRole($userId:ID!,$role:String!){\r\n  addRole(userId:$userId,role:$role){\r\n    success\r\n    message\r\n  }\r\n}\r\n`;\r\n\r\n\r\n","import React, {useReducer, createContext,useState} from 'react'\r\nimport { userReducer } from '../reducer/userReducer'\r\nimport { useQuery } from '@apollo/client'\r\nimport { GET_ALL_USERS } from '../graphql/auth'\r\nimport { setUser } from '../function/set'\r\n\r\nexport const UserController = createContext()\r\n\r\nexport default function UserContext(props) {\r\n    // const [userData, userDataDispatch] = useReducer(userReducer, [\r\n    //     {\r\n    //         id: \"1\",\r\n    //         username: \"user@admin.com\",\r\n    //         role: \"ADMIN\",\r\n    //         tel: \"012457478\" ,\r\n    //         note: \"active\",\r\n           \r\n    //     },\r\n    //     {\r\n    //         id: \"2\",\r\n    //         username: \"user@eka.com\",\r\n    //         role: \"USER\",\r\n    //         tel: \"01548448\" ,\r\n    //         note: \"active\",\r\n    //     },\r\n    // ])\r\n\r\n    const [userData,setUserData] = useState([])\r\n\r\n    const {data, loading,error} = useQuery(GET_ALL_USERS,{variables:{\r\n        page:1,\r\n        limit:2,\r\n        keyword:\"\",\r\n    },onCompleted:({getUserWithPagination})=>{\r\n        // console.log(getUserWithPagination?.users)\r\n        setUserData(getUserWithPagination?.users)\r\n    }})\r\n\r\n\r\n\r\n    return (\r\n        <UserController.Provider\r\n            value={{\r\n                userData,\r\n                //subCaseData,\r\n\r\n                // userDataDispatch,\r\n                //subCaseDataDispatch,\r\n            }}\r\n        >\r\n            {props.children}\r\n        </UserController.Provider>\r\n    )\r\n}\r\n","import { setQuarantine, setSubQuarantine } from '../function/set'\r\n\r\nexport function quarantineReducer(state, action) {\r\n\r\n    let item = [...state]\r\n    let index1 = item.findIndex(e => e.id === action.payload.id)\r\n    let index = item.findIndex(e => e.id === action.payload)\r\n    switch (action.type) {\r\n        case 'ADD_QUARANTINE':\r\n            item.push(setQuarantine(action.payload, item.length))\r\n            return item;\r\n        case 'EDIT_QUARANTINE':\r\n            item[index1] = action.payload\r\n            return item;\r\n        case 'DELETE_QUARANTINE':\r\n            item.splice(index, 1)\r\n            return item;\r\n        case 'ADD_SUB_QUARANTINE':\r\n            item.push(setSubQuarantine(action.payload, item.length))\r\n            return item;\r\n        case 'EDIT_SUB_QUARANTINE':\r\n            item[index1] = action.payload\r\n            return item;\r\n        case 'DELETE_SUB_QUARANTINE':\r\n            item.splice(index, 1)\r\n            return item;\r\n\r\n        default:\r\n            throw new Error();\r\n    }\r\n}","import React, {useReducer, createContext} from 'react'\r\nimport { quarantineReducer } from '../reducer/quarantineReducer'\r\n\r\nexport const QuarantineController = createContext()\r\n\r\nexport default function QuarantineContext(props) {\r\n    const [quarantineData, quarantineDataDispatch] = useReducer(quarantineReducer, [\r\n        {\r\n            id: \"1\",\r\n            quarantineName: \"សាលាគ្រួស\",\r\n            place: \"សាលា\",\r\n            village: \"គ្រួស\" ,\r\n            commune: \"ស្វាយដង្គំ\",\r\n            district:'សៀមរាប',\r\n            province:'សៀមរាប',\r\n            inCharge:'ដឹម ដយ',\r\n            tel:'015487762',\r\n            note:'test',\r\n            long:12.34343,\r\n            lat:3433.34,\r\n            capacity:30,\r\n        },\r\n        {\r\n            id: \"2\",\r\n            quarantineName: \"សាលាសម្ដេចឪ\",\r\n            place: \"សាលា\",\r\n            village: \"គោកដូង\" ,\r\n            commune: \"ទឹកវិល\",\r\n            district:'សៀមរាប',\r\n            province:'សៀមរាប',\r\n            inCharge:'ដា​ ធី',\r\n            tel:'087555999',\r\n            note:'098554477',\r\n            long:12.34343,\r\n            lat:3433.34,\r\n            capacity:30,\r\n        },\r\n    ])\r\n\r\n    const [subQuarantineData, subQuarantineDataDispatch] = useReducer(quarantineReducer, [\r\n        {\r\n            id: \"1\",\r\n            name: \"សំបូរ\",\r\n            gender: \"ប្រុស\",\r\n            province: \"សៀមរាប\",\r\n            district: \"សៀមរាប\",\r\n            commune: \"ស្វាយដង្គំ\",\r\n            village: \"ល្វា\",\r\n            status: \"អវិជ្ជមាន\",\r\n            relatedInfo:'ផ្ទាល់',\r\n        },\r\n        {\r\n            id: \"2\",\r\n            name: \"សំណាង\",\r\n            gender: \"ប្រុស\",\r\n            province: \"សៀមរាប\",\r\n            district: \"សៀមរាប\",\r\n            commune: \"ស្វាយដង្គំ\",\r\n            village: \"ល្វា\",\r\n            status: \"វិជ្ជមាន\",\r\n            relatedInfo:'ប្រយោល',\r\n        },\r\n    ])\r\n\r\n    return (\r\n        <QuarantineController.Provider\r\n            value={{\r\n                quarantineData,\r\n                subQuarantineData,\r\n\r\n                quarantineDataDispatch,\r\n                subQuarantineDataDispatch,\r\n            }}\r\n        >\r\n            {props.children}\r\n        </QuarantineController.Provider>\r\n    )\r\n}\r\n","import { setQuarantine, setSubQuarantine } from '../function/set'\r\n\r\nexport function hospitalReducer(state, action) {\r\n\r\n    let item = [...state]\r\n    let index1 = item.findIndex(e => e.id === action.payload.id)\r\n    let index = item.findIndex(e => e.id === action.payload)\r\n    switch (action.type) {\r\n        case 'ADD_HOSPITAL':\r\n            item.push(setQuarantine(action.payload, item.length))\r\n            return item;\r\n        case 'EDIT_HOSPITAL':\r\n            item[index1] = action.payload\r\n            return item;\r\n        case 'DELETE_HOSPITAL':\r\n            item.splice(index, 1)\r\n            return item;\r\n        case 'ADD_SUB_HOSPITAL':\r\n            item.push(setSubQuarantine(action.payload, item.length))\r\n            return item;\r\n        case 'EDIT_SUB_HOSPITAL':\r\n            item[index1] = action.payload\r\n            return item;\r\n        case 'DELETE_SUB_HOSPITAL':\r\n            item.splice(index, 1)\r\n            return item;\r\n\r\n        default:\r\n            throw new Error();\r\n    }\r\n}","import React, {useReducer, createContext} from 'react'\r\nimport { hospitalReducer } from '../reducer/hospitalReducer'\r\n\r\nexport const HospitalController = createContext()\r\n\r\nexport default function HospitalContext(props) {\r\n    const [hospitalData, hospitalDataDispatch] = useReducer(hospitalReducer, [\r\n        {\r\n            id: \"1\",\r\n            hospitalName: \"ពេទ្យខេត្តសៀមរាប\",\r\n            place: \"សាលា\",\r\n            village: \"គ្រួស\" ,\r\n            commune: \"ស្វាយដង្គំ\",\r\n            district:'សៀមរាប',\r\n            province:'សៀមរាប',\r\n            inCharge:'ដឹម ដយ',\r\n            tel:'015487762',\r\n            note:'test',\r\n            long:12.34343,\r\n            lat:3433.34,\r\n            capacity:30,\r\n        },\r\n        {\r\n            id: \"2\",\r\n            hospitalName: \"ពេទ្យនាគទេព\",\r\n            place: \"សាលា\",\r\n            village: \"គោកដូង\" ,\r\n            commune: \"ទឹកវិល\",\r\n            district:'សៀមរាប',\r\n            province:'សៀមរាប',\r\n            inCharge:'ដា​ ធី',\r\n            tel:'087555999',\r\n            note:'098554477',\r\n            long:12.34343,\r\n            lat:3433.34,\r\n            capacity:30,\r\n        },\r\n    ])\r\n\r\n    const [subHospitalData, subHospitalDataDispatch] = useReducer(hospitalReducer, [\r\n        {\r\n            id: \"1\",\r\n            name: \"សំបូរ\",\r\n            gender: \"ប្រុស\",\r\n            province: \"សៀមរាប\",\r\n            district: \"សៀមរាប\",\r\n            commune: \"ស្វាយដង្គំ\",\r\n            village: \"ល្វា\",\r\n            status: \"អវិជ្ជមាន\",\r\n            relatedInfo:'ផ្ទាល់',\r\n        },\r\n        {\r\n            id: \"2\",\r\n            name: \"សំណាង\",\r\n            gender: \"ប្រុស\",\r\n            province: \"សៀមរាប\",\r\n            district: \"សៀមរាប\",\r\n            commune: \"ស្វាយដង្គំ\",\r\n            village: \"ល្វា\",\r\n            status: \"វិជ្ជមាន\",\r\n            relatedInfo:'ប្រយោល',\r\n        },\r\n    ])\r\n\r\n    return (\r\n        <HospitalController.Provider\r\n            value={{\r\n                hospitalData,\r\n                subHospitalData,\r\n\r\n                hospitalDataDispatch,\r\n                subHospitalDataDispatch,\r\n            }}\r\n        >\r\n            {props.children}\r\n        </HospitalController.Provider>\r\n    )\r\n}\r\n","import React, { useState, useContext } from 'react'\r\nimport { Row, Col, Typography, DatePicker, Select, List,Button } from 'antd'\r\nimport { DashboardController } from '../context/dashboardContext'\r\nimport DatePickerTwo from '../component/datepickertwo/datePickerTwo'\r\n\r\nconst { Title } = Typography\r\nconst { RangePicker } = DatePicker\r\nconst { Option } = Select;\r\n\r\nexport default function Dashboard() {\r\n    const { dashBoardData, dashboardList } = useContext(DashboardController)\r\n\r\n    const [dataTop, setDataTop] = useState(dashBoardData)\r\n    const [dataTopRight, setDataTopRight] = useState(dashboardList)\r\n    const [displayDate, setDisplayDate] = useState(\"none\")\r\n\r\n    const dataTitle = [\"ចាប់ពី\", \"រហូតដល់\"]\r\n\r\n    const [ranges,setRange] =useState({\r\n        startDate:\"\",\r\n        endDate:\"\"\r\n    })\r\n\r\n\r\n    return (\r\n        <Row>\r\n            <Col\r\n                xs={24}\r\n                md={{ span: 12, offset: 12 }}\r\n            // style={{display:'flex',justifyContent:'flex-end'}}\r\n            >\r\n                <Row>\r\n                    <Col\r\n                        xs={24}\r\n                        md={12}\r\n                        className=\"inCol\"\r\n                    >\r\n                        {/* <RangePicker placeholder={dataTitle} style={{width:\"100%\"}} /> */}\r\n                        <Button style={{color:'#CCC', width: \"100%\"}} onClick={()=> setDisplayDate(displayDate===\"block\" ? \"none\":\"block\")}>ជ្រើសរើសកាលបរិច្ឆេទ</Button>\r\n                        <div style={{position:'absolute',zIndex:99,display:displayDate}}>\r\n                        <DatePickerTwo ranges={ranges} setRange={setRange} />\r\n                        </div>\r\n                    </Col>\r\n                    <Col\r\n                        xs={24}\r\n                        md={12}\r\n                        className=\"inCol\"\r\n                    >\r\n                        <Select\r\n                            showSearch\r\n                            style={{ width: \"100%\" }}\r\n                            placeholder=\"ស្វែងរក...\"\r\n                            optionFilterProp=\"children\"\r\n                            filterOption={(input, option) =>\r\n                                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                            }\r\n                        >\r\n                            <Option value=\"jack\">Jack</Option>\r\n                            <Option value=\"lucy\">Lucy</Option>\r\n                            <Option value=\"tom\">Tom</Option>\r\n                        </Select>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n            <Col\r\n                xs={24}\r\n                md={18}\r\n            >\r\n                <Row>\r\n                    {dataTop.map(load => {\r\n                        return (\r\n                            <Col\r\n                                md={8}\r\n                                xs={12}\r\n                            >\r\n                                <div className=\"dashboard-card\">\r\n                                    <Title level={4}>{load.title}</Title>\r\n                                    <span\r\n                                        className=\"dashboard-card-mid-text\"\r\n                                    >\r\n                                        ថ្ងៃនេះ៖ {load.today}នាក់\r\n                                    </span><br />\r\n                                    <span\r\n                                        className=\"dashboard-card-footer-text\"\r\n                                    >\r\n                                        សរុប៖ {load.total}នាក់\r\n                                    </span>\r\n                                </div>\r\n                            </Col>\r\n                        )\r\n                    })}\r\n                </Row>\r\n                <Row>\r\n                    <Col\r\n                        xs={24}\r\n                    >\r\n                        <p>Map</p>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n            <Col\r\n                xs={24}\r\n                md={6}\r\n            >\r\n                <Row>\r\n                    <Col\r\n                        xs={24}\r\n                    >\r\n                        <div className=\"inCol\">\r\n                            <List\r\n                                header={\r\n                                    <div>ករណីឆ្លងតាមស្រុក</div>\r\n                                }\r\n                                bordered\r\n                                dataSource={dataTopRight}\r\n                                renderItem={item => (\r\n                                    <List.Item style={{backgroundColor:'#FFF'}}>\r\n                                        <span>{item.title}</span>\r\n                                        <span>{item.case}នាក់</span>\r\n                                    </List.Item>\r\n                                )}\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col\r\n                        xs={24}\r\n                    >\r\n                        <p>Statistic</p>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n","import { Space, Tooltip, Popconfirm } from 'antd'\r\nimport {\r\n    EditOutlined,\r\n    DeleteOutlined\r\n} from '@ant-design/icons';\r\nimport moment from 'moment'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const caseCol = ({ handleDelete, limit, page }) => {\r\n    let no = ((page - 1) * limit)\r\n    var array = [\r\n        {\r\n            title: 'ល.រ',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: 50,\r\n            render: (text, record, i) => (\r\n                <Space size=\"middle\">\r\n                    {no += 1}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'ឈ្មោះករណី',\r\n            dataIndex: 'caseName',\r\n            key: 'caseName',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'កាលបរិច្ឆេទ',\r\n            dataIndex: 'date',\r\n            key: 'date',\r\n            width: 100,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {/* {record.date} */}\r\n                    {moment(record.date).format(\"ថ្ងែDD ខែMM ឆ្នាំYYYY\")}\r\n                </Space>\r\n            ),\r\n        },\r\n\r\n        {\r\n            title: 'ចំនួនអ្នកពាក់ព័ន្ធ',\r\n            dataIndex: 'related',\r\n            key: 'related',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'អាសយដ្ឋាន',\r\n            dataIndex: 'address',\r\n            key: 'address',\r\n            width: 150,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {(record.village !== \"ក្រៅសៀមរាប\") && record.village}\r\n                    {record.commune !== \"ក្រៅសៀមរាប\" && record.commune}\r\n                    {record.district !== \"ក្រៅសៀមរាប\" && record.district}\r\n                    {record.province && record.province}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'ចំណាំ',\r\n            dataIndex: 'other',\r\n            key: 'other',\r\n            width: 150,\r\n        },\r\n        {\r\n            key: 'action',\r\n            dataIndex: 'action',\r\n            fixed: 'right',\r\n            width: 50,\r\n            align: 'center',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    <Link className=\"link\" to={\"/subCase/\" + record.id}><EditOutlined /></Link>\r\n                    <Popconfirm\r\n                        title=\"តើអ្នកពិតចង់លុបមែនឬទេ?\"\r\n                        onConfirm={() => { handleDelete(record.id) }}\r\n                        okText=\"ចង់\"\r\n                        cancelText=\"មិនចង់\"\r\n                    >\r\n                        <span className=\"link\" style={{ color: \"red\" }}><DeleteOutlined /></span>\r\n                    </Popconfirm>\r\n\r\n                </Space>\r\n            ),\r\n        }\r\n    ]\r\n    return array\r\n}","import React from 'react'\r\nimport { Select } from 'antd'\r\n\r\nconst { Option } = Select;\r\n\r\nexport function ListSelect({ type, data, title, value, setValue, id, disabled }) {\r\n    return (\r\n        type === 0 ? (\r\n            <Select\r\n                showSearch\r\n                style={{ width: \"100%\" }}\r\n                placeholder={title}\r\n                value={value}\r\n                onChange={e => setValue(e)}\r\n                disabled={disabled}\r\n                optionFilterProp=\"children\"\r\n                filterOption={(input, option) =>\r\n                    option.children.indexOf(input) >= 0\r\n                }\r\n                filterSort={(optionA, optionB) =>\r\n                    optionA.children.localeCompare(optionB.children)\r\n                }\r\n            >\r\n                {data.map(load => {\r\n                    return <Option value={load.title} key={load.id}>{load.title}</Option>\r\n                })}\r\n            </Select>\r\n        ) : (\r\n\r\n            type === 1 ? (\r\n                <Select\r\n                    showSearch\r\n                    style={{ width: \"100%\" }}\r\n                    placeholder={title}\r\n                    value={value}\r\n                    onChange={e => setValue(e)}\r\n                    disabled={disabled}\r\n                    optionFilterProp=\"children\"\r\n                    filterOption={(input, option) =>\r\n                        option.children.indexOf(input) >= 0\r\n                    }\r\n                    filterSort={(optionA, optionB) =>\r\n                        optionA.children.localeCompare(optionB.children)\r\n                    }\r\n                >\r\n                    {data.map(load => {\r\n                        return <Option value={load.title} key={load.title}>{load.title}</Option>\r\n                    })}\r\n                </Select>\r\n            ) : (\r\n\r\n                type === 2 ? (\r\n                    <Select\r\n                        showSearch\r\n                        style={{ width: \"100%\" }}\r\n                        placeholder={title}\r\n                        value={value}\r\n                        onChange={e => setValue(e)}\r\n                        disabled={disabled}\r\n                        optionFilterProp=\"children\"\r\n                        filterOption={(input, option) =>\r\n                            option.children.indexOf(input) >= 0\r\n                        }\r\n                        filterSort={(optionA, optionB) =>\r\n                            optionA.children.localeCompare(optionB.children)\r\n                        }\r\n                    >\r\n                        {data.map(load => {\r\n                            return <Option value={load.id} key={load.id}>{load.lastName} {load.firstName}</Option>\r\n                        })}\r\n                    </Select>\r\n                ) : (\r\n                    <Select\r\n                        showSearch\r\n                        style={{ width: \"100%\" }}\r\n                        placeholder={title}\r\n                        value={value}\r\n                        onChange={e => setValue(e)}\r\n                        disabled={disabled}\r\n                        optionFilterProp=\"children\"\r\n                        filterOption={(input, option) =>\r\n                            option.children.indexOf(input) >= 0\r\n                        }\r\n                        filterSort={(optionA, optionB) =>\r\n                            optionA.children.localeCompare(optionB.children)\r\n                        }\r\n                    >\r\n                        <Option value=\"មិនដឹងច្បាស់\" key=\"none\">មិនដឹងច្បាស់</Option>\r\n                        {data.map(load => {\r\n                            return <Option value={load.title} key={load.id}>{load.title}</Option>\r\n                        })}\r\n                    </Select>\r\n                )\r\n            )\r\n\r\n        )\r\n\r\n    )\r\n}\r\n\r\nexport function ListUserSelect({ type, data, title, value, setValue, id, disabled }) {\r\n    return (\r\n        type === 0 ? (\r\n            <Select\r\n                showSearch\r\n                style={{ width: \"100%\" }}\r\n                placeholder={title}\r\n                value={value}\r\n                disabled={disabled}\r\n                optionFilterProp=\"children\"\r\n                onChange={(e) => setValue(e)}\r\n                filterOption={(input, option) =>\r\n                    option.children.indexOf(input) >= 0\r\n                }\r\n                filterSort={(optionA, optionB) =>\r\n                    optionA.children.localeCompare(optionB.children)\r\n                }\r\n            >\r\n                <Option key={0} value=\"New\">បញ្ចូលថ្មី</Option>\r\n                {data.map(load => {\r\n                    return (\r\n                        <Option value={load.id} key={load.id}>{load.idCard + \" \" + load.firstName + \" \" + load.lastName + \" (\" + load.gender + \") \" + load.tel}</Option>\r\n                    )\r\n                })}\r\n            </Select>\r\n        ) : (\r\n            <Select\r\n                showSearch\r\n                style={{ width: \"100%\" }}\r\n                placeholder={title}\r\n                value={value}\r\n                disabled={disabled}\r\n                optionFilterProp=\"children\"\r\n                onChange={(e) => setValue(e)}\r\n                filterOption={(input, option) =>\r\n                    option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                }\r\n                filterSort={(optionA, optionB) =>\r\n                    optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\r\n                }\r\n            >\r\n                <Option key={0} value=\"New\">New</Option>\r\n                {data.map(load => {\r\n                    return (\r\n                        <Option value={load.id} key={load.id}>{load.id + \" \" + load.name + \" (\" + load.gender + \")\"}</Option>\r\n                    )\r\n                })}\r\n            </Select>\r\n        )\r\n    )\r\n}","export function convertToDistrict(data) {\r\n    var item = []\r\n    data.map(load => {\r\n        return item.push({ id: load.district, title: load.district })\r\n    })\r\n\r\n    return item\r\n}\r\n\r\nexport function convertToCommune(distict, data) {\r\n    var item = []\r\n    data.map(load => {\r\n        if (distict === load.district) {\r\n            return (item.push({ id: load.commune, title: load.commune }))\r\n        }\r\n        return null\r\n    })\r\n\r\n    return item\r\n}\r\n\r\nexport function convertToVillage(commune, data) {\r\n    var item = []\r\n    data.map(load => {\r\n        if (commune === load.commune) {\r\n            item.push({ id: load.village, title: load.village })\r\n        }\r\n        return null\r\n    })\r\n\r\n    return item\r\n}\r\n\r\nexport function getRelated(e, condition){\r\n    var i = 0\r\n    if(e){\r\n        e.map(load => {\r\n            if(load.direct === condition){\r\n                i+=1\r\n            }\r\n            return null\r\n        })\r\n    }\r\n\r\n    return i\r\n}\r\n\r\nexport function getRoles(e){\r\n    var txt = \"\"\r\n    e.map(load => {\r\n        txt+=load.role+\", \"\r\n    })\r\n    return txt\r\n}\r\n\r\nexport function getFullNamePersonInCharge(e){\r\n    var txt = \"\"\r\n    e.map(load => {\r\n        txt+=load.firstName+\" \"+load.lastName\r\n    })\r\n    return txt\r\n}","import {gql} from '@apollo/client'\r\n\r\n\r\n\r\nexport const GET_ALL_CASES = gql`\r\nquery getCaseWithPagination($page:Int!, $limit:Int!, $keyword:String){\r\n    getCaseWithPagination(page:$page,limit:$limit,keyword:$keyword){\r\n      cases{\r\n        id\r\n        caseName\r\n        village\r\n        commune\r\n        district\r\n        province\r\n        date\r\n        createdAt\r\n        updatedAt\r\n        long\r\n        lat\r\n        other\r\n      },\r\n      paginator{\r\n        slNo\r\n        prev\r\n        next\r\n        perPage\r\n        totalPosts\r\n        totalPages\r\n        currentPage\r\n        hasPrevPage\r\n        hasNextPage\r\n        totalDocs\r\n      }\r\n    }\r\n  }\r\n\r\n`\r\n\r\nexport const CREATE_NEW_CASE = gql`\r\nmutation createCase($caseName:String,$village:String,$commune:String,$district:String,$province:String,$date:DateTime,$lat:Float,$long:Float,$other:String){\r\n    createCase(newCase:{\r\n      caseName:$caseName\r\n      village:$village\r\n      commune:$commune\r\n      district:$district\r\n      province:$province\r\n      date:$date\r\n        lat:$lat\r\n      long:$long\r\n      other:$other\r\n    }){\r\n      success\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_ALL_CASES_NO_LIMIT = gql`\r\nquery allCases{\r\n  allCases{\r\n    id\r\n    caseName\r\n  }\r\n}\r\n`;\r\n\r\nexport const GET_PERSON_BY_CASE = gql`\r\nquery getPersonalInfoByCaseWithPagination($page:Int!,$limit:Int!,$keyword:String,$caseId:ID!){\r\n  getPersonalInfoByCaseWithPagination(page:$page,limit:$limit,keyword:$keyword,caseId:$caseId){\r\n    personalInfos{\r\n      id\r\n      firstName\r\n      lastName\r\n      gender\r\n      village\r\n      district\r\n      commune\r\n      province\r\n      direct\r\n      currentState{\r\n        confirm\r\n        death\r\n        recovered\r\n      }\r\n    }\r\n    paginator{\r\n      slNo\r\n      prev\r\n      next\r\n      perPage\r\n      totalPosts\r\n      totalPages\r\n      currentPage\r\n      hasPrevPage\r\n      hasNextPage\r\n      totalDocs\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nexport const GET_CASE_BY_ID = gql`\r\nquery getCaseById($id:ID!){\r\n\tgetCaseById(id:$id){\r\n    id\r\n    caseName\r\n    village\r\n    commune\r\n    district\r\n    province\r\n    other\r\n    date\r\n    long\r\n    lat\r\n    createdAt\r\n    updatedAt\r\n  }\r\n}\r\n`;\r\n\r\nexport const UPDATE_CASE_BY_ID = gql`\r\nmutation updateCase(\r\n  $caseName:String,\r\n  $village:String,\r\n  $commune:String,\r\n  $district:String,\r\n  $province:String,\r\n  $date:DateTime,\r\n  $long:Float,\r\n  $lat:Float,\r\n  $other:String,\r\n  $id:ID!\r\n){\r\n  updateCase(updatedCase:{\r\n    caseName:$caseName\r\n    village:$village\r\n    commune:$commune\r\n    district:$district\r\n    province:$province\r\n    date:$date\r\n    long:$long\r\n    lat:$lat\r\n    other:$other\r\n  },id:$id){\r\n    success\r\n    message\r\n  }\r\n}\r\n`;","import React, { useContext, useState } from 'react'\r\nimport { Modal, Form, Input, DatePicker, Row, Col, Button } from 'antd'\r\nimport { CaseController } from '../../../context/caseContext'\r\nimport { provinceData, districtData, communeData, villageData, genderData } from '../../../context/headerContext'\r\nimport { ListSelect } from '../../../static/own-comp'\r\nimport { convertToCommune, convertToDistrict, convertToVillage } from '../../../function/fn'\r\nimport { CREATE_NEW_CASE } from '../../../graphql/case'\r\nimport { useMutation } from '@apollo/client'\r\nimport moment from 'moment'\r\n\r\nexport default function AddCase({ open, setOpen, refetch }) {\r\n    //const { caseDataDispatch } = useContext(CaseController)\r\n    const [createCase,{loading,error}] = useMutation(CREATE_NEW_CASE,{\r\n        onCompleted:({createCase})=>{\r\n            refetch();\r\n        },\r\n        onError:(error)=>{\r\n            console.log(error.message)\r\n        }\r\n    })\r\n\r\n\r\n    const [province, setProvince] = useState(\"\")\r\n    const [district, setDistrict] = useState(\"\")\r\n    const [commune, setCommune] = useState(\"\")\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Success:', values);\r\n\r\n        createCase({variables:{\r\n            caseName:values.caseName,\r\n            village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n            commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n            district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n            province: values.province === undefined ? \"ក្រៅសៀមរាប\" : values.province,\r\n            date:moment(values.date).format(),\r\n            lat:parseFloat(values.lat),\r\n            long:parseFloat(values.long),\r\n            other:values.other,\r\n        }})\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const setToProviceFn = (e) => {\r\n        form.setFieldsValue({\r\n            province: e,\r\n            district: null,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setProvince(e)\r\n        setDistrict(\"\")\r\n        setCommune(\"\")\r\n    };\r\n\r\n\r\n    const setToDistrictFn = (e) => {\r\n        form.setFieldsValue({\r\n            district: e,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setDistrict(e)\r\n        setCommune(\"\")\r\n    };\r\n\r\n    const setToCommuneFn = (e) => {\r\n        form.setFieldsValue({\r\n            commune: e,\r\n            village: null,\r\n        });\r\n\r\n        setCommune(e)\r\n    };\r\n\r\n    const setToVillageFn = (e) => {\r\n        form.setFieldsValue({\r\n            village: e\r\n        });\r\n    };\r\n\r\n\r\n    return (\r\n        <Modal\r\n            title=\"បញ្ចូលករណីថ្មី\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"addCase\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"caseName\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"ឈ្មោះករណី\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"date\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <DatePicker placeholder=\"កាលបរិច្ឆេទ\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={province !== \"សៀមរាប\" ? {span: 24} : { span: 11 } }>\r\n                        <Form.Item\r\n                            name=\"province\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <ListSelect type={1} data={provinceData} title=\"ខេត្ត/ក្រុង\" setValue={setToProviceFn} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {province === \"សៀមរាប\" ? (\r\n                        <>\r\n                            <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                                <Form.Item\r\n                                    name=\"district\"\r\n                                    rules={[{ required: true, message: 'Please input your username!' }]}\r\n                                >\r\n                                    <ListSelect type={0} data={convertToDistrict(districtData)} title=\"ស្រុក/ខណ្ឌ\" setValue={setToDistrictFn} disabled={province !== \"សៀមរាប\" ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 11 }}>\r\n                                <Form.Item\r\n                                    name=\"commune\"\r\n                                    rules={[{ required: true, message: 'Please input your username!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToCommune(district, communeData)} title=\"ឃុំ/សង្កាត់\" setValue={setToCommuneFn} disabled={district === \"\" || district === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                                <Form.Item\r\n                                    name=\"village\"\r\n                                    rules={[{ required: true, message: 'Please input your username!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToVillage(commune, villageData)} title=\"ភូមិ\" setValue={setToVillageFn} disabled={commune === \"\" || commune === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </>\r\n                    ) : null}\r\n\r\n                    \r\n\r\n                    <Col xs={24}>\r\n                        <Form.Item\r\n                            name=\"other\"\r\n                        >\r\n                            <Input placeholder=\"ចំណាំ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"long\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input type=\"number\" placeholder=\"longtitude\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 , offset:2}}>\r\n                        <Form.Item\r\n                            name=\"lat\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input type=\"number\" placeholder=\"latitude\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, {useContext, useState,useEffect} from 'react'\r\nimport { Row, Col, Button, Input, Table } from 'antd'\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { caseCol } from '../component/case/tableColumn/caseColumn'\r\nimport { CaseController } from '../context/caseContext'\r\nimport AddCase from '../component/case/modal/addCase';\r\nimport { useQuery } from '@apollo/client';\r\nimport {GET_ALL_CASES} from '../graphql/case'\r\n\r\nexport default function Case() {\r\n    //const {caseData, caseDataDispatch} = useContext(CaseController)\r\n    const [caseData,setCaseData] = useState([])\r\n    const [openAdd, setOpenAdd] = useState(false)\r\n\r\n    const [page, setPage] = useState(1)\r\n    const [limit, setLimit] = useState(10)\r\n    const [keyword, setKeyword] = useState(\"\")\r\n\r\n    const {data, loading,error, refetch} = useQuery(GET_ALL_CASES,{variables:{\r\n        page:page,\r\n        limit:limit,\r\n        keyword:keyword,\r\n    },onCompleted:({getCaseWithPagination})=>{\r\n        console.log(getCaseWithPagination)\r\n        setCaseData(getCaseWithPagination)\r\n    }})\r\n\r\n    useEffect(() => {\r\n        refetch()\r\n    }, [page,limit,keyword])\r\n\r\n    const handleDelete = (e) => {\r\n        //caseDataDispatch({type: \"DELETE_CASE\", payload: e})\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <AddCase open={openAdd} refetch={refetch} setOpen={setOpenAdd} />\r\n            <Col\r\n                xs={8}\r\n                md={18}\r\n            >\r\n                <Button\r\n                    type=\"primary\"\r\n                    onClick={() => setOpenAdd(true)}\r\n                >\r\n                    បញ្ចូលករណី\r\n                    <PlusOutlined />\r\n                </Button>\r\n            </Col>\r\n            <Col\r\n                xs={16}\r\n                md={6}\r\n            >\r\n                <Input.Search\r\n                    onChange={(e)=> setKeyword(e.target.value)}\r\n                    placeholder=\"ស្វែងរក...\"\r\n                />\r\n            </Col>\r\n            <Col\r\n                xs={24}\r\n                style={{ marginTop: 20 }}\r\n            >\r\n                <Table\r\n                    columns={caseCol({handleDelete, limit, page})}\r\n                    dataSource={caseData?.cases}\r\n                    rowKey={record => record.id}\r\n                    pagination={{\r\n                        total: caseData?.paginator?.totalDocs,\r\n                        // showSizeChanger: true,\r\n                        onChange:((page, pageSize) => {setPage(page);setLimit(pageSize)} )\r\n                    }}\r\n                    scroll={{ x: 1500 }} \r\n                    sticky \r\n                />\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n","import { Space, Popconfirm } from 'antd'\r\nimport {\r\n    EditOutlined,\r\n    DeleteOutlined,\r\n    EyeOutlined\r\n} from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const subCaseCol = ({handleDelete, handleEditSubCase}) => {\r\n    var array = [\r\n        {\r\n            title: 'ល.រ',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: 20,\r\n            render: (text, record, i) => (\r\n                <Space size=\"middle\">\r\n                    {i += 1}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'ឈ្មោះ',\r\n            dataIndex: 'personalInfos',\r\n            key: 'personalInfos',\r\n            width: 50,\r\n            render: (text, record) => (\r\n                <span size=\"middle\">\r\n                    {\r\n                        record.lastName+\" \"+record.firstName\r\n                    }\r\n                </span>\r\n            ),\r\n        },\r\n        {\r\n            title: 'ភេទ',\r\n            dataIndex: 'gender',\r\n            key: 'gender',\r\n            width: 20,\r\n            // render: (text, record) => (\r\n            //     <Space size=\"middle\">\r\n            //         {moment(record.date).format(\"ថ្ងែDD ខែMM ឆ្នាំYYYY\")}\r\n            //     </Space>\r\n            // ),\r\n        },\r\n\r\n        {\r\n            title: 'អាសយដ្ឋាន',\r\n            dataIndex: 'address',\r\n            key: 'address',\r\n            width: 100,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {record.village + \",\" + record.commune + \",\" + record.district + \",\" + record.province}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'ស្ថានភាព',\r\n            dataIndex: 'personalInfos',\r\n            key: 'personalInfos',\r\n            width: 50,\r\n            render: (text, record) => (\r\n                <span size=\"middle\">\r\n                    {\r\n                        // console.log(record.currentState.confirm)\r\n                        record.currentState.confirm ? \"វិជ្ជមាន\" : \"អវិជ្ជមាន\"\r\n                    }\r\n                </span>\r\n            ),\r\n        },\r\n        {\r\n            title: 'លក្ខណៈពាក់ព័ន្ធ',\r\n            dataIndex: 'direct',\r\n            key: 'direct',\r\n            width: 50,\r\n            render: (text, record) => (\r\n                <span size=\"middle\">\r\n                    {\r\n                        // console.log(record.currentState.confirm)\r\n                        record ? \"ផ្ទាល់\" : \"ប្រយោល\"\r\n                    }\r\n                </span>\r\n            ),\r\n        },\r\n        {\r\n            key: 'action',\r\n            dataIndex: 'action',\r\n            fixed: 'right',\r\n            width: 20,\r\n            align: 'center',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {/* <span className=\"link\" onClick={() => handleEditSubCase(record)}><EditOutlined /></span> */}\r\n                    <Link className=\"link\" to={\"/subPeople/\" + record.id}><EyeOutlined /></Link>\r\n                    <Popconfirm\r\n                        title=\"តើអ្នកពិតចង់លុបមែនឬទេ?\"\r\n                        onConfirm={() => {handleDelete(record.id) }}\r\n                        okText=\"ចង់\"\r\n                        cancelText=\"មិនចង់\"\r\n                    >\r\n                        <span className=\"link\" style={{ color: \"red\" }}><DeleteOutlined /></span>\r\n                    </Popconfirm>\r\n\r\n                </Space>\r\n            ),\r\n        }\r\n    ]\r\n    return array\r\n}","import React, {useContext, useEffect,useState} from 'react'\r\nimport { Modal, Form, Input, DatePicker, Row, Col, Button, message } from 'antd'\r\nimport {CaseController} from '../../../context/caseContext'\r\nimport {setEditCase} from '../../../function/set'\r\nimport { provinceData, districtData, communeData, villageData, genderData } from '../../../context/headerContext'\r\nimport { ListSelect } from '../../../static/own-comp'\r\nimport { convertToCommune, convertToDistrict, convertToVillage } from '../../../function/fn'\r\nimport { useMutation } from '@apollo/client'\r\nimport { UPDATE_CASE_BY_ID } from '../../../graphql/case'\r\n\r\nexport default function EditCase({ open, setOpen, data, caseId}) {\r\n    const {caseDataDispatch} = useContext(CaseController)\r\n\r\n    const [province, setProvince] = useState(\"\")\r\n    const [district, setDistrict] = useState(\"\")\r\n    const [commune, setCommune] = useState(\"\")\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const [updateCase,{loading}] = useMutation(UPDATE_CASE_BY_ID,{\r\n        onCompleted:()=>{\r\n            message.success(\"កែប្រែទិន្នន័យជោគជ័យ\")\r\n        }\r\n    })\r\n\r\n    console.log(data)\r\n\r\n    useEffect(() => {\r\n        if (data !== undefined){\r\n            form.setFieldsValue(setEditCase(data))\r\n            setProvince(data.province)\r\n            setDistrict(data.district)\r\n            setCommune(data.commune)\r\n        }\r\n\r\n    }, [data])\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Success:', values);\r\n\r\n        updateCase({\r\n            variables:{\r\n                caseName:values.caseName,\r\n                village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n                commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n                district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n                province: values.province === undefined ? \"\" : values.province,\r\n                date:values.date,\r\n                long:values.long,\r\n                lat:values.lat,\r\n                other:values.other,\r\n                id:caseId\r\n            }\r\n        })\r\n\r\n        // caseDataDispatch({type: 'EDIT_CASE', payload: {...values, id: data.id}})\r\n        // setData({...values, id: data.id})\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const setToProviceFn = (e) => {\r\n        form.setFieldsValue({\r\n            province: e,\r\n            district: null,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setProvince(e)\r\n        setDistrict(\"\")\r\n        setCommune(\"\")\r\n    };\r\n\r\n\r\n    const setToDistrictFn = (e) => {\r\n        form.setFieldsValue({\r\n            district: e,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setDistrict(e)\r\n        setCommune(\"\")\r\n    };\r\n\r\n    const setToCommuneFn = (e) => {\r\n        form.setFieldsValue({\r\n            commune: e,\r\n            village: null,\r\n        });\r\n\r\n        setCommune(e)\r\n    };\r\n\r\n    const setToVillageFn = (e) => {\r\n        form.setFieldsValue({\r\n            village: e\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            title=\"កែប្រែករណី\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n            destroyOnClose={false} \r\n            getContainer={false}\r\n            forceRender\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"editCase\"\r\n                initialValues={setEditCase(data)}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{span:11}}>\r\n                        <Form.Item\r\n                            name=\"caseName\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"ឈ្មោះករណី\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{span:11, offset: 2}}>\r\n                        <Form.Item\r\n                            name=\"date\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <DatePicker placeholder=\"កាលបរិច្ឆេទ\" style={{width: \"100%\"}} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"province\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <ListSelect type={1} data={provinceData} title=\"ខេត្ត/ក្រុង\" setValue={setToProviceFn} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {province === \"សៀមរាប\" ? (\r\n                        <>\r\n                            <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                                <Form.Item\r\n                                    name=\"district\"\r\n                                    rules={[{ required: true, message: 'Please input your username!' }]}\r\n                                >\r\n                                    <ListSelect type={0} data={convertToDistrict(districtData)} title=\"ស្រុក/ខណ្ឌ\" setValue={setToDistrictFn} disabled={province !== \"សៀមរាប\" ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 11 }}>\r\n                                <Form.Item\r\n                                    name=\"commune\"\r\n                                    rules={[{ required: true, message: 'Please input your username!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToCommune(district, communeData)} title=\"ឃុំ/សង្កាត់\" setValue={setToCommuneFn} disabled={district === \"\" || district === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                                <Form.Item\r\n                                    name=\"village\"\r\n                                    rules={[{ required: true, message: 'Please input your username!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToVillage(commune, villageData)} title=\"ភូមិ\" setValue={setToVillageFn} disabled={commune === \"\" || commune === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </>\r\n                    ) : null}\r\n\r\n                    <Col xs={24}>\r\n                        <Form.Item\r\n                            name=\"other\"\r\n                            \r\n                        >\r\n                            <Input placeholder=\"ចំណាំ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"long\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input type={1} placeholder=\"longtitude\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 , offset:2}}>\r\n                        <Form.Item\r\n                            name=\"lat\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input type={1} placeholder=\"latitude\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button \r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{width: \"100%\"}}\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { Form, Modal, Input, Row, Col, Button, Select } from 'antd'\r\nimport { CaseController } from '../../../context/caseContext'\r\nimport { ListSelect } from '../../../static/own-comp'\r\nimport { provinceData, districtData, communeData, villageData, genderData } from '../../../context/headerContext'\r\nimport { convertToDistrict, convertToCommune, convertToVillage } from '../../../function/fn'\r\n\r\nconst { Option } = Select\r\n\r\nexport default function AddSubCase({ open, setOpen, caseId }) {\r\n    const { subCaseDataDispatch } = useContext(CaseController)\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const [province, setProvince] = useState(\"\")\r\n    const [district, setDistrict] = useState(\"\")\r\n    const [commune, setCommune] = useState(\"\")\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Success:', values);\r\n\r\n        subCaseDataDispatch({ type: 'ADD_SUB_CASE', payload: {...values, caseId: caseId} })\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const setToGenderFn = (e) => {\r\n        form.setFieldsValue({\r\n            gender: e\r\n        });\r\n    };\r\n\r\n    const setToProviceFn = (e) => {\r\n        form.setFieldsValue({\r\n            province: e,\r\n            district: null,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setProvince(e)\r\n        setDistrict(\"\")\r\n        setCommune(\"\")\r\n    };\r\n\r\n\r\n    const setToDistrictFn = (e) => {\r\n        form.setFieldsValue({\r\n            district: e,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setDistrict(e)\r\n        setCommune(\"\")\r\n    };\r\n\r\n    const setToCommuneFn = (e) => {\r\n        form.setFieldsValue({\r\n            commune: e,\r\n            village: null,\r\n        });\r\n\r\n        setCommune(e)\r\n    };\r\n\r\n    const setToVillageFn = (e) => {\r\n        form.setFieldsValue({\r\n            village: e\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            title=\"បញ្ចូលអ្ន​កពាក់ព័ន្ធ\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"addSubCase\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"name\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"ឈ្មោះ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"gender\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n\r\n                            <ListSelect type={0} data={genderData} title=\"ភេទ\" setValue={setToGenderFn} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"province\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <ListSelect type={1} data={provinceData} title=\"ខេត្ត/ក្រុង\" setValue={setToProviceFn} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {province === \"សៀមរាប\" ? (\r\n                        <>\r\n                            <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                                <Form.Item\r\n                                    name=\"district\"\r\n                                    rules={[{ required: true, message: 'Please input your username!' }]}\r\n                                >\r\n                                    <ListSelect type={0} data={convertToDistrict(districtData)} title=\"ស្រុក/ខណ្ឌ\" setValue={setToDistrictFn} disabled={province !== \"សៀមរាប\" ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 11 }}>\r\n                                <Form.Item\r\n                                    name=\"commune\"\r\n                                    rules={[{ required: true, message: 'Please input your username!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToCommune(district, communeData)} title=\"ឃុំ/សង្កាត់\" setValue={setToCommuneFn} disabled={district === \"\" || district === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                                <Form.Item\r\n                                    name=\"village\"\r\n                                    rules={[{ required: true, message: 'Please input your username!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToVillage(commune, villageData)} title=\"ភូមិ\" setValue={setToVillageFn} disabled={commune === \"\" || commune === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </>\r\n                    ) : null}\r\n\r\n\r\n                    <Col xs={24} md={province === \"សៀមរាប\" ? { span: 11 } : {span: 11, offset: 2}}>\r\n                        <Form.Item\r\n                            name=\"status\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Select\r\n                                showSearch\r\n                                style={{ width: \"100%\" }}\r\n                                placeholder=\"ស្ថានភាព\"\r\n                                optionFilterProp=\"children\"\r\n                                filterOption={(input, option) =>\r\n                                    option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                }\r\n                            >\r\n                                <Option value=\"វិជ្ជមាន\">វិជ្ជមាន</Option>\r\n                                <Option value=\"អវិជ្ជមាន\">អវិជ្ជមាន</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={province === \"សៀមរាប\" ? {span: 11, offset: 2} : { span: 24 }}>\r\n                        <Form.Item\r\n                            name=\"relatedInfo\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Select\r\n                                showSearch\r\n                                style={{ width: \"100%\" }}\r\n                                placeholder=\"លក្ខណៈពាក់ព័ន្ធ\"\r\n                                optionFilterProp=\"children\"\r\n                                filterOption={(input, option) =>\r\n                                    option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                }\r\n                            >\r\n                                <Option value=\"ផ្ទាល់\">ផ្ទាល់</Option>\r\n                                <Option value=\"ប្រយោល\">ប្រយោល</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useContext, useState, useEffect } from 'react'\r\nimport { Form, Modal, Input, Row, Col, Button, Select } from 'antd'\r\nimport { CaseController } from '../../../context/caseContext'\r\nimport { ListSelect } from '../../../static/own-comp'\r\nimport { provinceData, districtData, communeData, villageData, genderData } from '../../../context/headerContext'\r\nimport { convertToDistrict, convertToCommune, convertToVillage } from '../../../function/fn'\r\nimport {setEditSubCase} from '../../../function/set'\r\n\r\nconst { Option } = Select\r\n\r\nexport default function EditSubCase({ open, setOpen, data, setData }) {\r\n    const {subCaseDataDispatch} = useContext(CaseController)\r\n    \r\n    let [form] = Form.useForm()\r\n\r\n    const [province, setProvince] = useState(\"\")\r\n    const [district, setDistrict] = useState(\"\")\r\n    const [commune, setCommune] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        // form.setFieldsValue(\r\n        //     setEditSubCase(data)\r\n        // )\r\n        setProvince(data.province)\r\n        setDistrict(data.district)\r\n        setCommune(data.commune)\r\n    }, [data])\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Success:', values);\r\n\r\n        subCaseDataDispatch({type: 'EDIT_SUB_CASE', payload: {...values, id: data.id}})\r\n        setData({...values, id: data.id})\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const setToGenderFn = (e) => {\r\n        form.setFieldsValue({\r\n            gender: e\r\n        });\r\n    };\r\n\r\n    const setToProviceFn = (e) => {\r\n        form.setFieldsValue({\r\n            province: e,\r\n            district: null,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setProvince(e)\r\n        setDistrict(\"\")\r\n        setCommune(\"\")\r\n    };\r\n\r\n\r\n    const setToDistrictFn = (e) => {\r\n        form.setFieldsValue({\r\n            district: e,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setDistrict(e)\r\n        setCommune(\"\")\r\n    };\r\n\r\n    const setToCommuneFn = (e) => {\r\n        form.setFieldsValue({\r\n            commune: e,\r\n            village: null,\r\n        });\r\n\r\n        setCommune(e)\r\n    };\r\n\r\n    const setToVillageFn = (e) => {\r\n        form.setFieldsValue({\r\n            village: e\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            title=\"កែប្រែអ្នកពាក់ព័ន្ធ\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"editSubCase\"\r\n                initialValues={setEditSubCase(data)}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"name\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"ឈ្មោះ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"gender\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n\r\n                            <ListSelect type={0} data={genderData} title=\"ភេទ\" setValue={setToGenderFn} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"province\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <ListSelect type={1} data={provinceData} title=\"ខេត្ត/ក្រុង\" setValue={setToProviceFn} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {province === \"សៀមរាប\" ? (\r\n                        <>\r\n                            <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                                <Form.Item\r\n                                    name=\"district\"\r\n                                    rules={[{ required: true, message: 'Please input your username!' }]}\r\n                                >\r\n                                    <ListSelect type={0} data={convertToDistrict(districtData)} title=\"ស្រុក/ខណ្ឌ\" setValue={setToDistrictFn} disabled={province !== \"សៀមរាប\" ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 11 }}>\r\n                                <Form.Item\r\n                                    name=\"commune\"\r\n                                    rules={[{ required: true, message: 'Please input your username!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToCommune(district, communeData)} title=\"ឃុំ/សង្កាត់\" setValue={setToCommuneFn} disabled={district === \"\" || district === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                                <Form.Item\r\n                                    name=\"village\"\r\n                                    rules={[{ required: true, message: 'Please input your username!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToVillage(commune, villageData)} title=\"ភូមិ\" setValue={setToVillageFn} disabled={commune === \"\" || commune === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </>\r\n                    ) : null}\r\n\r\n\r\n                    <Col xs={24} md={province === \"សៀមរាប\" ? { span: 11 } : {span: 11, offset: 2}}>\r\n                        <Form.Item\r\n                            name=\"status\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Select\r\n                                showSearch\r\n                                style={{ width: \"100%\" }}\r\n                                placeholder=\"ស្ថានភាព\"\r\n                                optionFilterProp=\"children\"\r\n                                filterOption={(input, option) =>\r\n                                    option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                }\r\n                            >\r\n                                <Option value=\"វិជ្ជមាន\">វិជ្ជមាន</Option>\r\n                                <Option value=\"អវិជ្ជមាន\">អវិជ្ជមាន</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={province === \"សៀមរាប\" ? {span: 11, offset: 2} : { span: 24 }}>\r\n                        <Form.Item\r\n                            name=\"relatedInfo\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Select\r\n                                showSearch\r\n                                style={{ width: \"100%\" }}\r\n                                placeholder=\"លក្ខណៈពាក់ព័ន្ធ\"\r\n                                optionFilterProp=\"children\"\r\n                                filterOption={(input, option) =>\r\n                                    option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                }\r\n                            >\r\n                                <Option value=\"ផ្ទាល់\">ផ្ទាល់</Option>\r\n                                <Option value=\"ប្រយោល\">ប្រយោល</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import { Col, Row, Typography, Table } from 'antd'\r\nimport React, { useState, useContext, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { CaseController } from '../../context/caseContext'\r\nimport moment from 'moment'\r\nimport { subCaseCol } from './tableColumn/subCaseColumn'\r\nimport { PlusCircleOutlined, EditOutlined } from '@ant-design/icons';\r\nimport EditCase from './modal/editCase'\r\nimport AddSubCase from './modal/addSubCase'\r\nimport EditSubCase from './modal/editSubCase'\r\nimport { getRelated } from '../../function/fn'\r\nimport { useMutation, useQuery } from '@apollo/client'\r\nimport { GET_PERSON_BY_CASE } from '../../graphql/case'\r\nimport { GET_CASE_BY_ID } from '../../graphql/case'\r\n\r\nconst { Title } = Typography\r\n\r\nexport default function SubCase() {\r\n    // const { subCaseData, subCaseDataDispatch } = useContext(CaseController)\r\n\r\n    let { id } = useParams();\r\n\r\n    const [headerData, setHeaderData] = useState()\r\n    const [updateSubData, setUpdateSubData] = useState({})\r\n\r\n    const [subCaseData, setSubCaseData] = useState([])\r\n    const [openEdit, setOpenEdit] = useState(false)\r\n    const [openAddSub, setOpenAddSub] = useState(false)\r\n    const [openEditSub, setOpenEditSub] = useState(false)\r\n    const [caseData, setCaseData] = useState({})\r\n\r\n    const [page, setPage] = useState(1)\r\n    const [limit, setLimit] = useState(10)\r\n    const [keyword, setKeyword] = useState(\"\")\r\n\r\n    const { data, refetch } = useQuery(GET_PERSON_BY_CASE, {\r\n        variables: {\r\n            page: page,\r\n            limit: limit,\r\n            keyword: keyword,\r\n            caseId: id\r\n        },\r\n        onCompleted: ({ getPersonalInfoByCaseWithPagination }) => {\r\n            console.log(getPersonalInfoByCaseWithPagination)\r\n            setSubCaseData(getPersonalInfoByCaseWithPagination)\r\n        }\r\n    })\r\n\r\n    const { data: dataCase } = useQuery(GET_CASE_BY_ID, {\r\n        variables: {\r\n            id: id\r\n        },\r\n        onCompleted: ({ getCaseById }) => {\r\n            console.log(getCaseById)\r\n            setCaseData(getCaseById)\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        refetch()\r\n    }, [page, limit, keyword])\r\n\r\n    // console.log(headerData)\r\n    const handleDelete = (e) => {\r\n        // subCaseDataDispatch({type: \"DELETE_SUB_CASE\", payload: e})\r\n    }\r\n\r\n    const handleEditSubCase = (e) => {\r\n        setUpdateSubData(e)\r\n        setOpenEditSub(true)\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <EditCase open={openEdit} setOpen={setOpenEdit} data={caseData} caseId={id} />\r\n            <AddSubCase open={openAddSub} setOpen={setOpenAddSub} caseId={id} />\r\n            <EditSubCase open={openEditSub} setOpen={setOpenEditSub} data={updateSubData} setData={setUpdateSubData} />\r\n            <Col\r\n                xs={24}\r\n            >\r\n                <Title level={5}>ឈ្មោះករណី៖ {caseData?.caseName + \" \"}\r\n                    <EditOutlined className=\"link\" onClick={() => setOpenEdit(true)} />\r\n                </Title>\r\n            </Col>\r\n            <Col\r\n                xs={24}\r\n                md={11}\r\n                className=\"subCase-card\"\r\n            >\r\n                <p>កាលបរិច្ឆេទ៖ {moment(caseData?.date).format(\"ថ្ងែDD ខែMM ឆ្នាំYYYY\")}</p>\r\n\r\n                <p>អាសយដ្ឋាន៖ {\" \"}\r\n                    {caseData?.village !== \"ក្រៅសៀមរាប\" && caseData?.village + \",\"}\r\n                    {caseData?.commune !== \"ក្រៅសៀមរាប\" && caseData?.commune + \",\"}\r\n                    {caseData?.district !== \"ក្រៅសៀមរាប\" && caseData?.district + \",\"}\r\n                    {caseData?.province}</p>\r\n                <p>ចំនួនអ្នកពាក់ព័ន្ធករណី៖ {subCaseData?.personalInfos?.length}</p>\r\n                <p>ផ្សេងៗ៖ {caseData?.other}</p>\r\n            </Col>\r\n            <Col\r\n                xs={24}\r\n                md={{ span: 11, offset: 2 }}\r\n                className=\"subCase-card\"\r\n            >\r\n                <p>ចំនួនអ្នកពាក់ព័ន្ធផ្ទាល់៖ {getRelated(subCaseData?.personalInfos, true)}នាក់</p>\r\n                <p>ចំនួនអ្នកពាក់ព័ន្ធប្រយោល៖ {getRelated(subCaseData?.personalInfos, false)}នាក់</p>\r\n                {/* <p>ចំនួនអ្នកជាសះស្បើយ៖ {getRelated(subCaseData, \"សះស្បើយ\")}នាក់</p>\r\n                <p>ចំនួនអ្នកស្លាប់៖ {getRelated(subCaseData, \"ស្លាប់\")}នាក់</p> */}\r\n            </Col>\r\n\r\n\r\n            <Col\r\n                xs={24}\r\n                style={{ marginTop: 20 }}\r\n            >\r\n                <Title level={5}>\r\n                    អ្នកពាក់ព័ន្ធ៖\r\n                    {/* <PlusCircleOutlined className=\"link\" onClick={() => setOpenAddSub(true)}/> */}\r\n                </Title>\r\n\r\n            </Col>\r\n            <Col\r\n                xs={24}\r\n                md={24}\r\n            >\r\n                <Table\r\n                    columns={subCaseCol({ handleDelete, handleEditSubCase })}\r\n                    dataSource={subCaseData?.personalInfos}\r\n                    rowKey={record => record.id}\r\n                    pagination={{\r\n                        total: subCaseData?.paginator?.totalDocs,\r\n                        // showSizeChanger: true,\r\n                        onChange: ((page, pageSize) => { setPage(page); setLimit(pageSize) })\r\n                    }}\r\n                    scroll={{ x: 240 }}\r\n                    sticky\r\n                />\r\n            </Col>\r\n        </Row>\r\n\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Space, Popconfirm } from 'antd'\r\nimport {\r\n    EditOutlined,\r\n    DeleteOutlined,\r\n    KeyOutlined\r\n} from '@ant-design/icons';\r\nimport { getRoles } from '../../../function/fn';\r\n\r\nexport const userCol = ({ handleDelete, handleUserEdit,handleAccountEdit,handleUserRole, setRoleUserID , limit, page }) => {\r\n    let l = limit >= 20 ? limit/page : limit\r\n    let no = ((page-1) * l)\r\n\r\n    var array = [\r\n        {\r\n            title: 'ល.រ',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: 50,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {no+=1}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'ឈ្មោះសម្គាល់អ្នកប្រើប្រាស់',\r\n            dataIndex: 'username',\r\n            key: 'username',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'គោត្តនាម',\r\n            dataIndex: 'firstName',\r\n            key: 'firstName',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'នាម',\r\n            dataIndex: 'lastName',\r\n            key: 'lastName',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'តួនាទី',\r\n            dataIndex: 'roles',\r\n            key: 'roles',\r\n            width: 50,\r\n            render: (text, record) => (\r\n                <span onClick={()=> {handleUserRole(record.roles);setRoleUserID(record.id)}} className=\"link\" size=\"middle\">\r\n                    {\r\n                        getRoles(record.roles)\r\n                    }\r\n                </span>\r\n            ),\r\n        },\r\n        {\r\n            title: 'លេខទូរស័ព្ទ',\r\n            dataIndex: 'tel',\r\n            key: 'tel',\r\n            width: 80,\r\n        },\r\n        {\r\n            title: 'អ៊ីម៉ែល',\r\n            dataIndex: 'email',\r\n            key: 'email',\r\n            width: 100,\r\n        },\r\n\r\n        {\r\n            key: 'action',\r\n            dataIndex: 'action',\r\n            fixed: 'right',\r\n            width: 50,\r\n            align: 'center',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    \r\n                    <span className=\"link\" onClick={() => handleAccountEdit(record)}><KeyOutlined /></span>\r\n                    <span className=\"link\" onClick={() => handleUserEdit(record)}><EditOutlined /></span>\r\n                    <Popconfirm\r\n                        title=\"តើអ្នកពិតចង់លុបមែនឬទេ?\"\r\n                        onConfirm={() => { handleDelete(record.id) }}\r\n                        okText=\"ចង់\"\r\n                        cancelText=\"មិនចង់\"\r\n                    >\r\n                        <span className=\"link\" style={{ color: \"red\" }}><DeleteOutlined /></span>\r\n                    </Popconfirm>\r\n\r\n                </Space>\r\n            ),\r\n        }\r\n    ]\r\n    return array\r\n}","import React, { useContext } from 'react'\r\nimport { Modal, Form, Input, Row, Col, Button,Select, message} from 'antd';\r\nimport { UserController } from '../../../context/userContext'\r\nimport { useMutation } from '@apollo/client';\r\nimport { REGISTER_USER } from '../../../graphql/auth';\r\n\r\nconst { Option } = Select;\r\n\r\nexport default function AddUser({ open, setOpen }) {\r\n\r\n    const [registerUser,{loading,error}] = useMutation(REGISTER_USER,{\r\n        onCompleted:({registerUser})=>{\r\n            console.log(registerUser)\r\n            message.success(\"បញ្ចូលបានជោគជ័យ\")\r\n            setOpen(false)\r\n        },\r\n        onError:(error)=>{\r\n            console.log(error.message)\r\n        }\r\n    })\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Success:', values);\r\n\r\n        registerUser({\r\n            variables:{\r\n\r\n                username:values.username,\r\n                password:values.password,\r\n                firstname:values.firstname,\r\n                lastname:values.lastname,\r\n                email:values.email,\r\n                role:values.role,\r\n                tel:values.tel\r\n\r\n            }\r\n        })\r\n\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            title=\"បញ្ចូលអ្នកប្រើប្រាស់ថ្មី\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"addUser\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"username\"\r\n                            rules={[{ required: true, message: 'Field is required!' }]}\r\n                        >\r\n                            <Input placeholder=\"ឈ្មោះសម្គាល់អ្នកប្រើប្រាស់\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"password\"\r\n                            rules={[{ required: true, message: 'Field is required!' }]}\r\n                        >\r\n                            <Input placeholder=\"លេខកូដសម្ងាត់\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"firstname\"\r\n                            rules={[{ required: true, message: 'Field is required!' }]}\r\n                        >\r\n                            <Input placeholder=\"នាម\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"lastname\"\r\n                            rules={[{ required: true, message: 'Field is required!' }]}\r\n                        >\r\n                            <Input placeholder=\"គោត្តនាម\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"role\"\r\n                            rules={[{ required: true, message: 'Field is required!' }]}\r\n                        >\r\n                            {/* <Input placeholder=\"តួនាទី\" /> */}\r\n                            <Select placeholder=\"តួនាទី\" style={{ width: \"100%\" }}>\r\n                            <Option value=\"BASIC\">BASIC</Option>\r\n                                <Option value=\"ADMIN\">ADMIN</Option>\r\n                                <Option value=\"SUPPER\">SUPPER</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"tel\"\r\n                        // rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"លេខទូរស័ព្ទ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Form.Item\r\n                            name=\"email\"\r\n                        // rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input type=\"email\" placeholder=\"អ៊ីម៉ែល\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                            // onClick={()=> }\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { Modal, Form, Input, Row, Col, Button, Select, message } from 'antd';\r\nimport { UserController } from '../../../context/userContext'\r\nimport { setEditUser } from '../../../function/set';\r\nimport { useMutation } from '@apollo/client';\r\nimport { UPDATE_USER_DETAIL } from '../../../graphql/auth';\r\n\r\nconst { Option } = Select;\r\n\r\nexport default function EditUser({ open, setOpen, data }) {\r\n    //const { userDataDispatch } = useContext(UserController)\r\n\r\n    const [updateUserDetail, { loading, error }] = useMutation(UPDATE_USER_DETAIL,{\r\n        onCompleted:({updateUserDetail})=>{\r\n            console.log(updateUserDetail)\r\n            message.success(\"កែប្រែបានជោគជ័យ\")\r\n        },\r\n        onError:(error)=>{\r\n            console.log(error.message)\r\n            message.success(\"កែប្រែមានបញ្ហា!\")\r\n        }\r\n    })\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    \r\n\r\n    const onFinish = (values) => {\r\n\r\n        console.log(values)\r\n        updateUserDetail({variables:{\r\n            userId:data.id,\r\n            firstName:values.firstName,\r\n            lastName:values.lastName,\r\n            email:values.email,\r\n            tel:values.tel,\r\n        }})\r\n\r\n        \r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            title=\"កែប្រេអ្នកប្រើប្រាស់\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"editUser\"\r\n                fields={[\r\n                    \r\n                    {\r\n                        name: ['firstName'],\r\n                        value: data.firstName,\r\n                    },\r\n                    {\r\n                        name: ['lastName'],\r\n                        value: data.lastName,\r\n                    },\r\n                    {\r\n                        name: ['tel'],\r\n                        value: data.tel,\r\n                    },\r\n                    {\r\n                        name: ['email'],\r\n                        value: data.email,\r\n                    },\r\n                    \r\n\r\n                ]}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    {/* <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"username\"\r\n                            rules={[{ required: true, message: 'Field is required!' }]}\r\n                        >\r\n                            <Input placeholder=\"ឈ្មោះសម្គាល់អ្នកប្រើប្រាស់\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"password\"\r\n                            rules={[{ required: true, message: 'Field is required!' }]}\r\n                        >\r\n                            <Input placeholder=\"លេខកូដសម្ងាត់\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col> */}\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"firstName\"\r\n                            rules={[{ required: true, message: 'Field is required!' }]}\r\n                        >\r\n                            <Input placeholder=\"នាម\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"lastName\"\r\n                            rules={[{ required: true, message: 'Field is required!' }]}\r\n                        >\r\n                            <Input placeholder=\"គោត្តនាម\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"tel\"\r\n                        // rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"លេខទូរស័ព្ទ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"email\"\r\n                        // rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input type=\"email\" placeholder=\"អ៊ីម៉ែល\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            កែប្រែទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal >\r\n    )\r\n}\r\n","import { Space } from \"antd\"\r\nimport { Popconfirm } from \"antd\"\r\nimport { DeleteOutlined } from \"@ant-design/icons\"\r\n\r\nexport const roleColumn = [\r\n    {\r\n        title: 'តួនាទី',\r\n        dataIndex: 'role',\r\n        key: 'role',\r\n        width: 20,\r\n    },\r\n    {\r\n        dataIndex: 'action',\r\n        key: 'action',\r\n        width: 20,\r\n        render:() => (\r\n            <Space size=\"middle\"\r\n            >\r\n                <Popconfirm\r\n                        title=\"តើអ្នកពិតចង់លុបមែនឬទេ?\"\r\n                        // onConfirm={() => { handleDelete(record.id) }}\r\n                        okText=\"ចង់\"\r\n                        cancelText=\"មិនចង់\"\r\n                    >\r\n                        <span className=\"link\" style={{ color: \"red\" }}><DeleteOutlined /></span>\r\n                </Popconfirm>\r\n            </Space>\r\n        )\r\n    }\r\n]","import React, { useContext, useState } from 'react'\r\nimport { Modal, Form, Input, Row, Col, Button, Select, message, Table } from 'antd';\r\nimport { UserController } from '../../../context/userContext'\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_USER_ROLE } from '../../../graphql/auth';\r\nimport { roleColumn } from '../tableColumn/roleColumn';\r\n\r\nconst { Option } = Select;\r\n\r\nexport default function AddRole({ open, setOpen,userID, dataRoles }) {\r\n   \r\n    const [addRole, { loading, error }] = useMutation(ADD_USER_ROLE, {\r\n        onCompleted: ({ addRole }) => {\r\n            message.success(\"បញ្ចូលបានជោគជ័យ\")\r\n        },\r\n        onError: (error) => {\r\n            console.log(error.message)\r\n            message.error(\"បញ្ចូលបានជោគជ័យ\")\r\n        }\r\n    })\r\n\r\n    let [form] = Form.useForm()\r\n    // const [data, setData] = useState(dataRoles)\r\n\r\n    // console.log(userID)\r\n\r\n    const onFinish = (values) => {\r\n        // console.log('Success:', values);\r\n\r\n        addRole({\r\n            variables: {\r\n                userId:userID,\r\n                role:values.role\r\n            }\r\n        })\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            title=\"បញ្ចូលអតួនាទី\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"addUser\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={12}>\r\n                        <Form.Item\r\n                            name=\"role\"\r\n                            rules={[{ required: true, message: 'Field is required!' }]}\r\n                        >\r\n                            {/* <Input placeholder=\"តួនាទី\" /> */}\r\n                            <Select placeholder=\"តួនាទី\" style={{ width: \"100%\" }}>\r\n\r\n                                <Option value=\"BASIC\">BASIC</Option>\r\n                                <Option value=\"ADMIN\">ADMIN</Option>\r\n                                <Option value=\"SUPPER\">SUPPER</Option>\r\n                                {/* <Option value=\"USER\">USER</Option> */}\r\n                                {/* 'BASIC','ADMIN','SUPPER','ACCOUNTANT','MARTMANAGER','CEO' */}\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col xs={{span: 11, offset:1}}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        // onClick={()=> }\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Table\r\n                            columns={roleColumn}\r\n                            dataSource={dataRoles}\r\n                            pagination={false}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { Modal, Form, Input, Row, Col, Button, Select, message } from 'antd';\r\nimport { UserController } from '../../../context/userContext'\r\nimport { setEditUser } from '../../../function/set';\r\nimport { useMutation } from '@apollo/client';\r\nimport { UPDATE_USER_DETAIL } from '../../../graphql/auth';\r\nimport { EyeTwoTone,EyeInvisibleOutlined } from '@ant-design/icons';\r\n\r\nconst { Option } = Select;\r\n\r\nexport default function EditAccount({ open, setOpen, data }) {\r\n    //const { userDataDispatch } = useContext(UserController)\r\n\r\n    const [updateUserDetail, { loading, error }] = useMutation(UPDATE_USER_DETAIL,{\r\n        onCompleted:({updateUserDetail})=>{\r\n            console.log(updateUserDetail)\r\n            message.success(\"កែប្រែបានជោគជ័យ\")\r\n        },\r\n        onError:(error)=>{\r\n            console.log(error.message)\r\n            message.success(\"កែប្រែមានបញ្ហា!\")\r\n        }\r\n    })\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const onFinish = (values) => {\r\n\r\n        console.log(values)\r\n        updateUserDetail({variables:{\r\n            userId:data.id,\r\n            firstName:values.firstName,\r\n            lastName:values.lastName,\r\n            email:values.email,\r\n            tel:values.tel,\r\n        }})\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            title=\"កែប្រែលេខសម្ងាត់\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"editUser\"\r\n                fields={[\r\n                    {\r\n                        name: ['username'],\r\n                        value: data.username,\r\n                    },\r\n                    // {\r\n                    //     name: ['firstName'],\r\n                    //     value: data.firstName,\r\n                    // },\r\n                    // {\r\n                    //     name: ['lastName'],\r\n                    //     value: data.lastName,\r\n                    // },\r\n                    // {\r\n                    //     name: ['tel'],\r\n                    //     value: data.tel,\r\n                    // },\r\n                    // {\r\n                    //     name: ['email'],\r\n                    //     value: data.email,\r\n                    // },\r\n                    \r\n\r\n                ]}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"username\"\r\n                            rules={[{ required: true, message: 'Field is required!' }]}\r\n                        >\r\n                            <Input placeholder=\"ឈ្មោះសម្គាល់អ្នកប្រើប្រាស់\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"password\"\r\n                            rules={[{ required: true, message: 'Field is required!' }]}\r\n                        >\r\n                            <Input.Password placeholder=\"លេខកូដសម្ងាត់\" style={{ width: \"100%\" }} iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11}}>\r\n                        <Form.Item\r\n                            name=\"cfpassword\"\r\n                            rules={[{ required: true, message: 'Field is required!' }]}\r\n                        >\r\n                            <Input.Password placeholder=\"បញ្ជាក់លេខកូដសម្ងាត់\" style={{ width: \"100%\" }} iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    \r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            កែប្រែទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal >\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Row, Col, Button, Input, Table, message } from 'antd'\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { userCol } from '../component/user/tableColumn/userColumn'\r\nimport { UserController } from '../context/userContext'\r\nimport AddUser from '../component/user/modal/addUser';\r\nimport EditUser from '../component/user/modal/editUser';\r\nimport { useQuery, useMutation } from '@apollo/client'\r\nimport { GET_ALL_USERS } from '../graphql/auth'\r\nimport { DELETE_USER } from '../graphql/auth';\r\nimport AddRole from '../component/user/modal/addRole';\r\nimport EditAccount from '../component/user/modal/editAccount';\r\n\r\nexport default function User() {\r\n\r\n    const [userData, setUserData] = useState([])\r\n\r\n    const [page, setPage] = useState(1)\r\n    const [limit, setLimit] = useState(10)\r\n    const [keyword, setKeyword] = useState(\"\")\r\n    \r\n    const [dataRoles, setDataRoles] = useState([])\r\n    const [openAdd, setOpenAdd] = useState(false)\r\n    const [openEdit, setOpenEdit] = useState(false)\r\n    const [userEdit, setUserEdit] = useState({});\r\n    const [openRole, setOpenRole] = useState(false)\r\n    const [roleUserID, setRoleUserID] = useState(\"\")\r\n    const [openEditAccount, setOpenEditAccount] = useState(false)\r\n\r\n    //query all user\r\n    const { data, loading, error,refetch } = useQuery(GET_ALL_USERS, {\r\n        variables: {\r\n            page:page,\r\n            limit: limit,\r\n            keyword: keyword,\r\n        }, onCompleted: ({ getUserWithPagination }) => {\r\n            console.log(getUserWithPagination)\r\n            setUserData(getUserWithPagination)\r\n        }\r\n    })\r\n\r\n    //delete user on ID\r\n    const [deleteUser, { loading: deleteLoading, error: deleteError }] = useMutation(DELETE_USER, {\r\n        onCompleted: ({ deleteUser }) => {\r\n            refetch()\r\n            message.success(\"លុបបានជោគជ័យ\")\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        refetch()\r\n    }, [page,limit,keyword])\r\n\r\n    const handleUserRole = (e) => {\r\n        setOpenRole(true)\r\n        setDataRoles(e)\r\n    }\r\n\r\n    const handleUserEdit = (e) => {\r\n        setUserEdit(e)\r\n        setOpenEdit(true)\r\n    }\r\n\r\n    const handleAccountEdit = (e) => {\r\n        setUserEdit(e)\r\n        setOpenEditAccount(true)\r\n    }\r\n\r\n    const handleDelete = (e) => {\r\n        //userDataDispatch({ type: \"DELETE_USER\", payload: e })\r\n        console.log(e)\r\n        deleteUser({variables:{\r\n            userId:e\r\n        }})\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <AddUser open={openAdd} setOpen={setOpenAdd} />\r\n            <EditUser open={openEdit} setOpen={setOpenEdit} data={userEdit} />\r\n            <AddRole open={openRole} setOpen={setOpenRole} userID={roleUserID} dataRoles={dataRoles} />\r\n            <EditAccount open={openEditAccount} setOpen={setOpenEditAccount} data={userEdit} />\r\n            <Col\r\n                xs={8}\r\n                md={18}\r\n            >\r\n                <Button\r\n                    type=\"primary\"\r\n                    onClick={() => setOpenAdd(true)}\r\n                >\r\n                    បញ្ចូលអ្នកប្រើប្រាស់\r\n                    <PlusOutlined />\r\n                </Button>\r\n            </Col>\r\n            <Col\r\n                xs={16}\r\n                md={6}\r\n            >\r\n                <Input.Search\r\n                    onChange={(e)=> setKeyword(e.target.value)}\r\n                    placeholder=\"ស្វែងរក...\"\r\n                />\r\n            </Col>\r\n            <Col\r\n                xs={24}\r\n                style={{ marginTop: 20 }}\r\n            >\r\n                <Table\r\n                    // caseCol({handleDelete})\r\n                    columns={userCol({ handleDelete, handleUserEdit,handleAccountEdit, handleUserRole,setRoleUserID,limit, page })}\r\n                    dataSource={userData.users}\r\n                    rowKey={record => record.id}\r\n                    pagination={{\r\n                        total: userData?.paginator?.totalDocs,\r\n                        //pageSizeOptions:[\"10\", \"20\"],\r\n                        // showSizeChanger: true,\r\n                        current:userData?.paginator?.currentPage,\r\n                        onChange:((page, pageSize) => {setPage(page);setLimit(pageSize)} )\r\n                    }}\r\n                    scroll={{ x: 400 }}\r\n                    sticky\r\n                />\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Space, Tooltip, Popconfirm } from 'antd'\r\nimport {\r\n    EditOutlined,\r\n    DeleteOutlined\r\n} from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom'\r\nimport { getFullNamePersonInCharge, getRoles } from '../../../function/fn';\r\nimport moment from 'moment';\r\n\r\nexport const quarantineCol = ({handleDelete,limit,page}) => {\r\n\r\n    let no = ((page-1) * limit)\r\n\r\n    let d = new Date().setHours(0,0,0,0)\r\n    let m = moment(d).format(\"DD-MM-yyyy hh:mm:ss\")\r\n\r\n   \r\n    var array = [\r\n        {\r\n            title: 'ល.រ',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: 50,\r\n            render: (text, record, i) => (\r\n                <Space size=\"middle\">\r\n                    {no += 1}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'ឈ្មោះមណ្ឌល',\r\n            dataIndex: 'locationName',\r\n            key: 'locationName',\r\n            width: 100,\r\n        },\r\n       \r\n        {\r\n            title: 'អាសយដ្ឋាន  ',\r\n            dataIndex: 'address',\r\n            key: 'address',\r\n            width: 100,\r\n            render: (text, record) => (\r\n                // <Tooltip placement=\"top\" title={record.village + \",\" + record.commune + \",\" + record.district + \",\" + record.province}>\r\n                    <Space size=\"middle\">\r\n                        {(record.village !== \"ក្រៅសៀមរាប\") && record.village}\r\n                        {record.commune !== \"ក្រៅសៀមរាប\" && record.commune}\r\n                        {record.district !== \"ក្រៅសៀមរាប\" && record.district}\r\n                        {record.province && record.province}\r\n                        \r\n                    </Space>\r\n                // </Tooltip>\r\n            ),\r\n            \r\n        },\r\n        {\r\n            title: 'អ្នកទទួលខុសត្រូវ',\r\n            dataIndex: 'personInCharge',\r\n            key: 'personInCharge',\r\n            width: 100,\r\n            render: (text, record) => (\r\n                <span size=\"middle\">\r\n                    {\r\n                        // getFullNamePersonInCharge(record.personInCharge)\r\n                        record.personInCharge.lastName+\" \"+record.personInCharge.firstName\r\n                        // console.log(record.personInCharge)\r\n                    }\r\n                </span>\r\n            ),\r\n            \r\n        },\r\n        {\r\n            title: 'លេខទូរស័ព្ទ',\r\n            dataIndex: 'personInCharge',\r\n            key: 'personInCharge',\r\n            width: 100,\r\n            render: (text, record) => (\r\n                <span size=\"middle\">\r\n                    {\r\n                        // getFullNamePersonInCharge(record.personInCharge)\r\n                        record.personInCharge.tel\r\n                        // console.log(record.personInCharge)\r\n                    }\r\n                </span>\r\n            ),\r\n        },\r\n        {\r\n            title: 'ចំណាំ',\r\n            dataIndex: 'other',\r\n            key: 'other',\r\n            width: 100,\r\n        },\r\n    \r\n        {\r\n            key: 'action',\r\n            dataIndex: 'action',\r\n            fixed: 'right',\r\n            width: 50,\r\n            align: 'center',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    <Link className=\"link\" to={\"/subQuarantine/\"+record.id}><EditOutlined /></Link>\r\n                    <Popconfirm\r\n                        title=\"តើអ្នកពិតចង់លុបមែនឬទេ?\"\r\n                        onConfirm={() => { handleDelete(record.id) }}\r\n                        okText=\"ចង់\"\r\n                        cancelText=\"មិនចង់\"\r\n                    >\r\n                        <span className=\"link\" style={{ color: \"red\" }}><DeleteOutlined /></span>\r\n                    </Popconfirm>\r\n\r\n                </Space>\r\n            ),\r\n        }\r\n    ]\r\n    return array\r\n}","import {gql} from \"@apollo/client\"\r\n\r\nexport const GET_ALL_QUARANTINEINFO = gql`\r\nquery getQuarantineInfoWithPagination($page:Int!,$limit:Int!,$keyword:String){\r\n    getQuarantineInfoWithPagination(page:$page,limit:$limit,keyword:$keyword){\r\n      quarantineInfos{\r\n        id\r\n        locationName\r\n        village\r\n        commune\r\n        district\r\n        province\r\n        other\r\n        capacity\r\n        personInCharge{\r\n            firstName\r\n            lastName\r\n            position\r\n            tel\r\n            others\r\n        }\r\n        long\r\n        lat\r\n        createdAt\r\n        updatedAt\r\n       \r\n      },\r\n      paginator{\r\n        slNo\r\n        prev\r\n        next\r\n        perPage\r\n        totalPosts\r\n        totalPages\r\n        currentPage\r\n        hasPrevPage\r\n        hasNextPage\r\n        totalDocs\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_QUARANTINEINFO = gql`\r\nmutation createQuarantineInfo(\r\n    $locationName:String,\r\n    $village:String,\r\n    $commune:String,\r\n    $district:String,\r\n    $province:String,\r\n    $long: Float,\r\n    $lat:Float,\r\n    $other:String,\r\n    $firstName:String,\r\n    $lastName:String,\r\n    $position:String,\r\n    $tel:String,\r\n    $others:String,\r\n){\r\n    createQuarantineInfo(newQuarantineInfo:{\r\n      locationName:$locationName\r\n      village:$village\r\n      commune:$commune\r\n      district: $district\r\n      province:$province\r\n      long: $long\r\n      lat:$lat\r\n      other:$other\r\n      personInCharge:{\r\n        firstName:$firstName\r\n        lastName:$lastName\r\n        position:$position\r\n        tel:$tel\r\n        others:$others\r\n      }\r\n    }){\r\n      success\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DELETE_QUARANTINE_BY_ID = gql`\r\nmutation deleteQuarantineInfo($id:ID!){\r\n    deleteQuarantineInfo(id:$id){\r\n      success\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_PERSON_QUARANTINE = gql`\r\nmutation createQuarantine(\r\n  $in:Boolean,\r\n  $date_in:DateTime,\r\n  $date_out:DateTime,\r\n  $personalInfo:ID!,\r\n  $quarantineInfo:ID!,\r\n  $others:String,\r\n  $personalType:String\r\n){\r\n  createQuarantine(newQuarantine:{\r\n    in:$in\r\n    date_in:$date_in\r\n    date_out:$date_out\r\n    personalInfo:$personalInfo\r\n    quarantineInfo:$quarantineInfo\r\n    others:$others\r\n    personalType:$personalType\r\n  }){\r\n    success\r\n    message\r\n  }\r\n}\r\n`;\r\n\r\nexport const GET_PERSON_BY_QUARANTINE = gql`\r\nquery getQuarantineByQurantineIdWithPagination(\r\n  $page:Int!,\r\n  $limit:Int!,\r\n  $keyword:String,\r\n  $quarantineInfoId:ID!\r\n){\r\n  getQuarantineByQurantineIdWithPagination(page:$page,limit:$limit,keyword:$keyword,quarantineInfoId:$quarantineInfoId){\r\n    quarantines{\r\n      id\r\n      in\r\n      date_in\r\n      date_out\r\n      out_status\r\n      personalInfo{\r\n      \tid\r\n        firstName\r\n        lastName\r\n        village\r\n        gender\r\n        district\r\n        commune\r\n        province\r\n        direct\r\n        currentState{\r\n          confirm\r\n          death\r\n          recovered\r\n        }\r\n    \t}\r\n      \r\n      personalType\r\n      others\r\n    }\r\n    paginator{\r\n      slNo\r\n      prev\r\n      next\r\n      perPage\r\n      totalPosts\r\n      totalPages\r\n      currentPage\r\n      hasPrevPage\r\n      hasNextPage\r\n      totalDocs\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nexport const GET_QUARANTINE_BY_ID = gql`\r\nquery getQuarantineInfoById($id:ID!){\r\n  getQuarantineInfoById(id:$id){\r\n    capacity\r\n    id\r\n    locationName\r\n    village\r\n    commune\r\n    district\r\n    province\r\n    personInchage\r\n    long\r\n    lat\r\n    createdAt\r\n    updatedAt\r\n    personInCharge{\r\n      firstName\r\n      lastName\r\n      position\r\n      others\r\n      tel\r\n    }\r\n    other\r\n  }\r\n}\r\n`;\r\n\r\nexport const UPDATE_QUARANTINE_BY_ID = gql`\r\nmutation updateQuarantineInfo(\r\n    $locationName:String,\r\n    $village:String,\r\n    $commune:String,\r\n    $district:String,\r\n    $province:String,\r\n    $long:Float,\r\n    $lat:Float,\r\n    $other:String,\r\n    $capacity:Int,\r\n    $firstName:String,\r\n    $lastName:String,\r\n    $tel:String,\r\n    $position:String,\r\n    $others:String,\r\n    $id:ID!\r\n){\r\n  updateQuarantineInfo(updatedQuarantineInfo:{\r\n    locationName:$locationName\r\n    village:$village\r\n    commune:$commune\r\n    district:$district\r\n    province:$province\r\n    long:$long\r\n    lat:$lat\r\n    other:$other\r\n    capacity:$capacity\r\n    personInCharge:{\r\n      firstName:$firstName\r\n      lastName:$lastName\r\n      tel:$tel\r\n      position:$position\r\n      others:$others\r\n    }\r\n  },id:$id){\r\n    message\r\n    success\r\n  }\r\n}\r\n`;\r\n\r\nexport const DELETE_PERSON_BY_QUARANTINE = gql`\r\nmutation deleteQuarantine($id:ID!){\r\n  deleteQuarantine(id:$id){\r\n    success\r\n    message\r\n  }\r\n}\r\n`;","import React, { useContext,useState,useEffect } from 'react'\r\nimport { Modal, Form, Input, Row, Col, Button,Select, Divider, message} from 'antd';\r\nimport { QuarantineController } from '../../../context/quarantineContext'\r\nimport { ListSelect } from '../../../static/own-comp'\r\nimport { provinceData, districtData, communeData, villageData } from '../../../context/headerContext'\r\nimport { convertToDistrict, convertToCommune, convertToVillage } from '../../../function/fn'\r\nimport { useMutation } from '@apollo/client';\r\nimport { CREATE_QUARANTINEINFO } from '../../../graphql/quarantine';\r\nimport { setAddQuarantine } from '../../../function/set';\r\n\r\nconst { Option } = Select;\r\n\r\nexport default function AddQuarantine({ open, setOpen }) {\r\n    //const { quarantineDataDispatch } = useContext(QuarantineController)\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const [province, setProvince] = useState(\"\")\r\n    const [district, setDistrict] = useState(\"\")\r\n    const [commune, setCommune] = useState(\"\")\r\n\r\n    const [createQuarantineInfo,{loading,error}]=useMutation(CREATE_QUARANTINEINFO,{\r\n        onCompleted:({createQuarantineInfo})=>{\r\n            message.success(\"បញ្ចូលបានជោគជ័យ\")\r\n        },\r\n        onError:({error})=>{\r\n            message.error(\"បញ្ចូលបរាជ័យ\")\r\n\r\n                console.log(error)\r\n            \r\n        }\r\n    })\r\n\r\n    const onFinish = (values) => {\r\n        // console.log('Success:', values);\r\n\r\n        //quarantineDataDispatch({ type: 'ADD_QUARANTINE', payload: values })\r\n\r\n        createQuarantineInfo({variables:setAddQuarantine(values)})\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const setToGenderFn = (e) => {\r\n        form.setFieldsValue({\r\n            gender: e\r\n        });\r\n    };\r\n\r\n    const setToProviceFn = (e) => {\r\n        form.setFieldsValue({\r\n            province: e,\r\n            district: null,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setProvince(e)\r\n        setDistrict(\"\")\r\n        setCommune(\"\")\r\n    };\r\n\r\n\r\n    const setToDistrictFn = (e) => {\r\n        form.setFieldsValue({\r\n            district: e,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setDistrict(e)\r\n        setCommune(\"\")\r\n    };\r\n\r\n    const setToCommuneFn = (e) => {\r\n        form.setFieldsValue({\r\n            commune: e,\r\n            village: null,\r\n        });\r\n\r\n        setCommune(e)\r\n    };\r\n\r\n    const setToVillageFn = (e) => {\r\n        form.setFieldsValue({\r\n            village: e\r\n        });\r\n    };\r\n\r\n\r\n    return (\r\n        <Modal\r\n            title=\"បញ្ចូលមណ្ឌលចត្តាឡីស័កថ្មី\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"addUser\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"locationName\"\r\n                            rules={[{ required: true, message: 'Field is required!' }]}\r\n                        >\r\n                            <Input placeholder=\"ឈ្មោះមណ្ឌល\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    \r\n\r\n                    <Col xs={24} md={{ span: 11, offset:2 }}>\r\n                        <Form.Item\r\n                            name=\"province\"\r\n                            rules={[{ required: true, message: 'Field is required!' }]}\r\n                        >\r\n                            <ListSelect type={1} data={provinceData} title=\"ខេត្ត/ក្រុង\" setValue={setToProviceFn} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {province === \"សៀមរាប\" ? (\r\n                        <>\r\n                            <Col xs={24} md={{ span: 11, offset: 0 }}>\r\n                                <Form.Item\r\n                                    name=\"district\"\r\n                                    rules={[{ required: true, message: 'Field is required!' }]}\r\n                                >\r\n                                    <ListSelect type={0} data={convertToDistrict(districtData)} title=\"ស្រុក/ខណ្ឌ\" setValue={setToDistrictFn} disabled={province !== \"សៀមរាប\" ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                                <Form.Item\r\n                                    name=\"commune\"\r\n                                    rules={[{ required: true, message: 'Field is required!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToCommune(district, communeData)} title=\"ឃុំ/សង្កាត់\" setValue={setToCommuneFn} disabled={district === \"\" || district === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 24, offset: 0 }}>\r\n                                <Form.Item\r\n                                    name=\"village\"\r\n                                    rules={[{ required: true, message: 'Field is required!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToVillage(commune, villageData)} title=\"ភូមិ\" setValue={setToVillageFn} disabled={commune === \"\" || commune === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </>\r\n                    ) : null}\r\n\r\n                    <Col xs={24}>\r\n                        <Form.Item\r\n                            name=\"other\"\r\n                        // rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"ចំណាំ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"long\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input type=\"number\" placeholder=\"longtitude\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 , offset:2}}>\r\n                        <Form.Item\r\n                            name=\"lat\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input type=\"number\" placeholder=\"latitude\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Divider>អ្នកទទួលខុសត្រូវ</Divider>\r\n                    <Col xs={24} md={{ span: 11, offset: 0 }}>\r\n                        <Form.Item\r\n                            name=\"firstName\"\r\n                            rules={[{ required: true, message: 'Field is required!' }]}\r\n                        >\r\n                            <Input placeholder=\"នាម\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"lastName\"\r\n                            rules={[{ required: true, message: 'Field is required!' }]}\r\n                        >\r\n                            <Input placeholder=\"គោត្តនាម\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 0 }}>\r\n                        <Form.Item\r\n                            name=\"position\"\r\n                            rules={[{ required: true, message: 'Field is required!' }]}\r\n                        >\r\n                            <Input placeholder=\"តួនាទីការងារ\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"tel\"\r\n                            rules={[{ required: true, message: 'Field is required!' }]}\r\n                        >\r\n                            <Input placeholder=\"លេខទូរស័ព្ទ\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 0 }}>\r\n                        <Form.Item\r\n                            name=\"others\"\r\n                            //rules={[{ required: true, message: 'Field is required!' }]}\r\n                        >\r\n                            <Input placeholder=\"ផ្សេងៗ\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useContext, useState, useEffect } from 'react'\r\nimport { Row, Col, Button, Input, Table, message } from 'antd'\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { quarantineCol } from '../component/quarantine/tableColumn/quarantineColumn'\r\nimport { QuarantineController } from '../context/quarantineContext'\r\nimport AddQuarantine from '../component/quarantine/modal/addQuarantine';\r\nimport { useQuery, useMutation } from '@apollo/client';\r\nimport { GET_ALL_QUARANTINEINFO } from '../graphql/quarantine';\r\nimport { DELETE_QUARANTINE_BY_ID } from '../graphql/quarantine';\r\nimport query from 'esquery';\r\nimport { waitFor } from '@testing-library/dom';\r\n\r\nexport default function Quarantine() {\r\n\r\n    // const { quarantineData, quarantineDataDispatch } = useContext(QuarantineController)\r\n\r\n    const [openAdd, setOpenAdd] = useState(false)\r\n    const [page, setPage] = useState(1)\r\n    const [limit, setLimit] = useState(10)\r\n    const [keyword, setKeyword] = useState(\"\")\r\n    const [quarantineData, setQuarantineData] = useState([])\r\n\r\n    const { data, loading, error, refetch } = useQuery(GET_ALL_QUARANTINEINFO, {\r\n        variables: {\r\n            page: page,\r\n            limit: limit,\r\n            keyword: keyword,\r\n        },\r\n        onCompleted: ({ getQuarantineInfoWithPagination }) => {\r\n            // console.log(\"test\",getQuarantineInfoWithPagination?.quarantineInfos)\r\n            setQuarantineData(getQuarantineInfoWithPagination)\r\n            \r\n        },\r\n        fetchPolicy: 'network-only',\r\n        \r\n    })\r\n    \r\n    const [deleteQuarantineInfo, { loading: deleteLoading, error: deleteError }] = useMutation(DELETE_QUARANTINE_BY_ID, {     \r\n        onCompleted: () => {\r\n            refetch()\r\n            message.success(\"ទិន្នន័យត្រូវបានលុប\")\r\n        },\r\n        // refetchQueries: [{ query: GET_ALL_QUARANTINEINFO, variables: { keyword: keyword, limit: limit, page: page } }],\r\n        // awaitRefetchQueries: true,\r\n    })\r\n\r\n    useEffect(() => {\r\n        // refetch()\r\n    }, [page, limit, keyword,quarantineData])\r\n\r\n\r\n    const handleDelete = (e) => {\r\n        //quarantineDataDispatch({ type: \"DELETE_QUARANTINE\", payload: e })\r\n        deleteQuarantineInfo({\r\n            variables: {\r\n                id: e\r\n            },\r\n            \r\n        })\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <AddQuarantine open={openAdd} setOpen={setOpenAdd} />\r\n            {/* <EditUser open={openEdit} setOpen={setOpenEdit} user={userEdit} /> */}\r\n            <Col\r\n                xs={8}\r\n                md={18}\r\n            >\r\n                <Button\r\n                    type=\"primary\"\r\n                    onClick={() => setOpenAdd(true)}\r\n                >\r\n                    បញ្ចូលមណ្ឌលចត្តាឡីស័ក\r\n                    <PlusOutlined />\r\n                </Button>\r\n            </Col>\r\n            <Col\r\n                xs={16}\r\n                md={6}\r\n            >\r\n                <Input.Search\r\n                    onChange={(e) => setKeyword(e.target.value)}\r\n                    placeholder=\"ស្វែងរក...\"\r\n                />\r\n            </Col>\r\n            <Col\r\n                xs={24}\r\n                style={{ marginTop: 20 }}\r\n            >\r\n                <Table\r\n                    // caseCol({handleDelete})\r\n                    columns={quarantineCol({ handleDelete, limit, page })}\r\n                    dataSource={quarantineData?.quarantineInfos}\r\n                    rowKey={record => record.id}\r\n                    pagination={{\r\n                        total: quarantineData?.paginator?.totalDocs,\r\n                        //pageSizeOptions:[\"10\", \"20\"],\r\n                        // showSizeChanger: true,\r\n                        current: quarantineData?.paginator?.currentPage,\r\n                        onChange: ((page, pageSize) => { setPage(page); setLimit(pageSize) })\r\n                    }}\r\n                    scroll={{ x: 1500 }}\r\n                    sticky\r\n                />\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n","import { Space, Popconfirm } from 'antd'\r\nimport {\r\n    EditOutlined,\r\n    DeleteOutlined,\r\n    EyeOutlined\r\n} from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nexport const subQuarantineCol = ({handleDelete, handleEditSubQuarantine,limit,page}) => {\r\n    let no = (page-1) * limit\r\n    var array = [\r\n        {\r\n            title: 'ល.រ',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: 20,\r\n            render: (text, record, i) => (\r\n                <Space size=\"middle\">\r\n                    {no+=1}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'ឈ្មោះ',\r\n            dataIndex: 'quarantines',\r\n            key: 'quarantines',\r\n            width: 50,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {record?.personalInfo?.lastName} {record?.personalInfo?.firstName}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'កាលបរិច្ឆេទចូល',\r\n            dataIndex: 'date_in',\r\n            key: 'date_in',\r\n            width: 50,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {moment(record?.date_in).format(\"ថ្ងែDD ខែMM ឆ្នាំYYYY\")}\r\n                </Space>\r\n            ),\r\n        },\r\n\r\n        {\r\n            title: 'កាលបរិច្ឆេទចេញ',\r\n            dataIndex: 'date_out',\r\n            key: 'date_out',\r\n            width: 50,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {moment(record?.date_out).format(\"ថ្ងែDD ខែMM ឆ្នាំYYYY\")}\r\n                </Space>\r\n            ),\r\n        },\r\n\r\n        {\r\n            title: 'អាសយដ្ឋាន',\r\n            dataIndex: 'address',\r\n            key: 'address',\r\n            width: 90,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {(record?.personalInfo?.village !== \"ក្រៅសៀមរាប\") && record?.personalInfo?.village}\r\n                    {record?.personalInfo?.commune !== \"ក្រៅសៀមរាប\" && record?.personalInfo?.commune}\r\n                    {record?.personalInfo?.district !== \"ក្រៅសៀមរាប\" && record?.personalInfo?.district}\r\n                    {record?.personalInfo?.province && record?.personalInfo?.province}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'ស្ថានភាព',\r\n            dataIndex: 'status',\r\n            key: 'status',\r\n            width: 30,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {record?.personalInfo?.currentState?.confirm ? \"វិជ្ជមាន\" : \"អវិជ្ជមាន\"}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'លក្ខណៈពាក់ព័ន្ធ',\r\n            dataIndex: 'direct',\r\n            key: 'direct',\r\n            width: 30,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {record?.personalInfo?.direct ? \"ផ្ទាល់\" : \"ប្រយោល\"}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            key: 'action',\r\n            dataIndex: 'action',\r\n            fixed: 'right',\r\n            width: 30,\r\n            align: 'center',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    <Link className=\"link\" to={\"/subPeople/\" + record?.personalInfo?.id}><EyeOutlined /></Link>\r\n                    <span className=\"link\" onClick={() => handleEditSubQuarantine(record)}><EditOutlined /></span>\r\n                    <Popconfirm\r\n                        title=\"តើអ្នកពិតចង់លុបមែនឬទេ?\"\r\n                        onConfirm={() => {handleDelete(record.id) }}\r\n                        okText=\"ចង់\"\r\n                        cancelText=\"មិនចង់\"\r\n                    >\r\n                        <span className=\"link\" style={{ color: \"red\" }}><DeleteOutlined /></span>\r\n                    </Popconfirm>\r\n\r\n                </Space>\r\n            ),\r\n        }\r\n    ]\r\n    return array\r\n}","import React, { useContext, useEffect, useState } from 'react'\r\nimport { Modal, Form, Input, DatePicker, Row, Col, Button, Select, Divider, message } from 'antd'\r\nimport { QuarantineController } from '../../../context/quarantineContext'\r\nimport { setEditQuarantine } from '../../../function/set'\r\n\r\nimport { ListSelect } from '../../../static/own-comp'\r\nimport { provinceData, districtData, communeData, villageData } from '../../../context/headerContext'\r\nimport { convertToDistrict, convertToCommune, convertToVillage } from '../../../function/fn'\r\nimport { useMutation } from '@apollo/client'\r\nimport { UPDATE_QUARANTINE_BY_ID } from '../../../graphql/quarantine'\r\n\r\nconst { Option } = Select\r\n\r\nexport default function EditQuarantine({ open, setOpen, data, quarantineId }) {\r\n    //const {quarantineDataDispatch} = useContext(QuarantineController)\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const [province, setProvince] = useState(\"\")\r\n    const [district, setDistrict] = useState(\"\")\r\n    const [commune, setCommune] = useState(\"\")\r\n\r\n    const [updateQuarantineInfo, { loading }] = useMutation(UPDATE_QUARANTINE_BY_ID, {\r\n        onCompleted: () => {\r\n            message.success(\"កែប្រែទិន្នន័យជោគជ័យ\")\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n\r\n        if (data !== undefined) {\r\n            form.setFieldsValue(setEditQuarantine(data))\r\n            setProvince(data.province)\r\n            setDistrict(data.district)\r\n            setCommune(data.commune)\r\n        }\r\n\r\n\r\n    }, [data])\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Success:', values);\r\n\r\n        updateQuarantineInfo({\r\n            variables: {\r\n                lat: values.lat,\r\n                capacity: parseInt(values.capacity),\r\n                createdAt: values.createdAt,\r\n                locationName: values.locationName,\r\n                long: values.long,\r\n                other: values.other,\r\n                tel: values.tel,\r\n                firstName: values.firstName,\r\n                lastName: values.lastName,\r\n                position: values.position,\r\n                others: values.others,\r\n                village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n                commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n                district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n                province: values.province === undefined ? \"\" : values.province,\r\n                id:quarantineId\r\n            }\r\n        })\r\n\r\n        // quarantineDataDispatch({type: 'EDIT_QUARANTINE', payload: {...values, id: data.id}})\r\n        // setData({...values, id: data.id})\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const setToGenderFn = (e) => {\r\n        form.setFieldsValue({\r\n            gender: e\r\n        });\r\n    };\r\n\r\n    const setToProviceFn = (e) => {\r\n        form.setFieldsValue({\r\n            province: e,\r\n            district: null,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setProvince(e)\r\n        setDistrict(\"\")\r\n        setCommune(\"\")\r\n    };\r\n\r\n\r\n    const setToDistrictFn = (e) => {\r\n        form.setFieldsValue({\r\n            district: e,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setDistrict(e)\r\n        setCommune(\"\")\r\n    };\r\n\r\n    const setToCommuneFn = (e) => {\r\n        form.setFieldsValue({\r\n            commune: e,\r\n            village: null,\r\n        });\r\n\r\n        setCommune(e)\r\n    };\r\n\r\n    const setToVillageFn = (e) => {\r\n        form.setFieldsValue({\r\n            village: e\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            title=\"កែប្រែមណ្ឌលចត្តាឡីស័ក\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n            destroyOnClose={false}\r\n            getContainer={false}\r\n            forceRender\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"editQuarantine\"\r\n                initialValues={setEditQuarantine(data)}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"locationName\"\r\n                            rules={[{ required: true, message: 'Field is required!' }]}\r\n                        >\r\n                            <Input placeholder=\"ឈ្មោះមណ្ឌល\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"province\"\r\n                            rules={[{ required: true, message: 'Field is required!' }]}\r\n                        >\r\n                            <ListSelect type={1} data={provinceData} title=\"ខេត្ត/ក្រុង\" setValue={setToProviceFn} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {province === \"សៀមរាប\" ? (\r\n                        <>\r\n                            <Col xs={24} md={{ span: 11, offset: 0 }}>\r\n                                <Form.Item\r\n                                    name=\"district\"\r\n                                    rules={[{ required: true, message: 'Field is required!' }]}\r\n                                >\r\n                                    <ListSelect type={0} data={convertToDistrict(districtData)} title=\"ស្រុក/ខណ្ឌ\" setValue={setToDistrictFn} disabled={province !== \"សៀមរាប\" ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                                <Form.Item\r\n                                    name=\"commune\"\r\n                                    rules={[{ required: true, message: 'Field is required!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToCommune(district, communeData)} title=\"ឃុំ/សង្កាត់\" setValue={setToCommuneFn} disabled={district === \"\" || district === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 24, offset: 0 }}>\r\n                                <Form.Item\r\n                                    name=\"village\"\r\n                                    rules={[{ required: true, message: 'Field is required!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToVillage(commune, villageData)} title=\"ភូមិ\" setValue={setToVillageFn} disabled={commune === \"\" || commune === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </>\r\n                    ) : null}\r\n\r\n                    <Col xs={24} md={{ span: 24, offset: 0 }}>\r\n                        <Form.Item\r\n                            name=\"capacity\"\r\n                        >\r\n                            <Input type=\"number\" placeholder=\"អាចផ្ទុកបាន\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Form.Item\r\n                            name=\"other\"\r\n                        // rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"ចំណាំ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"long\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input type=\"number\" placeholder=\"longtitude\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"lat\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input type=\"number\" placeholder=\"latitude\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Divider>អ្នកទទួលខុសត្រូវ</Divider>\r\n                    <Col xs={24} md={{ span: 11, offset: 0 }}>\r\n                        <Form.Item\r\n                            name=\"firstName\"\r\n                            rules={[{ required: true, message: 'Field is required!' }]}\r\n                        >\r\n                            <Input placeholder=\"នាម\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"lastName\"\r\n                            rules={[{ required: true, message: 'Field is required!' }]}\r\n                        >\r\n                            <Input placeholder=\"គោត្តនាម\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 0 }}>\r\n                        <Form.Item\r\n                            name=\"position\"\r\n                            rules={[{ required: true, message: 'Field is required!' }]}\r\n                        >\r\n                            <Input placeholder=\"តួនាទីការងារ\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"tel\"\r\n                            rules={[{ required: true, message: 'Field is required!' }]}\r\n                        >\r\n                            <Input placeholder=\"លេខទូរស័ព្ទ\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 0 }}>\r\n                        <Form.Item\r\n                            name=\"others\"\r\n                        //rules={[{ required: true, message: 'Field is required!' }]}\r\n                        >\r\n                            <Input placeholder=\"ផ្សេងៗ\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            កែប្រែទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { Form, Modal, Input, Row, Col, Button, Select,DatePicker, message } from 'antd'\r\nimport { QuarantineController } from '../../../context/quarantineContext'\r\nimport { ListSelect } from '../../../static/own-comp'\r\nimport { provinceData, districtData, communeData, villageData, genderData } from '../../../context/headerContext'\r\nimport { convertToDistrict, convertToCommune, convertToVillage } from '../../../function/fn'\r\nimport { useMutation, useQuery } from '@apollo/client'\r\nimport { CREATE_PERSON_QUARANTINE } from '../../../graphql/quarantine'\r\nimport { setAddSubQuarantine } from '../../../function/set'\r\nimport moment from 'moment'\r\n\r\nconst { Option } = Select\r\n\r\nexport default function AddSubQuarantine({ open, setOpen, quarantineId, peopleData }) {\r\n    const { subQuarantineDataDispatch } = useContext(QuarantineController)\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const [province, setProvince] = useState(\"\")\r\n    const [district, setDistrict] = useState(\"\")\r\n    const [commune, setCommune] = useState(\"\")\r\n\r\n    const [createQuarantine,{data}]=useMutation(CREATE_PERSON_QUARANTINE,{\r\n        onCompleted:({createQuarantine})=>{\r\n            message.success(\"បញ្ចូលទិន្នន័យជោគជ័យ\")\r\n        }\r\n    })\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Success:', setAddSubQuarantine(values));\r\n\r\n        createQuarantine({variables:{\r\n            in:values.in,\r\n            date_in:moment(values.date_in).format(),\r\n            date_out:moment(values.date_out).format(),\r\n            personalType:values.personalType,\r\n            personalInfo:values.personalInfo,\r\n            quarantineInfo:quarantineId,\r\n            others:values.others,\r\n        }})\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const setToGenderFn = (e) => {\r\n        form.setFieldsValue({\r\n            gender: e\r\n        });\r\n    };\r\n\r\n    const setToProviceFn = (e) => {\r\n        form.setFieldsValue({\r\n            province: e,\r\n            district: null,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setProvince(e)\r\n        setDistrict(\"\")\r\n        setCommune(\"\")\r\n    };\r\n\r\n\r\n    const setToDistrictFn = (e) => {\r\n        form.setFieldsValue({\r\n            district: e,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setDistrict(e)\r\n        setCommune(\"\")\r\n    };\r\n\r\n    const setToCommuneFn = (e) => {\r\n        form.setFieldsValue({\r\n            commune: e,\r\n            village: null,\r\n        });\r\n\r\n        setCommune(e)\r\n    };\r\n\r\n    const setToVillageFn = (e) => {\r\n        form.setFieldsValue({\r\n            village: e\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            title=\"បញ្ចូលអ្ន​កចត្តាឡីស័ក\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"addSubCase\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"personalInfo\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            {/* <Input placeholder=\"ឈ្មោះ\" /> */}\r\n                            <Select placeholder=\"អ្នកចត្តាឡីស័ក\" style={{ width: \"100%\" }} onChange={(e)=>console.log(e)}>\r\n                                {peopleData.map((people)=>(\r\n                                     <Option key={people?.id} value={people?.id}>{people?.lastName} {people?.firstName}</Option>\r\n                                ))}\r\n                               \r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"personalType\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n\r\n                            <Select placeholder=\"ប្រភេទ\" style={{ width: \"100%\" }}>\r\n                                <Option value=\"សហគមន៍\">សហគមន៍</Option>\r\n                                <Option value=\"តាមផ្លូងអាកាស\">តាមផ្លូងអាកាស</Option>\r\n                                <Option value=\"ពលករ\">ពលករ</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 24}}>\r\n                        <Form.Item\r\n                            name=\"in\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n\r\n                            <Select placeholder=\"ចត្តាឡីស័ក\" style={{ width: \"100%\" }}>\r\n                                <Option value={true}>ចូល</Option>\r\n                                <Option value={false}>ចេញ</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"date_in\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <DatePicker placeholder=\"កាលបរិច្ឆេទចូល\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset:2 }}>\r\n                        <Form.Item\r\n                            name=\"date_out\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <DatePicker placeholder=\"កាលបរិច្ឆេទចូល\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 24}}>\r\n                        <Form.Item\r\n                            name=\"others\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n\r\n                            <Input placeholder=\"ផ្សេងៗ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useContext, useState, useEffect } from 'react'\r\nimport { Form, Modal, Input, Row, Col, Button, Select, DatePicker} from 'antd'\r\nimport { QuarantineController } from '../../../context/quarantineContext'\r\nimport {setEditSubQuarantine} from '../../../function/set'\r\n\r\nconst { Option } = Select\r\n\r\nexport default function EditSubQuarantine({ open, setOpen, data, quarantineId, peopleData }) {\r\n    \r\n    let [form] = Form.useForm()\r\n\r\n    const [editData, setEditData] = useState([])\r\n\r\n    useEffect(() => {\r\n        form.resetFields()\r\n        // setEditData(data)\r\n    }, [data,open])\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Success:', values);\r\n\r\n        // subQuarantineDataDispatch({type: 'EDIT_SUB_QUARANTINE', payload: {...values, id: data.id}})\r\n        // setData({...values, id: data.id})\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            title=\"កែប្រែអ្នកចត្តាឡីស័ក\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n            \r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"editSubQuarantine\"\r\n                initialValues={setEditSubQuarantine(data)}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"personalInfo\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            {/* <Input placeholder=\"ឈ្មោះ\" /> */}\r\n                            <Select placeholder=\"អ្នកចត្តាឡីស័ក\" style={{ width: \"100%\" }} onChange={(e)=>console.log(e)}>\r\n                                {peopleData.map((people)=>(\r\n                                     <Option key={people?.id} value={people?.id}>{people?.lastName} {people?.firstName}</Option>\r\n                                ))}\r\n                               \r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"personalType\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n\r\n                            <Select placeholder=\"ប្រភេទ\" style={{ width: \"100%\" }}>\r\n                                <Option value=\"សហគមន៍\">សហគមន៍</Option>\r\n                                <Option value=\"តាមផ្លូងអាកាស\">តាមផ្លូងអាកាស</Option>\r\n                                <Option value=\"ពលករ\">ពលករ</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 24}}>\r\n                        <Form.Item\r\n                            name=\"in\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n\r\n                            <Select placeholder=\"ចត្តាឡីស័ក\" style={{ width: \"100%\" }}>\r\n                                <Option value={true}>ចូល</Option>\r\n                                <Option value={false}>ចេញ</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"date_in\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <DatePicker placeholder=\"កាលបរិច្ឆេទចូល\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset:2 }}>\r\n                        <Form.Item\r\n                            name=\"date_out\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <DatePicker placeholder=\"កាលបរិច្ឆេទចូល\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 24}}>\r\n                        <Form.Item\r\n                            name=\"others\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n\r\n                            <Input placeholder=\"ផ្សេងៗ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import { gql } from '@apollo/client'\r\n\r\nexport const GET_ALL_PERSONINFO = gql`\r\nquery getPersonalInfoWithPagination($page:Int!,$limit:Int!,$keyword:String){\r\n    getPersonalInfoWithPagination(page:$page,limit:$limit,keyword:$keyword){\r\n        personalInfos{\r\n            id\r\n          firstName\r\n          lastName\r\n          age\r\n          gender\r\n          tel\r\n          nationality\r\n          occupation\r\n          idCard\r\n          profileImg\r\n          village\r\n          commune\r\n          district\r\n          province\r\n          case{\r\n            id\r\n          }\r\n          direct\r\n          other\r\n          relapse\r\n          relapseAt\r\n          vaccinated\r\n          createdAt\r\n          updatedAt\r\n          currentState{\r\n            confirm\r\n            confirmedAt\r\n            death\r\n            deathAt\r\n            recovered\r\n            recoveredAt\r\n          }\r\n        }\r\n      paginator{\r\n        slNo\r\n        prev\r\n        next\r\n        perPage\r\n        totalPosts\r\n        totalPages\r\n        currentPage\r\n        hasPrevPage\r\n        hasNextPage\r\n        totalDocs\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_NEW_PERSON = gql`\r\nmutation createPersonalInfo(\r\n    $firstName:String,\r\n    $lastName:String,\r\n    $age:Int,\r\n    $gender:String,\r\n    $tel:String,\r\n    $nationality:String,\r\n    $occupation:String,\r\n    $idCard:String,\r\n    $village:String,\r\n    $commune:String,\r\n    $vaccinated:Int,\r\n    $district:String,\r\n    $province:String,\r\n    $case:ID!,\r\n    $direct:Boolean,\r\n    $other:String,\r\n){\r\n    createPersonalInfo(newInfo:{\r\n            firstName:$firstName\r\n            lastName:$lastName\r\n            age:$age\r\n            gender:$gender\r\n            tel:$tel\r\n            nationality:$nationality\r\n            occupation:$occupation\r\n            idCard:$idCard\r\n            village:$village\r\n            commune:$commune\r\n            vaccinated:$vaccinated\r\n            district:$district\r\n            province:$province\r\n            case: $case\r\n            direct:$direct\r\n            other: $other\r\n    }){\r\n      success\r\n      message\r\n    }\r\n  }\r\n`\r\n\r\nexport const GET_ALL_PERSONINFO_NO_LIMIT = gql`\r\nquery allPersonalInfos{\r\n  allPersonalInfos{\r\n    id\r\n    firstName\r\n    lastName\r\n    gender\r\n    nationality\r\n    occupation\r\n    village\r\n    commune\r\n    district\r\n    province\r\n    direct\r\n    currentState{\r\n      confirm\r\n      confirmedAt\r\n      recovered\r\n      recoveredAt\r\n      death\r\n      deathAt\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nexport const RECORD_SAMPLETEST = gql`\r\nmutation recordSampleTest(\r\n  $date:DateTime,\r\n  $times:Int,\r\n  $location:String,\r\n  $result:Boolean,\r\n  $symptom:String,\r\n  $other:String,\r\n  $personalInfoId:ID!,\r\n){\r\n  recordSampleTest(sampleTest:{\r\n    date:$date\r\n    times:$times\r\n    location:$location\r\n    result:$result\r\n    symptom:$symptom\r\n    other:$other\r\n  },personalInfoId:$personalInfoId){\r\n    message\r\n    success\r\n  }\r\n}\r\n`;\r\n\r\nexport const GET_PERSONALINFO_BY_ID = gql`\r\nquery getPersonalInfoById($id:ID!){\r\n  getPersonalInfoById(id:$id){\r\n    id\r\n\t\tfirstName\r\n    lastName\r\n    age\r\n    gender\r\n    tel\r\n    nationality\r\n    occupation\r\n    idCard\r\n    profileImg\r\n    village\r\n    commune\r\n    district\r\n    province\r\n    case{\r\n      id\r\n      caseName\r\n      village\r\n      commune\r\n      district\r\n      province\r\n      other\r\n      date\r\n      long\r\n      lat\r\n    }\r\n    direct\r\n    other\r\n    relapse\r\n    relapseAt\r\n    vaccinated\r\n    currentState{\r\n      confirm\r\n      confirmedAt\r\n      death\r\n      deathAt\r\n      recovered\r\n      recoveredAt\r\n    }\r\n    sampleTest{\r\n      id\r\n      date\r\n      times\r\n      location\r\n      result\r\n      symptom\r\n      other\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\n\r\nexport const DELETE_PERSONALINFO_BY_ID = gql`\r\nmutation deletePersonalInfo($id:ID!){\r\n  deletePersonalInfo(id:$id){\r\n    success\r\n    message\r\n  }\r\n}\r\n`;","import { Col, Row, Typography, Table, message } from 'antd'\r\nimport React, { useState, useContext, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { QuarantineController } from '../../context/quarantineContext'\r\nimport moment from 'moment'\r\nimport { subQuarantineCol } from './tableColumn/subQuarantineColumn'\r\nimport { PlusCircleOutlined, EditOutlined } from '@ant-design/icons';\r\nimport EditQuarantine from './modal/editQuarantine'\r\nimport AddSubQuarantine from './modal/addSubQuarantine'\r\nimport EditSubQuarantine from './modal/editSubQuarantine'\r\nimport { useMutation, useQuery } from '@apollo/client'\r\nimport { GET_ALL_PERSONINFO_NO_LIMIT} from '../../graphql/people'\r\nimport { GET_PERSON_BY_QUARANTINE } from '../../graphql/quarantine'\r\nimport { GET_QUARANTINE_BY_ID } from '../../graphql/quarantine'\r\nimport { DELETE_PERSON_BY_QUARANTINE } from '../../graphql/quarantine'\r\n\r\nconst {Title} = Typography\r\n\r\nexport default function SubQuarantine() {\r\n\r\n    //const { quarantineData, subQuarantineData, subQuarantineDataDispatch } = useContext(QuarantineController)\r\n\r\n    const districtLatLong = [\r\n        {\r\n            district:\"ស្រុកក្រឡាញ់\",\r\n            lat:13.60472222544493,\r\n            long:103.45245485053685,\r\n        },\r\n        {\r\n            district:\"ស្រុកវ៉ារិន\",\r\n            lat:13.867238663711532,\r\n            long:103.87715707241854,\r\n        },\r\n        {\r\n            district:\"ស្រុកស្រិស្នំ\",\r\n            lat:13.852238272312373,\r\n            long: 103.53639730433542,\r\n        },\r\n        {\r\n            district:\"ស្រុកអង្គរជុំ\",\r\n            lat:13.713723851088394,\r\n            long:103.67219336284299,\r\n        },\r\n        {\r\n            district:\"ស្រុកបន្ទាយស្រី\",\r\n            lat:13.605041870228655,\r\n            long:103.97859822744759,\r\n        },\r\n        {\r\n            district:\"ស្រុកសូទ្រនិគម\",\r\n            lat:13.414442053292065,\r\n            long:104.10460200711728,\r\n        },\r\n        {\r\n            district:\"ស្រុកបាគង\",\r\n            lat:13.303005227138778,\r\n            long:103.9796463766434,\r\n        },\r\n        {\r\n            district:\"ស្រុកពួក\",\r\n            lat:13.440442720250852,\r\n            long:103.71973510206098,\r\n        },\r\n        {\r\n            district:\"ស្រុកជីក្រែង\",\r\n            lat:13.232399982258997,\r\n            long:104.33684532302983,\r\n        },\r\n        {\r\n            district:\"ស្រុកស្វាយលើ\",\r\n            lat:13.698615549661712,\r\n            long:104.21744370698126,\r\n        },\r\n        {\r\n            district:\"ស្រុកអង្គរធំ\",\r\n            lat:13.483410469370508,\r\n            long:103.87412317588966,\r\n        },\r\n        {\r\n            district:\"ស្រុកសៀមរាប\",\r\n            lat:13.332155324410378,\r\n            long:103.81891026025993,\r\n        },\r\n        \r\n    ]\r\n\r\n    let { id } = useParams();\r\n\r\n    const [peopleData, setPeopleData] = useState([])\r\n    const [headerData, setHeaderData] = useState()\r\n    const [updateSubData, setUpdateSubData] = useState({})\r\n\r\n    const [openEdit, setOpenEdit] = useState(false)\r\n    const [openAddSub, setOpenAddSub] = useState(false)\r\n    const [openEditSub, setOpenEditSub] = useState(false)\r\n    const [subQuarantineData, setSubQuarantineData] = useState([])\r\n    const [page, setPage] = useState(1)\r\n    const [limit, setLimit] = useState(10)\r\n    const [keyword, setKeyword] = useState(\"\")\r\n    const [quarantineData,setQuarantineData] = useState({})\r\n\r\n    const {data} = useQuery(GET_ALL_PERSONINFO_NO_LIMIT,{\r\n        onCompleted:({allPersonalInfos})=>{\r\n            // console.log(allPersonalInfos)\r\n            setPeopleData(allPersonalInfos)\r\n        }\r\n    })\r\n\r\n    const {data:quarantine,loading} = useQuery(GET_QUARANTINE_BY_ID,{\r\n        variables:{\r\n            id:id\r\n        },\r\n        onCompleted:({getQuarantineInfoById})=>{\r\n            // console.log(getQuarantineInfoById)\r\n            setQuarantineData(getQuarantineInfoById)\r\n        }\r\n    })\r\n\r\n    const {data:subQuarantine} = useQuery(GET_PERSON_BY_QUARANTINE,{\r\n        variables:{\r\n            page:page,\r\n            limit:limit,\r\n            keyword:keyword,\r\n            quarantineInfoId:id\r\n        },\r\n        onCompleted:({getQuarantineByQurantineIdWithPagination})=>{\r\n            // console.log(getQuarantineByQurantineIdWithPagination)\r\n            setSubQuarantineData(getQuarantineByQurantineIdWithPagination)\r\n        },\r\n        onError:({error})=>{\r\n            console.log(error)\r\n        }\r\n    })\r\n\r\n    const [deleteQuarantine,{loading:deleteLoading}] = useMutation(DELETE_PERSON_BY_QUARANTINE,{\r\n        onCompleted:()=>{\r\n            message.success(\"លុបទិន្នន័យជោគជ័យ\")\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        // console.log(updateSubData)\r\n    }, [])\r\n\r\n    // console.log(headerData)\r\n    const handleDelete = (e) => {\r\n        //subQuarantineDataDispatch({type: \"DELETE_SUB_QUARANTINE\", payload: e})\r\n        deleteQuarantine({\r\n            variables:{\r\n                id:e\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleEditSubQuarantine = (e) => {\r\n        \r\n        setUpdateSubData(e)\r\n        setOpenEditSub(true)\r\n    }\r\n\r\n    const key = 'updatable';\r\n    const openMessage = () => {\r\n        message.loading({ content: 'Loading...', key });\r\n        setTimeout(() => {\r\n          message.success({ content: 'Loaded!', key, duration: 2 });\r\n        }, 1000);\r\n      };\r\n\r\n    return (\r\n        <>\r\n        {/* { loading ? message.loading(\"test\"): */}\r\n        <Row>\r\n            <EditQuarantine open={openEdit} setOpen={setOpenEdit} data={quarantineData} quarantineId={id}/>\r\n            <AddSubQuarantine open={openAddSub} setOpen={setOpenAddSub} quarantineId={id} peopleData={peopleData} />\r\n            <EditSubQuarantine open={openEditSub} setOpen={setOpenEditSub} data={updateSubData} quarantineId={id} peopleData={peopleData} />\r\n            <Col\r\n                xs={24}\r\n            >\r\n                {/* <Title level={5}>ឈ្មោះករណី៖ \r\n                    <EditOutlined className=\"link\" onClick={() => setOpenEdit(true)}/>\r\n                </Title> */}\r\n            </Col>\r\n            <Col\r\n                xs={24}\r\n                md={11}\r\n                className=\"subCase-card\"\r\n            >\r\n                <p>ឈ្មោះមណ្ឌល៖ {quarantineData?.locationName} <EditOutlined className=\"link\" onClick={() => setOpenEdit(true)}/></p>\r\n                {/* <p>ទីតាំង៖ {quarantineData?.place}</p> */}\r\n                <p>អាចផ្ទុក៖ {quarantineData?.capacity}</p>\r\n                <p>អាសយដ្ឋាន៖ \r\n                    {quarantineData?.village !== \"ក្រៅសៀមរាប\" && quarantineData?.village + \",\"}\r\n                    {quarantineData?.commune !== \"ក្រៅសៀមរាប\" && quarantineData?.commune + \",\"}\r\n                    {quarantineData?.district !== \"ក្រៅសៀមរាប\" && quarantineData?.district + \",\"}\r\n                    {quarantineData?.province}\r\n                </p>\r\n                <p>អ្នកទទួលខុសត្រូវ៖ {quarantineData?.personInCharge?.lastName} {quarantineData?.personInCharge?.firstName}</p>\r\n                <p>លេខទូរស័ព្ទ៖ {quarantineData?.personInCharge?.tel}</p>\r\n                <p>ចំណាំ៖ {quarantineData?.other}</p>\r\n            </Col>\r\n            {/* <Col\r\n                xs={24}\r\n                md={{ span: 11, offset: 2 }}\r\n                className=\"subCase-card\"\r\n            >\r\n                <p>មណ្ឌលព្យាបាល៖ </p>\r\n                <EditOutlined className=\"link\" onClick={() => setOpenEdit(true)}/>\r\n                <p>ឈ្មោះមណ្ឌល៖​ </p>\r\n                <p>ទីតាំង៖ </p>\r\n                <p>កាលបរិច្ឆេទ​ចូល៖ </p>\r\n                <p>កាលបរិច្ឆេទចេញ៖ </p>\r\n            </Col> */}\r\n\r\n\r\n            <Col\r\n                xs={24}\r\n                style={{ marginTop: 20 }}\r\n            >\r\n                <Title level={5}>\r\n                    អ្នកធ្វើចត្តាឡីស័ក៖ \r\n\r\n                    <PlusCircleOutlined className=\"link\" onClick={() => setOpenAddSub(true)}/>\r\n                </Title>\r\n\r\n            </Col>\r\n            <Col\r\n                xs={24}\r\n                md={24}\r\n            >\r\n                <Table\r\n                    columns={subQuarantineCol({handleDelete, handleEditSubQuarantine,limit,page})}\r\n                    dataSource={subQuarantineData?.quarantines}\r\n                    rowKey={(record) => record.id}\r\n                    pagination={{\r\n                        total: subQuarantineData?.paginator?.totalDocs,\r\n                        // showSizeChanger: true,\r\n                        onChange:((page, pageSize) => {setPage(page);setLimit(pageSize)} )\r\n                    }}\r\n                    scroll={{ x: 240 }}\r\n                    sticky\r\n                />\r\n            </Col>\r\n        </Row>\r\n        {/* } */}\r\n        </>\r\n    )\r\n}\r\n","import { setPeople } from '../function/set'\r\n\r\nexport function peopleReducer(state, action) {\r\n    \r\n    let item = [...state]\r\n    let index = item.findIndex(e => e.id === action.payload)\r\n    let index1 = item.findIndex(e => e.id === action.payload.id)\r\n\r\n    switch (action.type) {\r\n        case 'ADD_PEOPLE':\r\n            item.push(setPeople(action.payload, item.length))\r\n            return item;\r\n        case 'EDIT_PEOPLE':\r\n            item[index1] = action.payload\r\n\r\n            return item;\r\n        case 'DELETE_PEOPLE':\r\n            item.splice(index, 1)\r\n\r\n            return item;\r\n        default:\r\n            throw new Error();\r\n    }\r\n}","import React, {useReducer, createContext} from 'react'\r\nimport { peopleReducer } from '../reducer/peopleReducer'\r\n\r\nexport const PeopleController = createContext()\r\n\r\nexport default function PeopleContext(props) {\r\n    const [peopleData, peopleDataDispatch] = useReducer(peopleReducer, [\r\n        {\r\n            id: \"1\",\r\n            idCard: \"123123123\",\r\n            name: \"ដាយ ឌឿន\",\r\n            gender: \"ប្រុស\",\r\n            age: 25,\r\n            nationality: \"ខ្មែរ\",\r\n            province: \"សៀមរាប\",\r\n            district: \"សៀមរាប\",\r\n            commune: \"ស្វាយដង្គំ\",\r\n            village: \"ល្វា\",\r\n            job: \"លក់ដូរ\",\r\n            tel: 10503375,\r\n            remark: \"មុខប្រជ្រុយ៣\",\r\n        },\r\n        {\r\n            id: \"2\",\r\n            idCard: \"123123123\",\r\n            name: \"ដាយ ឌឿន1\",\r\n            gender: \"ប្រុស\",\r\n            age: 25,\r\n            nationality: \"ខ្មែរ\",\r\n            province: \"សៀមរាប\",\r\n            district: \"សៀមរាប\",\r\n            commune: \"ស្វាយដង្គំ\",\r\n            village: \"ល្វា\",\r\n            job: \"លក់ដូរ\",\r\n            tel: 10503375,\r\n            remark: \"មុខប្រជ្រុយ៣\",\r\n        },\r\n    ])\r\n\r\n    return (\r\n        <PeopleController.Provider\r\n            value={{\r\n                peopleData,\r\n\r\n                peopleDataDispatch,\r\n            }}\r\n        >\r\n            {props.children}\r\n        </PeopleController.Provider>\r\n    )\r\n}\r\n","import { Space, Popconfirm } from 'antd'\r\nimport {\r\n    EyeOutlined,\r\n    DeleteOutlined\r\n} from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const peopleCol = ({handleDelete,limit,page}) => {\r\n    let no = ((page-1) * limit)\r\n    var array = [\r\n        {\r\n            title: 'ល.រ',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: 60,\r\n            render: (text, record, i) => (\r\n                <Space size=\"middle\">\r\n                    {no+= 1}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'អត្តសញ្ញាណប័ណ្ណ',\r\n            dataIndex: 'idCard',\r\n            key: 'idCard',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'ឈ្មោះ',\r\n            dataIndex: 'personalInfos',\r\n            key: 'personalInfos',\r\n            width: 150,\r\n            render: (text, record) => (\r\n                <span size=\"middle\">\r\n                    {\r\n                        record.lastName+\" \"+record.firstName\r\n                    }\r\n                </span>\r\n            ),\r\n        },\r\n        {\r\n            title: 'ភេទ',\r\n            dataIndex: 'gender',\r\n            key: 'gender',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'អាយុ',\r\n            dataIndex: 'age',\r\n            key: 'age',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'សញ្ជាតិ',\r\n            dataIndex: 'nationality',\r\n            key: 'nationality',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'អាស័យដ្ឋាន',\r\n            dataIndex: 'address',\r\n            key: 'address',\r\n            width: 250,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {(record.village !== \"ក្រៅសៀមរាប\") && record.village}\r\n                    {record.commune !== \"ក្រៅសៀមរាប\" && record.commune}\r\n                    {record.district !== \"ក្រៅសៀមរាប\" && record.district}\r\n                    {record.province && record.province}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'មុខរបរ',\r\n            dataIndex: 'occupation',\r\n            key: 'occupation',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'ទូរស័ព្ទ',\r\n            dataIndex: 'tel',\r\n            key: 'tel',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'ចំណាំ',\r\n            dataIndex: 'other',\r\n            key: 'other',\r\n            width: 150,\r\n        },\r\n        {\r\n            key: 'action',\r\n            dataIndex: 'action',\r\n            fixed: 'right',\r\n            width: 80,\r\n            align: 'center',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    <Link className=\"link\" to={\"/subPeople/\" + record.id}><EyeOutlined /></Link>\r\n                    <Popconfirm\r\n                        title=\"តើអ្នកពិតចង់លុបមែនឬទេ?\"\r\n                        onConfirm={() => { handleDelete(record.id) }}\r\n                        okText=\"ចង់\"\r\n                        cancelText=\"មិនចង់\"\r\n                    >\r\n                        <span className=\"link\" style={{ color: \"red\" }}><DeleteOutlined /></span>\r\n                    </Popconfirm>\r\n\r\n                </Space>\r\n            ),\r\n        }\r\n    ]\r\n    return array\r\n}","import React, { useContext, useState } from 'react'\r\nimport { Modal, Form, Input, Row, Col, Button, Select, Divider,DatePicker, message  } from 'antd'\r\nimport { provinceData, districtData, communeData, villageData, genderData} from '../../../context/headerContext'\r\nimport { ListSelect } from '../../../static/own-comp'\r\nimport { convertToCommune, convertToDistrict, convertToVillage } from '../../../function/fn'\r\nimport { PeopleController } from '../../../context/peopleContext'\r\nimport { useQuery, useMutation } from '@apollo/client'\r\nimport { GET_ALL_CASES_NO_LIMIT } from '../../../graphql/case'\r\nimport { CREATE_NEW_PERSON } from '../../../graphql/people'\r\nimport { setAddPeople } from '../../../function/set'\r\n\r\nconst { Option } = Select\r\n\r\nexport default function AddPeople({ open, setOpen }) {\r\n    \r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const [province, setProvince] = useState(\"\")\r\n    const [district, setDistrict] = useState(\"\")\r\n    const [commune, setCommune] = useState(\"\")\r\n    const [allCases, setAllCases] = useState([])\r\n\r\n    const [createPersonalInfo,{loading:loadingCreate,error:errorCreate}] = useMutation(CREATE_NEW_PERSON,{\r\n        onCompleted:({createPersonalInfo})=>{\r\n            message.success(\"បញ្ចូលទិន្នន័យជោគជ័យ\")\r\n        },\r\n        onError:(error)=>{\r\n            console.log(error.message)\r\n        }\r\n    })\r\n\r\n    const {data,loading,error} = useQuery(GET_ALL_CASES_NO_LIMIT,{\r\n        onCompleted:({allCases})=>{\r\n            // console.log(allCases)\r\n            setAllCases(allCases)\r\n        }\r\n    })\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Success:', setAddPeople(values));\r\n\r\n        createPersonalInfo({variables:setAddPeople(values)})\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const setToGenderFn = (e) => {\r\n        form.setFieldsValue({\r\n            gender: e\r\n        });\r\n    };\r\n\r\n    const setToProviceFn = (e) => {\r\n        form.setFieldsValue({\r\n            province: e,\r\n            district: null,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setProvince(e)\r\n        setDistrict(\"\")\r\n        setCommune(\"\")\r\n    };\r\n\r\n\r\n    const setToDistrictFn = (e) => {\r\n        form.setFieldsValue({\r\n            district: e,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setDistrict(e)\r\n        setCommune(\"\")\r\n    };\r\n\r\n    const setToCommuneFn = (e) => {\r\n        form.setFieldsValue({\r\n            commune: e,\r\n            village: null,\r\n        });\r\n\r\n        setCommune(e)\r\n    };\r\n\r\n    const setToVillageFn = (e) => {\r\n        form.setFieldsValue({\r\n            village: e\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            title=\"បញ្ចូលប្រជាជនថ្មី\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"addPeople\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 24 }}>\r\n                        <Form.Item\r\n                            name=\"idCard\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"អត្តសញ្ញាណប័ណ្ណ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"lastName\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"គោត្តនាម\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"firstName\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"នាម\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"gender\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n\r\n                            <ListSelect type={0} data={genderData} title=\"ភេទ\" setValue={setToGenderFn} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"age\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"អាយុ\" type=\"number\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"occupation\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"មុខរបរ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"tel\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"ទូរស័ព្ទ\" addonBefore=\"+855\" type=\"number\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"nationality\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"សញ្ជាតិ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"province\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <ListSelect type={1} data={provinceData} title=\"ខេត្ត/ក្រុង\" setValue={setToProviceFn} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {province === \"សៀមរាប\" ? (\r\n                        <>\r\n                            <Col xs={24} md={{ span: 11 }}>\r\n                                <Form.Item\r\n                                    name=\"district\"\r\n                                    rules={[{ required: true, message: 'Please input your username!' }]}\r\n                                >\r\n                                    <ListSelect type={0} data={convertToDistrict(districtData)} title=\"ស្រុក/ខណ្ឌ\" setValue={setToDistrictFn} disabled={province !== \"សៀមរាប\" ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                                <Form.Item\r\n                                    name=\"commune\"\r\n                                    rules={[{ required: true, message: 'Please input your username!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToCommune(district, communeData)} title=\"ឃុំ/សង្កាត់\" setValue={setToCommuneFn} disabled={district === \"\" || district === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 24 }}>\r\n                                <Form.Item\r\n                                    name=\"village\"\r\n                                    rules={[{ required: true, message: 'Please input your username!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToVillage(commune, villageData)} title=\"ភូមិ\" setValue={setToVillageFn} disabled={commune === \"\" || commune === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </>\r\n                    ) : null}\r\n\r\n                    <Col xs={24} md={{ span:24}}>\r\n                        <Form.Item\r\n                            name=\"vaccinated\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input type=\"number\" placeholder=\"ចំនួនចាក់វ៉ាក់សាំង\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Divider>ពាក់ព័ន្ធករណី</Divider>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"case\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            {/* <Input type=\"number\" placeholder=\"ចំនួនចាក់វ៉ាក់សាំង\" /> */}\r\n                            <Select placeholder=\"ករណី\" style={{ width: \"100%\" }} onChange={(e)=> console.log(e)}>\r\n                                {\r\n                                    allCases.map((c)=>(\r\n                                        <Option value={c.id}>{c.caseName}</Option>\r\n                                    ))\r\n                                }\r\n                                {/* <Option value={true}>ផ្ទាល់</Option>\r\n                                <Option value={false}>ប្រយោល</Option> */}\r\n\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset:2 }}>\r\n                        <Form.Item\r\n                            name=\"direct\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Select placeholder=\"លក្ខណៈពាក់ព័ន្ធ\" style={{ width: \"100%\" }}>\r\n                                <Option value={true}>ផ្ទាល់</Option>\r\n                                <Option value={false}>ប្រយោល</Option>\r\n\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {/* <Divider>ស្ថានភាពបច្ចុប្បន្ន</Divider>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"status\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Select placeholder=\"ស្ថានភាព\" style={{ width: \"100%\" }}>\r\n                                <Option value=\"អវិជ្ជមាន\">អវិជ្ជមាន</Option>\r\n                                <Option value=\"វិជ្ជមាន\">វិជ្ជមាន</Option>\r\n\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11,offset:2 }}>\r\n                        <Form.Item\r\n                            name=\"date\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <DatePicker placeholder=\"កាលបរិច្ឆេទ\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"direct\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Select placeholder=\"លក្ខណៈពាក់ព័ន្ធ\" style={{ width: \"100%\" }}>\r\n                                <Option value={true}>ផ្ទាល់</Option>\r\n                                <Option value={false}>ប្រយោល</Option>\r\n\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span:11, offset:2 }}>\r\n                        <Form.Item\r\n                            name=\"otherOfStatus\"\r\n                            \r\n                        >\r\n                            <Input placeholder=\"ផ្សេងៗ\" />\r\n                        </Form.Item>\r\n                    </Col> */}\r\n\r\n                    \r\n\r\n                    <Col xs={24} md={{ span:24}}>\r\n                        <Form.Item\r\n                            name=\"other\"\r\n                            \r\n                        >\r\n                            <Input placeholder=\"ចំណាំ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import { gql } from '@apollo/client'\r\n\r\nexport const GET_ALL_HOSPITAL = gql`\r\n# Write your query or mutation here\r\nquery getHospitalInfoWithPagination($page:Int!,$limit:Int!,$keyword:String){\r\n  getHospitalInfoWithPagination(page:$page,limit:$limit,keyword:$keyword){\r\n    hospitalInfos{\r\n      id\r\n      hospitalName\r\n      village\r\n      commune\r\n      district\r\n      province\r\n      long\r\n      lat\r\n      createdAt\r\n      updatedAt\r\n      other\r\n      personInCharge{\r\n        firstName\r\n        lastName\r\n        position\r\n        others\r\n        tel\r\n      }\r\n    }\r\n    paginator{\r\n      slNo\r\n      prev\r\n      next\r\n      perPage\r\n      totalPosts\r\n      totalPages\r\n      currentPage\r\n      hasPrevPage\r\n      hasNextPage\r\n      totalDocs\r\n    }\r\n    \r\n  }\r\n}\r\n`;\r\n\r\nexport const CREATE_HOSPITALINFO = gql`\r\nmutation createHospitalInfo(\r\n    $hospitalName:String,\r\n    $village:String,\r\n    $commune:String,\r\n    $district:String,\r\n    $province:String,\r\n    $long:Float,\r\n    $lat:Float,\r\n    $other:String,\r\n    $firstName:String,\r\n    $lastName:String,\r\n    $position:String,\r\n    $others:String,\r\n    $tel:String,\r\n){\r\n    createHospitalInfo(newHospitalInfo:{\r\n      hospitalName:$hospitalName\r\n      village:$village\r\n      commune:$commune\r\n      district:$district\r\n      province:$province\r\n      long:$long\r\n      lat:$lat\r\n      other:$other\r\n      personInCharge:{\r\n        firstName:$firstName\r\n        lastName:$lastName\r\n        position:$position\r\n        others:$others\r\n        tel:$tel\r\n      }\r\n    }){\r\n      success\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DELETE_HOSPITALINFO_BY_ID = gql`\r\nmutation deleteHospitalInfo($id:ID!){\r\n    deleteHospitalInfo(id:$id){\r\n      success\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_NEW_HOSPITALIZATION = gql`\r\nmutation createHospitalization(\r\n    $in:Boolean\r\n    $date_in:DateTime\r\n    $date_out:DateTime\r\n    $personalInfo:ID!\r\n    $hospitalInfo:ID!\r\n    $others:String\r\n    \r\n){\r\n  createHospitalization(newHospitalization:{\r\n    in:$in\r\n    date_in:$date_in\r\n    date_out:$date_out\r\n    personalInfo:$personalInfo\r\n    hospitalInfo:$hospitalInfo\r\n    others:$others\r\n    \r\n  }){\r\n    success\r\n    message\r\n  }\r\n}\r\n`;\r\n\r\nexport const GET_PERSON_BY_HOSPITALINFO = gql`\r\nquery getQuarantineByHospitalIdIdWithPagination($page:Int!,$limit:Int!,$keyword:String,$hospitalId:ID!){\r\n  getQuarantineByHospitalIdIdWithPagination(page:$page,limit:$limit,keyword:$keyword,hospitalId:$hospitalId){\r\n    hospitalizations{\r\n      id\r\n      in\r\n      date_in\r\n      date_out\r\n      out_status\r\n      personalInfo{\r\n        id\r\n        firstName\r\n        lastName\r\n        village\r\n        commune\r\n        district\r\n        province\r\n        direct\r\n        currentState{\r\n          confirm\r\n          death\r\n          recovered\r\n        }\r\n      }\r\n      others\r\n    }\r\n    paginator{\r\n      slNo\r\n      prev\r\n      next\r\n      perPage\r\n      totalPosts\r\n      totalPages\r\n      currentPage\r\n      hasPrevPage\r\n      hasNextPage\r\n      totalDocs\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nexport const GET_HOSPITALINFO_BY_ID = gql`\r\nquery getHospitalInfoById($id:ID!){\r\n\tgetHospitalInfoById(id:$id){\r\n   \tid\r\n    hospitalName\r\n    village\r\n    commune\r\n    district\r\n    province\r\n    long\r\n    lat\r\n    other\r\n    personInCharge{\r\n      firstName\r\n      lastName\r\n      position\r\n      others\r\n      tel\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nexport const UPDATE_HOSPITALINFO_BY_ID = gql`\r\nmutation updateHospitalInfo(\r\n    $hospitalName:String\r\n    $village:String\r\n    $commune:String\r\n    $district:String\r\n    $province:String\r\n    $long:Float\r\n    $lat:Float\r\n    $other:String\r\n    $firstName:String\r\n    $lastName:String\r\n    $position:String\r\n    $others:String\r\n    $tel:String\r\n    $id:ID!\r\n){\r\n  updateHospitalInfo(updatedHospitalInfo:{\r\n    hospitalName:$hospitalName\r\n    village:$village\r\n    commune:$commune\r\n    district:$district\r\n    province:$province\r\n    long:$long\r\n    lat:$lat\r\n    other:$other\r\n    personInCharge:{\r\n      firstName:$firstName\r\n      lastName:$lastName\r\n      position:$position\r\n      others:$others\r\n      tel:$tel\r\n    }\r\n  },id:$id){\r\n    success\r\n    message\r\n  }\r\n}\r\n`;\r\n\r\nexport const UPDATE_PERSON_BY_HOSPITALINFO = gql`\r\nmutation updateHospitalization(\r\n    $in:Boolean,\r\n    $date_in:DateTime,\r\n    $date_out:DateTime,\r\n    $out_status:String,\r\n    $personalInfo:ID!,\r\n    $hospitalInfo:ID!,\r\n    $others:String,\r\n    $id:ID!\r\n){\r\n\tupdateHospitalization(updatedHospitalization:{\r\n    in:$in\r\n    date_in:$date_in\r\n    date_out:$date_out\r\n    out_status:$out_status\r\n    personalInfo:$personalInfo\r\n    hospitalInfo:$hospitalInfo\r\n    others:$others\r\n  },id:$id){\r\n    success\r\n    message\r\n  }\r\n}\r\n`;","import React, {useContext, useState} from 'react'\r\nimport { Row, Col, Button, Input, Table, message } from 'antd'\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { PeopleController } from '../context/peopleContext';\r\nimport { peopleCol } from '../component/people/tableColumn/peopleColumn';\r\nimport AddPeople from '../component/people/modal/addPeople';\r\nimport { useQuery,useMutation } from '@apollo/client';\r\nimport { DELETE_PERSONALINFO_BY_ID, GET_ALL_PERSONINFO } from '../graphql/people';\r\nimport { DELETE_HOSPITALINFO_BY_ID } from '../graphql/hospital';\r\n\r\nexport default function People() {\r\n\r\n    const [openAdd, setOpenAdd] = useState(false)\r\n    const [page, setPage] = useState(1)\r\n    const [limit, setLimit] = useState(10)\r\n    const [keyword, setKeyword] = useState(\"\")\r\n    const [peopleData, setPeopleData] = useState([])\r\n\r\n    const {data,loading,error} = useQuery(GET_ALL_PERSONINFO,{\r\n        variables:{\r\n            page:page,\r\n            limit:limit,\r\n            keyword:keyword,\r\n        },\r\n        onCompleted:({getPersonalInfoWithPagination})=>{\r\n            //console.log(getPersonalInfoWithPagination)\r\n            setPeopleData(getPersonalInfoWithPagination)\r\n        }\r\n    })\r\n\r\n    const [deletePersonalInfo,{loading:deleteLoading}] = useMutation(DELETE_PERSONALINFO_BY_ID,{\r\n        onCompleted:()=>{\r\n            message.success(\"លុបទិន្នន័យជោគជ័យ\")\r\n        }\r\n    })\r\n\r\n    const handleDelete = (e) => {\r\n        deletePersonalInfo({\r\n            variables:{\r\n                id:e\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <AddPeople open={openAdd} setOpen={setOpenAdd} />\r\n            <Col\r\n                xs={8}\r\n                md={18}\r\n            >\r\n                <Button\r\n                    type=\"primary\"\r\n                    onClick={() => setOpenAdd(true)}\r\n                >\r\n                    បញ្ចូលប្រជាជន\r\n                    <PlusOutlined />\r\n                </Button>\r\n            </Col>\r\n            <Col\r\n                xs={16}\r\n                md={6}\r\n            >\r\n                <Input.Search\r\n                    onChange={(e)=>setKeyword(e.target.value)}\r\n                    placeholder=\"ស្វែងរក...\"\r\n                />\r\n            </Col>\r\n            <Col\r\n                xs={24}\r\n                style={{ marginTop: 20 }}\r\n            >\r\n                <Table\r\n                    columns={peopleCol({handleDelete,limit,page})}\r\n                    dataSource={peopleData?.personalInfos}\r\n                    rowKey={record => record.id}\r\n                    pagination={{\r\n                        total: peopleData?.paginator?.totalDocs,\r\n                        //pageSizeOptions:[\"10\", \"20\"],\r\n                        // showSizeChanger: true,\r\n                        current: peopleData?.paginator?.currentPage,\r\n                        onChange: ((page, pageSize) => { setPage(page); setLimit(pageSize) })\r\n                    }}\r\n                    scroll={{ x: 1000 }} \r\n                    sticky \r\n                />\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n","import { Space, Popconfirm } from 'antd'\r\nimport {\r\n    EyeOutlined,\r\n    DeleteOutlined\r\n} from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nexport const testCol = ({handleDelete}) => {\r\n    var array = [\r\n        {\r\n            title: 'ល.រ',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: 30,\r\n            render: (text, record, i) => (\r\n                <Space size=\"middle\">\r\n                    {i += 1}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'កាលបរិច្ឆេទ',\r\n            dataIndex: 'date',\r\n            key: 'date',\r\n            width: 80,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {moment(record.date).format(\"ថ្ងែDD ខែMM ឆ្នាំYYYY\")}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'លើកទី',\r\n            dataIndex: 'times',\r\n            key: 'times',\r\n            width: 50,\r\n        },\r\n        {\r\n            title: 'ទីតាំង',\r\n            dataIndex: 'location',\r\n            key: 'location',\r\n            width: 50,\r\n        },\r\n        {\r\n            title: 'លទ្ធផល',\r\n            dataIndex: 'sampleTest',\r\n            key: 'sampleTest',\r\n            width: 60,\r\n            render:(text,record)=>(\r\n                <Space size=\"middle\">\r\n                    { record?.result ? \"វិជ្ជមាន\":\"អវិជ្ជមាន\" }\r\n                    {/* {console.log(record?.result )} */}\r\n                </Space>\r\n            )\r\n        },\r\n        {\r\n            title: 'អាការ',\r\n            dataIndex: 'symptom',\r\n            key: 'symptom',\r\n            width: 50,\r\n        },\r\n        {\r\n            title: 'ផ្សេងៗ',\r\n            dataIndex: 'other',\r\n            key: 'other',\r\n            width: 100,\r\n        },\r\n        {\r\n            key: 'action',\r\n            dataIndex: 'action',\r\n            fixed: 'right',\r\n            width: 30,\r\n            align: 'center',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    <Popconfirm\r\n                        title=\"តើអ្នកពិតចង់លុបមែនឬទេ?\"\r\n                        onConfirm={() => { handleDelete(record.id) }}\r\n                        okText=\"ចង់\"\r\n                        cancelText=\"មិនចង់\"\r\n                    >\r\n                        <span className=\"link\" style={{ color: \"red\" }}><DeleteOutlined /></span>\r\n                    </Popconfirm>\r\n\r\n                </Space>\r\n            ),\r\n        }\r\n    ]\r\n\r\n    return array\r\n}","import { Space, Popconfirm } from 'antd'\r\nimport {\r\n    EyeOutlined,\r\n    DeleteOutlined\r\n} from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const relatedCol = ({handleDelete}) => {\r\n    var array = [\r\n        {\r\n            title: 'ល.រ',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: 50,\r\n            render: (text, record, i) => (\r\n                <Space size=\"middle\">\r\n                    {i += 1}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'ឈ្មោះ',\r\n            dataIndex: 'date',\r\n            key: 'date',\r\n            width: 80,\r\n        },\r\n        {\r\n            title: 'ភេទ',\r\n            dataIndex: 'status',\r\n            key: 'status',\r\n            width: 80,\r\n        },\r\n        {\r\n            title: 'អាស័យដ្ឆាន',\r\n            dataIndex: 'status',\r\n            key: 'status',\r\n            width: 200,\r\n        },\r\n        {\r\n            title: 'ស្ថានភាព',\r\n            dataIndex: 'status',\r\n            key: 'status',\r\n            width: 80,\r\n        },\r\n        {\r\n            title: 'លក្ខណៈពាក់ព័ន្ធ',\r\n            dataIndex: 'status',\r\n            key: 'status',\r\n            width: 150,\r\n        },\r\n        {\r\n            key: 'action',\r\n            dataIndex: 'action',\r\n            fixed: 'right',\r\n            width: 40,\r\n            align: 'center',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    <Popconfirm\r\n                        title=\"តើអ្នកពិតចង់លុបមែនឬទេ?\"\r\n                        onConfirm={() => { handleDelete(record.id) }}\r\n                        okText=\"ចង់\"\r\n                        cancelText=\"មិនចង់\"\r\n                    >\r\n                        <span className=\"link\" style={{ color: \"red\" }}><DeleteOutlined /></span>\r\n                    </Popconfirm>\r\n\r\n                </Space>\r\n            ),\r\n        }\r\n    ]\r\n\r\n    return array\r\n}","import React, { useContext, useState } from 'react'\r\nimport { Modal, Form, Input, Row, Col, Button, Select, DatePicker,message } from 'antd'\r\nimport { provinceData, districtData, communeData, villageData, genderData } from '../../../context/headerContext'\r\nimport { ListSelect } from '../../../static/own-comp'\r\nimport { convertToCommune, convertToDistrict, convertToVillage } from '../../../function/fn'\r\nimport { PeopleController } from '../../../context/peopleContext'\r\nimport { useMutation,useQuery } from '@apollo/client';\r\nimport { RECORD_SAMPLETEST } from '../../../graphql/people';\r\nimport moment from 'moment'\r\n\r\nconst {Option} = Select\r\n\r\nexport default function AddPeopleTest({ open, setOpen, peopleID }) {\r\n    //const { peopleDataDispatch } = useContext(PeopleController)\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const [recordSampleTest,{loading}] = useMutation(RECORD_SAMPLETEST,{\r\n        onCompleted:()=>{\r\n            message.success(\"បញ្ចូលទិន្នន័យជោគជ័យ\")\r\n        }\r\n    })\r\n\r\n    console.log(peopleID)\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Success:', values);\r\n\r\n        //peopleDataDispatch({ type: 'ADD_PEOPLE', payload: values })\r\n\r\n        recordSampleTest({\r\n            variables:{\r\n                date:moment(values.date).format(),\r\n                times: parseInt(values.times),\r\n                location:values.location,\r\n                result:values.result,\r\n                symptom:values.symptom,\r\n                other:values.other,\r\n                personalInfoId:peopleID,\r\n            }\r\n        })\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            title=\"បញ្ចូលការធ្វើតេស្ត\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"addPeopleTest\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"date\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <DatePicker placeholder=\"កាលបវិច្ឆេទការធ្វើតេស្ត\" style={{width:\"100%\"}}/>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"location\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"ទីតាំង\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"result\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            {/* <Input placeholder=\"លទ្ធផល\" /> */}\r\n                            <Select placeholder=\"លទ្ធផល\" style={{ width: \"100%\" }}>\r\n                                <Option value={true}>វិជ្ជមាន</Option>\r\n                                <Option value={false}>អវិជ្ជមាន</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"times\"\r\n                            // rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input type=\"number\" placeholder=\"លើក\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 24}}>\r\n                        <Form.Item\r\n                            name=\"symptom\"\r\n                            // rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"អាការ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 24 }}>\r\n                        <Form.Item\r\n                            name=\"other\"\r\n                        \r\n                        >\r\n                            <Input placeholder=\"ចំណាំ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { Modal, Form, Input, Row, Col, Button, Select, DatePicker } from 'antd'\r\nimport { provinceData, districtData, communeData, villageData, genderData } from '../../../context/headerContext'\r\nimport { ListSelect } from '../../../static/own-comp'\r\nimport { convertToCommune, convertToDistrict, convertToVillage } from '../../../function/fn'\r\nimport { PeopleController } from '../../../context/peopleContext'\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nexport default function AddPeopleHospital({ open, setOpen }) {\r\n    const { peopleDataDispatch } = useContext(PeopleController)\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Success:', values);\r\n\r\n        peopleDataDispatch({ type: 'ADD_PEOPLE', payload: values })\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const DateHolder = [\"កាលបរិច្ឆេទចូល\", \"កាលបរិច្ឆេទចេញ\"]\r\n\r\n    return (\r\n        <Modal\r\n            title=\"បញ្ចូលមណ្ឌលព្យាបាល\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"addPeopleHospital\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"name\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"ឈ្មោះមណ្ឌល\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"place\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"ទីតាំង\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} md={{ span: 24}}>\r\n                        <Form.Item\r\n                            name=\"dateInOut\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <RangePicker placeholder={DateHolder} style={{width: \"100%\"}} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { Modal, Form, Input, Row, Col, Button, Select, DatePicker } from 'antd'\r\nimport { provinceData, districtData, communeData, villageData, genderData } from '../../../context/headerContext'\r\nimport { ListSelect } from '../../../static/own-comp'\r\nimport { convertToCommune, convertToDistrict, convertToVillage } from '../../../function/fn'\r\nimport { PeopleController } from '../../../context/peopleContext'\r\n\r\nexport default function AddPeopleStatus({ open, setOpen }) {\r\n    const { peopleDataDispatch } = useContext(PeopleController)\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Success:', values);\r\n\r\n        peopleDataDispatch({ type: 'ADD_PEOPLE', payload: values })\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            title=\"បញ្ចូលស្ថានភាពបច្ចុប្បន្ន\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"addPeopleStatus\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"date\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <DatePicker placeholder=\"កាលបវិច្ឆេទ\" style={{width:\"100%\"}}/>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"status\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"ស្ថានភាព\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 24 }}>\r\n                        <Form.Item\r\n                            name=\"remark\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"ផ្សេងៗ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { Modal, Form, Input, Row, Col, Button, Select, DatePicker } from 'antd'\r\nimport { provinceData, districtData, communeData, villageData, genderData } from '../../../context/headerContext'\r\nimport { ListSelect } from '../../../static/own-comp'\r\nimport { convertToCommune, convertToDistrict, convertToVillage } from '../../../function/fn'\r\nimport { PeopleController } from '../../../context/peopleContext'\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nexport default function AddPeopleQuarantine({ open, setOpen }) {\r\n    const { peopleDataDispatch } = useContext(PeopleController)\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Success:', values);\r\n\r\n        peopleDataDispatch({ type: 'ADD_PEOPLE', payload: values })\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const DateHolder = [\"ចាប់ផ្តើមចត្តាឡីស័ក\", \"បញ្ចាប់ចត្តាឡីស័ក\"]\r\n\r\n    return (\r\n        <Modal\r\n            title=\"បញ្ចូលការធ្វើចត្តាឡីស័ក\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"addPeopleQuarantine\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 24 }}>\r\n                        <Form.Item\r\n                            name=\"dateInOut\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <RangePicker placeholder={DateHolder} style={{width: \"100%\"}} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} md={{ span: 24 }}>\r\n                        <Form.Item\r\n                            name=\"place\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"ទីតាំង\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} md={{ span: 24}}>\r\n                        <Form.Item\r\n                            name=\"address\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"អាស័យដ្ឋាន\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { Modal, Form, Input, Row, Col, Button, Select } from 'antd'\r\nimport { provinceData, districtData, communeData, villageData, genderData } from '../../../context/headerContext'\r\nimport { ListSelect } from '../../../static/own-comp'\r\nimport { convertToCommune, convertToDistrict, convertToVillage } from '../../../function/fn'\r\nimport { PeopleController } from '../../../context/peopleContext'\r\n\r\nexport default function AddPeopleHistory({ open, setOpen }) {\r\n    const { peopleDataDispatch } = useContext(PeopleController)\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Success:', values);\r\n\r\n        peopleDataDispatch({ type: 'ADD_PEOPLE', payload: values })\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const DateHolder = [\"កាលបរិច្ឆេទចូល\", \"កាលបរិច្ឆេទចេញ\"]\r\n\r\n    return (\r\n        <Modal\r\n            title=\"បញ្ចូលប្រវត្តិដំណើរករណី\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"addPeopleHistory\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"caseName\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"ឈ្មោះករណី\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"place\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"ទីតាំង\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} md={{ span: 24}}>\r\n                        <Form.Item\r\n                            name=\"ទំនាក់ទំនង\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"ទំនាក់ទំនង\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Modal, Form, Row, Col, Button, Upload, message } from 'antd'\r\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport ImgCrop from 'antd-img-crop';\r\n\r\nfunction getBase64(img, callback) {\r\n    const reader = new FileReader();\r\n    reader.addEventListener('load', () => callback(reader.result));\r\n    reader.readAsDataURL(img);\r\n}\r\n\r\nfunction beforeUpload(file) {\r\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n    if (!isJpgOrPng) {\r\n        message.error('You can only upload JPG/PNG file!');\r\n    }\r\n    const isLt2M = file.size / 1024 / 1024 < 2;\r\n    if (!isLt2M) {\r\n        message.error('Image must smaller than 2MB!');\r\n    }\r\n    return isJpgOrPng && isLt2M;\r\n}\r\n\r\nexport default function UploadPic({ open, setOpen }) {\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Success:', values);\r\n        console.log(fileList)\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const onChange = ({ fileList: newFileList }) => {\r\n        setFileList(newFileList);\r\n        console.log(newFileList)\r\n      };\r\n\r\n    const onPreview = async file => {\r\n        let src = file.url;\r\n        if (!src) {\r\n          src = await new Promise(resolve => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file.originFileObj);\r\n            reader.onload = () => resolve(reader.result);\r\n          });\r\n        }\r\n        const image = new Image();\r\n        image.src = src;\r\n        const imgWindow = window.open(src);\r\n        imgWindow.document.write(image.outerHTML);\r\n      };\r\n\r\n    return (\r\n        <Modal\r\n            title=\"បញ្ចូលរូបភាព\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"uploadPic\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col\r\n                        xs={24}\r\n                    >\r\n                        <ImgCrop rotate>\r\n                            <Upload\r\n                                action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                                listType=\"picture-card\"\r\n                                fileList={fileList}\r\n                                onChange={onChange}\r\n                                onPreview={onPreview}\r\n                                maxCount={1}\r\n                            >\r\n                                {fileList.length < 5 && '+ Upload'}\r\n                            </Upload>\r\n                        </ImgCrop>\r\n                    </Col>\r\n\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import { Col, Image, message, Row, Table, Typography } from 'antd'\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { CameraOutlined, PlusCircleOutlined,CheckOutlined,CloseOutlined} from '@ant-design/icons';\r\nimport { PeopleController } from '../../context/peopleContext'\r\nimport { statusCol } from './tableColumn/statusColumn'\r\nimport { testCol } from './tableColumn/testColumn'\r\nimport { relatedCol } from './tableColumn/relatedColumn'\r\nimport AddSubCase from '../case/modal/addSubCase'\r\nimport AddPeopleTest from './modal/addPeopleTest'\r\nimport AddPeopleHospital from './modal/addPeopleHospital'\r\nimport AddPeopleStatus from './modal/addPeopleStatus'\r\nimport AddPeopleQuarantine from './modal/addPeopleQuarantine'\r\nimport AddPeopleHistory from './modal/addPeopleHistory'\r\nimport UploadPic from './modal/uploadPic'\r\nimport { useMutation,useQuery } from '@apollo/client';\r\nimport { GET_PERSONALINFO_BY_ID } from '../../graphql/people';\r\n\r\nconst { Title } = Typography\r\n\r\nexport default function SubPeople() {\r\n    //const { peopleData } = useContext(PeopleController)\r\n    const { id } = useParams()\r\n\r\n    const [personalData, setPersonalData] = useState({})\r\n    const [openAddSubCase, setOpenAddSubCase] = useState(false)\r\n    const [openAddPeopleTest, setOpenAddPeopleTest] = useState(false)\r\n    const [openAddPeopleHospital, setOpenAddPeopleHospital] = useState(false)\r\n    const [openAddPeopleStatus, setOpenAddPeopleStatus] = useState(false)\r\n    const [openAddPeopleQuarantine, setOpenAddPeopleQuarantine] = useState(false)\r\n    const [openAddPeopleHistory, setOpenAddPeopleHistory]= useState(false)\r\n    const [openUploadPic, setOpenUploadPic] = useState(false)\r\n\r\n    const {data}=useQuery(GET_PERSONALINFO_BY_ID,{\r\n        variables:{\r\n            id:id\r\n        },\r\n        onCompleted:({getPersonalInfoById})=>{\r\n            console.log(getPersonalInfoById)\r\n            setPersonalData(getPersonalInfoById)\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        //setPersonalData(peopleData[peopleData.findIndex(e => e.id === id)])\r\n        //console.log(peopleData)\r\n    }, [])\r\n\r\n    const handleDelete = () => {\r\n\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <AddSubCase open={openAddSubCase} setOpen={setOpenAddSubCase} caseId={\"1\"} />\r\n            <AddPeopleTest open={openAddPeopleTest} setOpen={setOpenAddPeopleTest} peopleID={id} />\r\n            <AddPeopleHospital open={openAddPeopleHospital} setOpen={setOpenAddPeopleHospital} />\r\n            <AddPeopleStatus open={openAddPeopleStatus} setOpen={setOpenAddPeopleStatus} />\r\n            <AddPeopleQuarantine open={openAddPeopleQuarantine} setOpen={setOpenAddPeopleQuarantine} />\r\n            <AddPeopleHistory open={openAddPeopleHistory} setOpen={setOpenAddPeopleHistory} />\r\n            <UploadPic open={openUploadPic} setOpen={setOpenUploadPic} />\r\n            <Col\r\n                xs={24} md={15}\r\n                className=\"subPeople-card\"\r\n            >\r\n                <Row\r\n                    style={{\r\n                        border: \"1px solid #d9d9d9\",\r\n                    }}\r\n                >\r\n                    <Col\r\n                        xs={24} md={8}\r\n                        style={{\r\n                            position: \"relative\",\r\n                            padding: 20,\r\n                        }}\r\n                        \r\n                    >\r\n                        <Image\r\n                            width={\"100%\"}\r\n                            src=\"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\"\r\n                        />\r\n                        <span className=\"btnCamera\" onClick={() =>setOpenUploadPic(true)}>\r\n                            <CameraOutlined />\r\n                        </span>\r\n                    </Col>\r\n                    <Col\r\n                        xs={24} md={10}\r\n                    >\r\n                        <ul className=\"list\">\r\n                            <li>ឈ្មោះ៖ {personalData?.lastName} {personalData?.firstName}</li>\r\n                            <li>ភេទ៖ {personalData?.gender}</li>\r\n                            <li>សញ្ជាតិ៖ {personalData?.nationality}</li>\r\n                            <li>លេខអត្តសញ្ញាណប័ណ្ឌ៖ {personalData?.idCard}</li>\r\n                            <li>លេខទូរស័ព្ទ៖ {personalData?.tel}</li>\r\n                            <li>មុខរបរ៖ {personalData?.occupation}</li>\r\n                            <li>អាស័យដ្ឋាន៖ ភូមិ{personalData?.village}  ឃុំ{personalData?.commune}  ស្រុក{personalData?.district}  ខេត្ត{personalData?.province} </li>\r\n                        </ul>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n            <Col\r\n                xs={24} md={{ span: 8, offset: 1 }}\r\n                style={{\r\n                    border: \"1px solid #d9d9d9\",\r\n                    padding: \"20px 20px 20px 0\",\r\n                }}\r\n                className=\"subPeople-card\"\r\n            >\r\n                <ul className=\"list\">\r\n                    <li><Title level={5}>ការធ្វើចត្តាឡីស័ក <span className=\"link\" onClick={() => setOpenAddPeopleQuarantine(true)}><PlusCircleOutlined /></span></Title></li>\r\n                    <li>ចាប់ផ្តើម៖ </li>\r\n                    <li>ចេញ៖ </li>\r\n                    <li>ទីតាំង៖ </li>\r\n                    <li>អាស័យដ្ឋាន៖ ភូមិ{personalData?.village}  ឃុំ{personalData?.commune}  ស្រុក{personalData?.district}  ខេត្ត{personalData?.province} </li>\r\n                </ul>\r\n            </Col>\r\n            <Col\r\n                xs={24} md={{ span: 11 }}\r\n                style={{ paddingTop: 14 }}\r\n            >\r\n                <Title level={5}>ស្ថានភាពបច្ចុប្បន្ន <span className=\"link\" onClick={() => setOpenAddPeopleStatus(true)}><PlusCircleOutlined /></span></Title>\r\n                {/* <Table\r\n                    columns={statusCol({ handleDelete })}\r\n                    dataSource={[{ id: \"1\", date: \"alsdjas\", status: \"laskldfj\", remark: \"laksdjald\" }]}\r\n                    rowKey={record => record.id}\r\n                    pagination={true}\r\n                    scroll={{ x: 500, y: 300 }}\r\n                    sticky\r\n                /> */}\r\n                <ul className=\"list\">\r\n                    <li> { personalData?.currentState?.confirm ?  <CloseOutlined style={{color:\"red\"}} />  : <CheckOutlined style={{color:\"green\"}} /> } អវិជ្ជមាន</li>\r\n                    <li> { personalData?.currentState?.confirm ? <CheckOutlined style={{color:\"green\"}} /> : <CloseOutlined style={{color:\"red\"}} /> } វិជ្ជមាន</li>\r\n                    <li> { personalData?.currentState?.recovered ? <CheckOutlined  style={{color:\"green\"}} /> : <CloseOutlined style={{color:\"red\"}} /> } ជាសះស្បើយ</li>\r\n                    <li> { personalData?.currentState?.death ? <CheckOutlined style={{color:\"green\"}} /> : <CloseOutlined style={{color:\"red\"}} /> } ស្លាប់​</li>\r\n                </ul>\r\n            </Col>\r\n            <Col\r\n                xs={24} md={{ span: 12, offset: 1 }}\r\n                style={{ paddingTop: 14 }}\r\n            >\r\n                <Title level={5}>ប្រវត្តិដំណើរករណី <span className=\"link\" onClick={() => setOpenAddPeopleHistory(true)}><PlusCircleOutlined /></span></Title>\r\n                <ul className=\"list\">\r\n                    <li>ឈ្មោះករណី៖ </li>\r\n                    <li>ទីតាំង៖ ភូមិ{personalData?.village}  ឃុំ{personalData?.commune}  ស្រុក{personalData?.district}  ខេត្ត{personalData?.province} </li>\r\n                    <li>ទំនាក់ទំនង៖ </li>\r\n                </ul>\r\n                <Title level={5}>មណ្ឌលព្យាបាល <span className=\"link\" onClick={() => setOpenAddPeopleHospital(true)}><PlusCircleOutlined /></span></Title>\r\n                <Row>\r\n                    <Col\r\n                        xs={12}\r\n                    >\r\n                        <ul className=\"list\">\r\n                            <li>ឈ្មោះករណី៖ </li>\r\n                            <li>ទីតាំង៖</li>\r\n                            <li>ទំនាក់ទំនង៖ </li>\r\n                        </ul>\r\n                    </Col>\r\n                    <Col\r\n                        xs={12}\r\n                    >\r\n                        <ul className=\"list\">\r\n                            <li>កាលបរិច្ឆេទចូល៖ </li>\r\n                            <li>កាលបរិចេ្ឆទចេញ៖ </li>\r\n                        </ul>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n            <Col\r\n                xs={24} md={{ span: 11 }}\r\n                style={{ paddingTop: 14 }}\r\n            >\r\n                <Title level={5}>ការធ្វើតេស្ត <span className=\"link\" onClick={() => setOpenAddPeopleTest(true)} ><PlusCircleOutlined /></span></Title>\r\n                <Table\r\n                    columns={testCol({ handleDelete })}\r\n                    dataSource={personalData?.sampleTest}\r\n                    rowKey={record => record.id}\r\n                    pagination={true}\r\n                    scroll={{ x: 800, y: 300 }}\r\n                    sticky\r\n                />\r\n            </Col>\r\n            <Col\r\n                xs={24} md={{ span: 12, offset: 1 }}\r\n                style={{ paddingTop: 14 }}\r\n            >\r\n                <Title level={5}>\r\n                    អ្នកពាក់ព័ន្ធ <span className=\"link\" onClick={() => setOpenAddSubCase(true)}>\r\n                        <PlusCircleOutlined />\r\n                    </span>\r\n                </Title>\r\n                <Table\r\n                    columns={relatedCol({ handleDelete })}\r\n                    dataSource={[{ id: \"1\", date: \"alsdjas\", status: \"laskldfj\", remark: \"laksdjald\" }]}\r\n                    rowKey={record => record.id}\r\n                    pagination={true}\r\n                    scroll={{ x: 1000, y: 300 }}\r\n                    sticky\r\n                />\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Space, Tooltip, Popconfirm } from 'antd'\r\nimport {\r\n    EditOutlined,\r\n    DeleteOutlined\r\n} from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport const hospitalCol = ({handleDelete,limit,page}) => {\r\n    let no = ((page-1) * limit)\r\n    var array = [\r\n        {\r\n            title: 'ល.រ',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: 50,\r\n            render: (text, record, i) => (\r\n                <Space size=\"middle\">\r\n                    {no += 1}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'ឈ្មោះមណ្ឌល',\r\n            dataIndex: 'hospitalName',\r\n            key: 'hospitalName',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'អាសយដ្ឋាន  ',\r\n            dataIndex: 'address',\r\n            key: 'address',\r\n            width: 120,\r\n            render: (text, record) => (\r\n                // <Tooltip placement=\"top\" title={record.village + \",\" + record.commune + \",\" + record.district + \",\" + record.province}>\r\n                    <Space size=\"middle\">\r\n                        {(record.village !== \"ក្រៅសៀមរាប\") && record.village}\r\n                        {record.commune !== \"ក្រៅសៀមរាប\" && record.commune}\r\n                        {record.district !== \"ក្រៅសៀមរាប\" && record.district}\r\n                        {record.province && record.province}\r\n                    </Space>\r\n                // </Tooltip>\r\n            ),\r\n            \r\n        },\r\n        {\r\n            title: 'អ្នកទទួលខុសត្រូវ',\r\n            dataIndex: 'PersonInCharge',\r\n            key: 'PersonInCharge',\r\n            width: 100,\r\n            render: (text, record) => (\r\n                <span size=\"middle\">\r\n                    {\r\n                        // getFullNamePersonInCharge(record.personInCharge)\r\n                        record.personInCharge.lastName+\" \"+record.personInCharge.firstName\r\n                        // console.log(record.personInCharge)\r\n                    }\r\n                </span>\r\n            ),\r\n        },\r\n        {\r\n            title: 'លេខទូរស័ព្ទ',\r\n            dataIndex: 'tel',\r\n            key: 'tel',\r\n            width: 100,\r\n            render: (text, record) => (\r\n                <span size=\"middle\">\r\n                    {\r\n                        // getFullNamePersonInCharge(record.personInCharge)\r\n                        record.personInCharge.tel\r\n                        // console.log(record.personInCharge)\r\n                    }\r\n                </span>\r\n            ),\r\n        },\r\n        {\r\n            title: 'ចំណាំ',\r\n            dataIndex: 'other',\r\n            key: 'other',\r\n            width: 100,\r\n        },\r\n    \r\n        {\r\n            key: 'action',\r\n            dataIndex: 'action',\r\n            fixed: 'right',\r\n            width: 50,\r\n            align: 'center',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    <Link className=\"link\" to={\"/subHospital/\"+record.id}><EditOutlined /></Link>\r\n                    <Popconfirm\r\n                        title=\"តើអ្នកពិតចង់លុបមែនឬទេ?\"\r\n                        onConfirm={() => { handleDelete(record.id) }}\r\n                        okText=\"ចង់\"\r\n                        cancelText=\"មិនចង់\"\r\n                    >\r\n                        <span className=\"link\" style={{ color: \"red\" }}><DeleteOutlined /></span>\r\n                    </Popconfirm>\r\n\r\n                </Space>\r\n            ),\r\n        }\r\n    ]\r\n    return array\r\n}","import React, { useContext,useState,useEffect } from 'react'\r\nimport { Modal, Form, Input, Row, Col, Button,Select, message,Divider} from 'antd';\r\nimport { HospitalController } from '../../../context/hospitalContext'\r\nimport { ListSelect } from '../../../static/own-comp'\r\nimport { provinceData, districtData, communeData, villageData } from '../../../context/headerContext'\r\nimport { convertToDistrict, convertToCommune, convertToVillage } from '../../../function/fn'\r\nimport { useMutation } from '@apollo/client';\r\nimport { CREATE_HOSPITALINFO } from '../../../graphql/hospital';\r\nimport { setAddHospital } from '../../../function/set';\r\n\r\nconst { Option } = Select;\r\n\r\nexport default function AddHospital({ open, setOpen }) {\r\n    //const { hospitalDataDispatch } = useContext(HospitalController)\r\n\r\n    let [form] = Form.useForm() \r\n\r\n    const [province, setProvince] = useState(\"\")\r\n    const [district, setDistrict] = useState(\"\")\r\n    const [commune, setCommune] = useState(\"\")\r\n\r\n    const [createHospitalInfo,{loading,error}] = useMutation(CREATE_HOSPITALINFO,{\r\n        onCompleted:({createHospitalInfo})=>{\r\n            \r\n            message.success(\"បញ្ចូលទិន្នន័យជោគជ័យ\")\r\n        },\r\n        onError:(error)=>{\r\n            console.log(error.message)\r\n        }\r\n    })\r\n\r\n    // useEffect(() => {\r\n    //     // form.setFieldsValue(\r\n    //     //     setEditSubCase(data)\r\n    //     // )\r\n    //     setProvince(data?.province)\r\n    //     setDistrict(data?.district)\r\n    //     setCommune(data?.commune)\r\n    // }, [data])\r\n\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Success:', values);\r\n\r\n        //hospitalDataDispatch({ type: 'ADD_HOSPITAL', payload: values })\r\n        createHospitalInfo({variables:setAddHospital(values)})\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const setToGenderFn = (e) => {\r\n        form.setFieldsValue({\r\n            gender: e\r\n        });\r\n    };\r\n\r\n    const setToProviceFn = (e) => {\r\n        form.setFieldsValue({\r\n            province: e,\r\n            district: null,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setProvince(e)\r\n        setDistrict(\"\")\r\n        setCommune(\"\")\r\n    };\r\n\r\n\r\n    const setToDistrictFn = (e) => {\r\n        form.setFieldsValue({\r\n            district: e,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setDistrict(e)\r\n        setCommune(\"\")\r\n    };\r\n\r\n    const setToCommuneFn = (e) => {\r\n        form.setFieldsValue({\r\n            commune: e,\r\n            village: null,\r\n        });\r\n\r\n        setCommune(e)\r\n    };\r\n\r\n    const setToVillageFn = (e) => {\r\n        form.setFieldsValue({\r\n            village: e\r\n        });\r\n    };\r\n\r\n\r\n    return (\r\n        <Modal\r\n            title=\"បញ្ចូលមន្ទីរពេទ្យថ្មី\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"addUser\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"hospitalName\"\r\n                            rules={[{ required: true, message: 'Field is required!' }]}\r\n                        >\r\n                            <Input placeholder=\"ឈ្មោះមណ្ឌល\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2  }}>\r\n                        <Form.Item\r\n                            name=\"province\"\r\n                            rules={[{ required: true, message: 'Field is required!' }]}\r\n                        >\r\n                            <ListSelect type={1} data={provinceData} title=\"ខេត្ត/ក្រុង\" setValue={setToProviceFn} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {province === \"សៀមរាប\" ? (\r\n                        <>\r\n                            <Col xs={24} md={{ span: 11}}>\r\n                                <Form.Item\r\n                                    name=\"district\"\r\n                                    rules={[{ required: true, message: 'Field is required!' }]}\r\n                                >\r\n                                    <ListSelect type={0} data={convertToDistrict(districtData)} title=\"ស្រុក/ខណ្ឌ\" setValue={setToDistrictFn} disabled={province !== \"សៀមរាប\" ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 11, offset:2 }}>\r\n                                <Form.Item\r\n                                    name=\"commune\"\r\n                                    rules={[{ required: true, message: 'Field is required!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToCommune(district, communeData)} title=\"ឃុំ/សង្កាត់\" setValue={setToCommuneFn} disabled={district === \"\" || district === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24}>\r\n                                <Form.Item\r\n                                    name=\"village\"\r\n                                    rules={[{ required: true, message: 'Field is required!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToVillage(commune, villageData)} title=\"ភូមិ\" setValue={setToVillageFn} disabled={commune === \"\" || commune === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </>\r\n                    ) : null}\r\n\r\n                    <Col xs={24}>\r\n                        <Form.Item\r\n                            name=\"other\"\r\n                        // rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"ចំណាំ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"long\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input type=\"number\" placeholder=\"longtitude\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 , offset:2}}>\r\n                        <Form.Item\r\n                            name=\"lat\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input type=\"number\" placeholder=\"latitude\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Divider>អ្នកទទួលខុសត្រូវ</Divider>\r\n                    <Col xs={24} md={{ span: 11, offset: 0 }}>\r\n                        <Form.Item\r\n                            name=\"firstName\"\r\n                            rules={[{ required: true, message: 'Field is required!' }]}\r\n                        >\r\n                            <Input placeholder=\"នាម\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"lastName\"\r\n                            rules={[{ required: true, message: 'Field is required!' }]}\r\n                        >\r\n                            <Input placeholder=\"គោត្តនាម\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 0 }}>\r\n                        <Form.Item\r\n                            name=\"position\"\r\n                            rules={[{ required: true, message: 'Field is required!' }]}\r\n                        >\r\n                            <Input placeholder=\"តួនាទីការងារ\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"tel\"\r\n                            rules={[{ required: true, message: 'Field is required!' }]}\r\n                        >\r\n                            <Input placeholder=\"លេខទូរស័ព្ទ\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 0 }}>\r\n                        <Form.Item\r\n                            name=\"others\"\r\n                            //rules={[{ required: true, message: 'Field is required!' }]}\r\n                        >\r\n                            <Input placeholder=\"ផ្សេងៗ\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, {useContext, useState, useEffect} from 'react'\r\nimport { Row, Col, Button, Input, Table,message } from 'antd'\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { hospitalCol } from '../component/hospital/tableColumn/hospitalColumn'\r\nimport { HospitalController } from '../context/hospitalContext'\r\nimport AddHospital from '../component/hospital/modal/addHospital';\r\nimport { useQuery,useMutation } from '@apollo/client';\r\nimport { GET_ALL_HOSPITAL } from '../graphql/hospital';\r\nimport { DELETE_HOSPITALINFO_BY_ID } from '../graphql/hospital';\r\n\r\nexport default function Hospital() {\r\n\r\n    // const {hospitalData, hospitalDataDispatch} = useContext(HospitalController)\r\n    const [hospitalData, setHospitalData] = useState([])\r\n\r\n    const [openAdd, setOpenAdd] = useState(false)\r\n    const [page, setPage] = useState(1)\r\n    const [limit, setLimit] = useState(10)\r\n    const [keyword, setKeyword] = useState(\"\")\r\n\r\n    const {data,loading,error,refetch} = useQuery(GET_ALL_HOSPITAL,{\r\n        variables:{\r\n            page: page,\r\n            limit: limit,\r\n            keyword: keyword,\r\n        },\r\n        onCompleted:({getHospitalInfoWithPagination})=>{\r\n            console.log(getHospitalInfoWithPagination)\r\n            setHospitalData(getHospitalInfoWithPagination)\r\n        }\r\n    })\r\n\r\n    const [deleteHospitalInfo, { loading: deleteLoading, error: deleteError }] = useMutation(DELETE_HOSPITALINFO_BY_ID, {     \r\n        onCompleted: () => {\r\n            refetch()\r\n            message.success(\"ទិន្នន័យត្រូវបានលុប\")\r\n        },\r\n        // refetchQueries: [{ query: GET_ALL_QUARANTINEINFO, variables: { keyword: keyword, limit: limit, page: page } }],\r\n        // awaitRefetchQueries: true,\r\n    })\r\n\r\n    useEffect(() => {\r\n        refetch()\r\n    }, [page, limit, keyword])\r\n\r\n\r\n    const handleDelete = (e) => {\r\n        //hospitalDataDispatch({type: \"DELETE_HOSPITAL\", payload: e})\r\n        deleteHospitalInfo({variables:{\r\n            id:e\r\n        }})\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <AddHospital open={openAdd} setOpen={setOpenAdd}/>\r\n            {/* <EditUser open={openEdit} setOpen={setOpenEdit} user={userEdit} /> */}\r\n            <Col\r\n                xs={8}\r\n                md={18}\r\n            >\r\n                <Button\r\n                    type=\"primary\"\r\n                    onClick={() => setOpenAdd(true)}\r\n                >\r\n                    បញ្ចូលមន្ទីរពេទ្យ\r\n                    <PlusOutlined />\r\n                </Button>\r\n            </Col>\r\n            <Col\r\n                xs={16}\r\n                md={6}\r\n            >\r\n                <Input.Search\r\n                    onChange={(e)=>setKeyword(e.target.value)}\r\n                    placeholder=\"ស្វែងរក...\"\r\n                />\r\n            </Col>\r\n            <Col\r\n                xs={24}\r\n                style={{ marginTop: 20 }}\r\n            >\r\n                <Table\r\n                // caseCol({handleDelete})\r\n                    columns={hospitalCol({handleDelete,limit,page})}\r\n                    dataSource={hospitalData?.hospitalInfos}\r\n                    rowKey={record => record.id}\r\n                    pagination={{\r\n                        total: hospitalData?.paginator?.totalDocs,\r\n                        //pageSizeOptions:[\"10\", \"20\"],\r\n                        // showSizeChanger: true,\r\n                        current: hospitalData?.paginator?.currentPage,\r\n                        onChange: ((page, pageSize) => { setPage(page); setLimit(pageSize) })\r\n                    }}\r\n                    scroll={{ x: 1500 }} \r\n                    sticky \r\n                />\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n","import { Space, Popconfirm } from 'antd'\r\nimport {\r\n    EditOutlined,\r\n    DeleteOutlined,\r\n    EyeOutlined\r\n\r\n} from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nexport const subHospitalCol = ({handleDelete, handleEditSubHospital}) => {\r\n    var array = [\r\n        {\r\n            title: 'ល.រ',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: 20,\r\n            render: (text, record, i) => (\r\n                <Space size=\"middle\">\r\n                    {i += 1}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'ឈ្មោះ',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n            width: 40,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {record?.personalInfo?.lastName} {record?.personalInfo?.firstName}\r\n                </Space>\r\n            ),\r\n        },\r\n\r\n        {\r\n            title: 'កាលបរិច្ឆេទចូល',\r\n            dataIndex: 'date_in',\r\n            key: 'date_in',\r\n            width: 30,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {moment(record?.date_in).format(\"ថ្ងែDD ខែMM ឆ្នាំYYYY\")}\r\n                </Space>\r\n            ),\r\n        },\r\n\r\n        {\r\n            title: 'កាលបរិច្ឆេទចេញ',\r\n            dataIndex: 'date_out',\r\n            key: 'date_out',\r\n            width: 30,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {moment(record?.date_out).format(\"ថ្ងែDD ខែMM ឆ្នាំYYYY\")}\r\n                </Space>\r\n            ),\r\n        },\r\n      \r\n        {\r\n            title: 'អាសយដ្ឋាន',\r\n            dataIndex: 'address',\r\n            key: 'address',\r\n            width: 70,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {(record?.personalInfo?.village !== \"ក្រៅសៀមរាប\") && record?.personalInfo?.village}\r\n                    {record?.personalInfo?.commune !== \"ក្រៅសៀមរាប\" && record?.personalInfo?.commune}\r\n                    {record?.personalInfo?.district !== \"ក្រៅសៀមរាប\" && record?.personalInfo?.district}\r\n                    {record?.personalInfo?.province && record?.personalInfo?.province}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'ស្ថានភាព',\r\n            dataIndex: 'status',\r\n            key: 'status',\r\n            width: 30,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {record?.personalInfo?.currentState?.confirm ? \"វិជ្ជមាន\" : \"អវិជ្ជមាន\"}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'លក្ខណៈពាក់ព័ន្ធ',\r\n            dataIndex: 'relatedInfo',\r\n            key: 'relatedInfo',\r\n            width: 30,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {record?.personalInfo?.direct ? \"ផ្ទាល់\":\"ប្រយោល\"}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            key: 'action',\r\n            dataIndex: 'action',\r\n            fixed: 'right',\r\n            width: 30,\r\n            align: 'center',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    <Link className=\"link\" to={\"/subPeople/\" + record?.personalInfo?.id}><EyeOutlined /></Link>\r\n                    <span className=\"link\" onClick={() => handleEditSubHospital(record)}><EditOutlined /></span>\r\n                    <Popconfirm\r\n                        title=\"តើអ្នកពិតចង់លុបមែនឬទេ?\"\r\n                        onConfirm={() => {handleDelete(record.id) }}\r\n                        okText=\"ចង់\"\r\n                        cancelText=\"មិនចង់\"\r\n                    >\r\n                        <span className=\"link\" style={{ color: \"red\" }}><DeleteOutlined /></span>\r\n                    </Popconfirm>\r\n\r\n                </Space>\r\n            ),\r\n        }\r\n    ]\r\n    return array\r\n}","import React, {useContext, useEffect, useState} from 'react'\r\nimport { Modal, Form, Input, DatePicker, Row, Col, Button ,Select,Divider,message} from 'antd'\r\nimport {HospitalController} from '../../../context/hospitalContext'\r\nimport {setEditHospital} from '../../../function/set'\r\n\r\nimport { ListSelect } from '../../../static/own-comp'\r\nimport { provinceData, districtData, communeData, villageData } from '../../../context/headerContext'\r\nimport { convertToDistrict, convertToCommune, convertToVillage } from '../../../function/fn'\r\nimport { useMutation } from '@apollo/client'\r\nimport { UPDATE_HOSPITALINFO_BY_ID } from '../../../graphql/hospital'\r\n\r\nconst { Option } = Select\r\n\r\nexport default function EditHospital({ open, setOpen, data, hospitalId }) {\r\n    const {hospitalDataDispatch} = useContext(HospitalController)\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const [province, setProvince] = useState(\"\")\r\n    const [district, setDistrict] = useState(\"\")\r\n    const [commune, setCommune] = useState(\"\")\r\n\r\n    const [updateHospitalInfo,{loading}] = useMutation(UPDATE_HOSPITALINFO_BY_ID,{\r\n        onCompleted:()=>{\r\n            message.success(\"កែប្រែទិន្នន័យជោគជ័យ\")\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        \r\n        if (data !== undefined){\r\n            form.setFieldsValue(setEditHospital(data))\r\n            setProvince(data.province)\r\n            setDistrict(data.district)\r\n            setCommune(data.commune)\r\n        }\r\n\r\n        \r\n    }, [data])\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Success:', values);\r\n\r\n        updateHospitalInfo({\r\n            variables:{\r\n                lat: values.lat,\r\n                hospitalName: values.hospitalName,\r\n                long: values.long,\r\n                other: values.other,\r\n                tel: values.tel,\r\n                firstName: values.firstName,\r\n                lastName: values.lastName,\r\n                position: values.position,\r\n                others: values.others,\r\n                village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n                commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n                district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n                province: values.province === undefined ? \"\" : values.province,\r\n                id:hospitalId\r\n            }\r\n        })\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const setToGenderFn = (e) => {\r\n        form.setFieldsValue({\r\n            gender: e\r\n        });\r\n    };\r\n\r\n    const setToProviceFn = (e) => {\r\n        form.setFieldsValue({\r\n            province: e,\r\n            district: null,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setProvince(e)\r\n        setDistrict(\"\")\r\n        setCommune(\"\")\r\n    };\r\n\r\n\r\n    const setToDistrictFn = (e) => {\r\n        form.setFieldsValue({\r\n            district: e,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setDistrict(e)\r\n        setCommune(\"\")\r\n    };\r\n\r\n    const setToCommuneFn = (e) => {\r\n        form.setFieldsValue({\r\n            commune: e,\r\n            village: null,\r\n        });\r\n\r\n        setCommune(e)\r\n    };\r\n\r\n    const setToVillageFn = (e) => {\r\n        form.setFieldsValue({\r\n            village: e\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            title=\"កែប្រែមន្ទីរពេទ្យ\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n            destroyOnClose={false} \r\n            getContainer={false}\r\n            forceRender\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"editHospital\"\r\n                initialValues={setEditHospital(data)}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"hospitalName\"\r\n                            rules={[{ required: true, message: 'Field is required!' }]}\r\n                        >\r\n                            <Input placeholder=\"ឈ្មោះមណ្ឌល\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"province\"\r\n                            rules={[{ required: true, message: 'Field is required!' }]}\r\n                        >\r\n                            <ListSelect type={1} data={provinceData} title=\"ខេត្ត/ក្រុង\" setValue={setToProviceFn} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {province === \"សៀមរាប\" ? (\r\n                        <>\r\n                            <Col xs={24} md={{ span: 11, offset: 0 }}>\r\n                                <Form.Item\r\n                                    name=\"district\"\r\n                                    rules={[{ required: true, message: 'Field is required!' }]}\r\n                                >\r\n                                    <ListSelect type={0} data={convertToDistrict(districtData)} title=\"ស្រុក/ខណ្ឌ\" setValue={setToDistrictFn} disabled={province !== \"សៀមរាប\" ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                                <Form.Item\r\n                                    name=\"commune\"\r\n                                    rules={[{ required: true, message: 'Field is required!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToCommune(district, communeData)} title=\"ឃុំ/សង្កាត់\" setValue={setToCommuneFn} disabled={district === \"\" || district === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 24, offset: 0 }}>\r\n                                <Form.Item\r\n                                    name=\"village\"\r\n                                    rules={[{ required: true, message: 'Field is required!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToVillage(commune, villageData)} title=\"ភូមិ\" setValue={setToVillageFn} disabled={commune === \"\" || commune === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </>\r\n                    ) : null}\r\n\r\n                    {/* <Col xs={24} md={{ span: 24, offset: 0 }}>\r\n                        <Form.Item\r\n                            name=\"capacity\"\r\n                        >\r\n                            <Input type=\"number\" placeholder=\"អាចផ្ទុកបាន\" />\r\n                        </Form.Item>\r\n                    </Col> */}\r\n\r\n                    <Col xs={24}>\r\n                        <Form.Item\r\n                            name=\"other\"\r\n                        // rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"ចំណាំ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"long\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input type=\"number\" placeholder=\"longtitude\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"lat\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input type=\"number\" placeholder=\"latitude\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Divider>អ្នកទទួលខុសត្រូវ</Divider>\r\n                    <Col xs={24} md={{ span: 11, offset: 0 }}>\r\n                        <Form.Item\r\n                            name=\"firstName\"\r\n                            rules={[{ required: true, message: 'Field is required!' }]}\r\n                        >\r\n                            <Input placeholder=\"នាម\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"lastName\"\r\n                            rules={[{ required: true, message: 'Field is required!' }]}\r\n                        >\r\n                            <Input placeholder=\"គោត្តនាម\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 0 }}>\r\n                        <Form.Item\r\n                            name=\"position\"\r\n                            rules={[{ required: true, message: 'Field is required!' }]}\r\n                        >\r\n                            <Input placeholder=\"តួនាទីការងារ\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"tel\"\r\n                            rules={[{ required: true, message: 'Field is required!' }]}\r\n                        >\r\n                            <Input placeholder=\"លេខទូរស័ព្ទ\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 0 }}>\r\n                        <Form.Item\r\n                            name=\"others\"\r\n                        //rules={[{ required: true, message: 'Field is required!' }]}\r\n                        >\r\n                            <Input placeholder=\"ផ្សេងៗ\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            កែប្រែទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { Form, Modal, Input, Row, Col, Button, Select, message,DatePicker } from 'antd'\r\nimport { HospitalController } from '../../../context/hospitalContext'\r\nimport { ListSelect } from '../../../static/own-comp'\r\nimport { provinceData, districtData, communeData, villageData, genderData } from '../../../context/headerContext'\r\nimport { convertToDistrict, convertToCommune, convertToVillage } from '../../../function/fn'\r\nimport { useMutation } from '@apollo/client'\r\nimport { CREATE_NEW_HOSPITALIZATION } from '../../../graphql/hospital'\r\nimport moment from 'moment'\r\n\r\nconst { Option } = Select\r\n\r\nexport default function AddSubHospital({ open, setOpen, hospitalId,peopleData }) {\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const [createHospitalization,{loading}]=useMutation(CREATE_NEW_HOSPITALIZATION,{\r\n        onCompleted:()=>{\r\n            message.success(\"បញ្ចូលទិន្នន័យជោគជ័យ\")\r\n        }\r\n    })\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Success:', values);\r\n\r\n        //subHospitalDataDispatch({ type: 'ADD_SUB_HOSPITAL', payload: {...values, hospitalId: hospitalId} })\r\n        createHospitalization({variables:{\r\n            in: values.in,\r\n            date_in:moment(values.date_in).format(),\r\n            date_out:moment(values.date_out).format(),\r\n            personalInfo:values.personalInfo,\r\n            hospitalInfo:hospitalId,\r\n            others:values.others,\r\n            // date:moment(values.date).format(),\r\n            // times:values.times,\r\n            // location:values.location,\r\n            // result:values.result,\r\n            // symptom:values.symptom,\r\n            // other:values.other\r\n        }})\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const setToPeopleFn = (e) => {\r\n        form.setFieldsValue({\r\n            personalInfo: e\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            title=\"បញ្ចូលធ្វើតេស្ត\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"addSubHospital\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"personalInfo\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <ListSelect type={2} data={peopleData} title=\"អ្នកធ្វើតេស្ត\" setValue={setToPeopleFn}/>\r\n                            {/* <Select placeholder=\"អ្នកធ្វើតេស្ត\" style={{ width: \"100%\" }} onChange={(e)=>console.log(e)}>\r\n                                {peopleData.map((people)=>(\r\n                                     <Option key={people?.id} value={people?.id}>{people?.lastName} {people?.firstName}</Option>\r\n                                ))}\r\n                               \r\n                            </Select> */}\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {/* <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"personalType\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n\r\n                            <Select placeholder=\"ប្រភេទ\" style={{ width: \"100%\" }}>\r\n                                <Option value=\"សហគមន៍\">សហគមន៍</Option>\r\n                                <Option value=\"តាមផ្លូងអាកាស\">តាមផ្លូងអាកាស</Option>\r\n                                <Option value=\"ពលករ\">ពលករ</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col> */}\r\n\r\n                    <Col xs={24} md={{ span: 11,offset:2}}>\r\n                        <Form.Item\r\n                            name=\"in\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n\r\n                            <Select placeholder=\"តេស្ត\" style={{ width: \"100%\" }}>\r\n                                <Option value={true}>ចូល</Option>\r\n                                <Option value={false}>ចេញ</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"date_in\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <DatePicker placeholder=\"កាលបរិច្ឆេទចូល\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset:2 }}>\r\n                        <Form.Item\r\n                            name=\"date_out\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <DatePicker placeholder=\"កាលបរិច្ឆេទចូល\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 24}}>\r\n                        <Form.Item\r\n                            name=\"others\"\r\n                            //rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n\r\n                            <Input placeholder=\"ផ្សេងៗ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useContext, useState, useEffect } from 'react'\r\nimport { Form, Modal, Input, Row, Col, Button, Select, DatePicker, message } from 'antd'\r\nimport { ListSelect } from '../../../static/own-comp'\r\nimport { setEditSubHospital } from '../../../function/set'\r\nimport { useMutation } from '@apollo/client'\r\nimport { UPDATE_PERSON_BY_HOSPITALINFO } from '../../../graphql/hospital'\r\nimport moment from 'moment'\r\n\r\nconst { Option } = Select\r\n\r\nexport default function EditSubHospital({ open, setOpen, data, hospitalId, peopleData }) {\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const [updateHospitalization,{loading}]=useMutation(UPDATE_PERSON_BY_HOSPITALINFO,{\r\n        onCompleted:()=>{\r\n            message.success(\"កែប្រែទិន្នន័យជោគជ័យ\")\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        form.resetFields()\r\n    }, [data,open])\r\n\r\n    const onFinish = (values) => {\r\n        // console.log('Success:', values,data.id);\r\n        updateHospitalization({\r\n            variables:{\r\n                in:values.in,\r\n                date_in:moment(values.date_in).format(),\r\n                date_out:moment(values.date_out).format(),\r\n                // out_status:String,\r\n                personalInfo:values.personalInfo,\r\n                hospitalInfo:hospitalId,\r\n                others:values.others,\r\n                id:data.id\r\n            }\r\n        })\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const setToPeopleFn = (e) => {\r\n        form.setFieldsValue({\r\n            personalInfo: e\r\n        });\r\n    };\r\n\r\n\r\n    return (\r\n        <Modal\r\n            title=\"កែប្រែអ្នកជំងឺ\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"editSubHospital\"\r\n                initialValues={setEditSubHospital(data)}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"personalInfo\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <ListSelect type={2} data={peopleData} title=\"អ្នកធ្វើតេស្ត\" setValue={setToPeopleFn} />\r\n                            {/* <Select placeholder=\"អ្នកចត្តាឡីស័ក\" style={{ width: \"100%\" }} onChange={(e) => console.log(e)}>\r\n                                {peopleData.map((people) => (\r\n                                    <Option key={people?.id} value={people?.id}>{people?.lastName} {people?.firstName}</Option>\r\n                                ))}\r\n\r\n                            </Select> */}\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"in\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n\r\n                            <Select placeholder=\"តេស្ត\" style={{ width: \"100%\" }}>\r\n                                <Option value={true}>ចូល</Option>\r\n                                <Option value={false}>ចេញ</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"date_in\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <DatePicker placeholder=\"កាលបរិច្ឆេទចូល\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"date_out\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <DatePicker placeholder=\"កាលបរិច្ឆេទចូល\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 24 }}>\r\n                        <Form.Item\r\n                            name=\"others\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n\r\n                            <Input placeholder=\"ផ្សេងៗ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            កែប្រែទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import { Col, Row, Typography, Table } from 'antd'\r\nimport React, { useState, useContext, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { HospitalController } from '../../context/hospitalContext'\r\nimport moment from 'moment'\r\nimport { subHospitalCol } from './tableColumn/subHospitalColumn'\r\nimport { PlusCircleOutlined, EditOutlined } from '@ant-design/icons';\r\nimport EditHospital from './modal/editHospital'\r\nimport AddSubHospital from './modal/addSubHospital'\r\nimport EditSubHospital from './modal/editSubHospital'\r\nimport { useQuery} from '@apollo/client'\r\nimport { GET_ALL_PERSONINFO_NO_LIMIT } from '../../graphql/people'\r\nimport { GET_PERSON_BY_HOSPITALINFO } from '../../graphql/hospital'\r\nimport { GET_HOSPITALINFO_BY_ID } from '../../graphql/hospital'\r\n\r\nconst {Title} = Typography\r\n\r\nexport default function SubHospital() {\r\n\r\n    //const { hospitalData, subHospitalData, subHospitalDataDispatch } = useContext(HospitalController)\r\n\r\n    let { id } = useParams();\r\n\r\n    const [headerData, setHeaderData] = useState()\r\n    const [updateSubData, setUpdateSubData] = useState({})\r\n    const [peopleData,setPeopleData]= useState([])\r\n    const [openEdit, setOpenEdit] = useState(false)\r\n    const [openAddSub, setOpenAddSub] = useState(false)\r\n    const [openEditSub, setOpenEditSub] = useState(false)\r\n    const [subHospitalData, setSubHospitalData] = useState([])\r\n    const [hospitalData, setHospitalData] = useState({})\r\n\r\n    const [page, setPage] = useState(1)\r\n    const [limit, setLimit] = useState(10)\r\n    const [keyword, setKeyword] = useState(\"\")\r\n\r\n    const {data:hospital} = useQuery(GET_HOSPITALINFO_BY_ID,{\r\n        variables:{\r\n            id:id\r\n        },\r\n        onCompleted:({getHospitalInfoById})=>{\r\n            // console.log(getHospitalInfoById)\r\n            setHospitalData(getHospitalInfoById)\r\n        }\r\n    })\r\n\r\n    const {data} = useQuery(GET_ALL_PERSONINFO_NO_LIMIT,{\r\n        onCompleted:({allPersonalInfos})=>{\r\n            // console.log(allPersonalInfos)\r\n            setPeopleData(allPersonalInfos)\r\n        }\r\n    })\r\n\r\n    const {data:hospitalSub} = useQuery(GET_PERSON_BY_HOSPITALINFO,{\r\n        variables:{\r\n            page:page,\r\n            limit:limit,\r\n            keyword:keyword,\r\n            hospitalId:id\r\n        },\r\n        onCompleted:({getQuarantineByHospitalIdIdWithPagination})=>{\r\n            console.log(getQuarantineByHospitalIdIdWithPagination)\r\n            setSubHospitalData(getQuarantineByHospitalIdIdWithPagination)\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        //setHeaderData(hospitalData[hospitalData.findIndex(e => e.id === id)])\r\n    }, [])\r\n\r\n    // console.log(headerData)\r\n    const handleDelete = (e) => {\r\n        //subHospitalDataDispatch({type: \"DELETE_SUB_HOSPITAL\", payload: e})\r\n        console.log(e)\r\n    }\r\n\r\n    const handleEditSubHospital = (e) => {\r\n        setUpdateSubData(e)\r\n        setOpenEditSub(true)\r\n    }\r\n    return (\r\n        <Row>\r\n            <EditHospital open={openEdit} setOpen={setOpenEdit} data={hospitalData} hospitalId={id}  />\r\n            <AddSubHospital open={openAddSub} setOpen={setOpenAddSub} hospitalId={id} peopleData={peopleData}/>\r\n            <EditSubHospital open={openEditSub} setOpen={setOpenEditSub} data={updateSubData} hospitalId={id} peopleData={peopleData} />\r\n            <Col\r\n                xs={24}\r\n            >\r\n                {/* <Title level={5}>ឈ្មោះករណី៖ \r\n                    <EditOutlined className=\"link\" onClick={() => setOpenEdit(true)}/>\r\n                </Title> */}\r\n            </Col>\r\n            <Col\r\n                xs={24}\r\n                md={11}\r\n                className=\"subCase-card\"\r\n            >\r\n                <p>ឈ្មោះមណ្ឌល៖ {hospitalData?.hospitalName} <EditOutlined className=\"link\" onClick={() => setOpenEdit(true)}/></p>\r\n                {/* <p>អាចផ្ទុក៖ {headerData?.capacity}</p> */}\r\n                <p>អាសយដ្ឋាន៖ {\" \"}\r\n                {hospitalData?.village !== \"ក្រៅសៀមរាប\" && hospitalData?.village + \",\"}\r\n                    {hospitalData?.commune !== \"ក្រៅសៀមរាប\" && hospitalData?.commune + \",\"}\r\n                    {hospitalData?.district !== \"ក្រៅសៀមរាប\" && hospitalData?.district + \",\"}\r\n                    {hospitalData?.province}\r\n                </p>\r\n                <p>អ្នកទទួលខុសត្រូវ៖ {hospitalData?.personInCharge?.lastName} {hospitalData?.personInCharge?.firstName}</p>\r\n                <p>លេខទូរស័ព្ទ៖ {hospitalData?.personInCharge?.tel}</p>\r\n                <p>ចំណាំ៖ {hospitalData?.other}</p>\r\n            </Col>\r\n\r\n            {/* <Col\r\n                xs={24}\r\n                md={{ span: 11, offset: 2 }}\r\n                className=\"subCase-card\"\r\n            >\r\n                <p>មណ្ឌលព្យាបាល៖ </p>\r\n\r\n                <p>ឈ្មោះមណ្ឌល៖​ </p>\r\n                <p>ទីតាំង៖ </p>\r\n                <p>កាលបរិច្ឆេទ​ចូល៖ </p>\r\n                <p>កាលបរិច្ឆេទចេញ៖ </p>\r\n            </Col> */}\r\n\r\n\r\n            <Col\r\n                xs={24}\r\n                style={{ marginTop: 20 }}\r\n            >\r\n                <Title level={5}>\r\n                    អ្នកជំងឺ៖ {\" \"}\r\n\r\n                    <PlusCircleOutlined className=\"link\" onClick={() => setOpenAddSub(true)}/>\r\n                </Title>\r\n\r\n            </Col>\r\n            <Col\r\n                xs={24}\r\n                md={24}\r\n            >\r\n                <Table\r\n                    columns={subHospitalCol({handleDelete, handleEditSubHospital,limit,page})}\r\n                    dataSource={subHospitalData?.hospitalizations}\r\n                    rowKey={record => record.id}    \r\n                    pagination={{\r\n                        total: subHospitalData?.paginator?.totalDocs,\r\n                        // showSizeChanger: true,\r\n                        onChange:((page, pageSize) => {setPage(page);setLimit(pageSize)} )\r\n                    }}\r\n                    scroll={{ x: 240 }}\r\n                    sticky\r\n                />\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { Form, Input, Button, Checkbox, Row, Col,Image } from \"antd\";\r\nimport { LOGIN_USER, IS_LOGGED_IN } from \"../graphql/auth\";\r\nimport { useMutation, useQuery } from \"@apollo/client\";\r\nimport { isLoggedInVar } from \"../cache\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Logo from '../asset/srLogo.png'\r\n\r\n\r\nexport default function Login() {\r\n    const history = useHistory()\r\n  const { data: isLogin } = useQuery(IS_LOGGED_IN);\r\n  const [loginUser, { error, loading }] = useMutation(LOGIN_USER, {\r\n    onCompleted: ({ loginUser }) => {\r\n      localStorage.setItem(\"user\", JSON.stringify(loginUser));\r\n      isLoggedInVar(true);\r\n    },\r\n    onError: (e) => {\r\n      console.log(e.message);\r\n    },\r\n  });\r\n  const onFinish = (values) => {\r\n      console.log(values)\r\n    loginUser({\r\n      variables: {\r\n        username: values.username,\r\n        password: values.password,\r\n      },\r\n    });\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n <Row>\r\n<Col\r\n    xs={{ span: 24}}\r\n    md={{span: 16, offset: 4}}\r\n    lg={{span: 12, offset: 6}}\r\n    xl={{span: 8, offset: 8}}\r\n\r\n>\r\n    <div className=\"login-form\">\r\n\r\n        <div className=\"login-logo\">\r\n            <Image width={\"100%\"} src={Logo} preview={false} />\r\n        </div>\r\n        <h2 style={{ color: '#707070' }}>ការចូលគណនី</h2>\r\n        <div className=\"line-shape\"></div>\r\n        <Form autoComplete=\"off\"\r\n            name=\"basic\"\r\n            // style={{margin:'20%'}}\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n        >\r\n            <Form.Item\r\n                // label=\"Username\"\r\n                name=\"username\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'ត្រូវបំពេញប្រអប់ខាងលើ!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input  placeholder=\"ឈ្មោះសម្គាល់\" className=\"login-input\" />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                // label=\"Password\"\r\n                name=\"password\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'ត្រូវបំពេញប្រអប់ខាងលើ!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input type=\"password\" placeholder=\"លេខសម្ងាត់\" className=\"login-input\" />\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\" style={{ width: \"100%\", height: 'auto', fontSize: 20 }}>\r\n       ចូល\r\n      </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    </div>\r\n</Col>\r\n</Row> \r\n  );\r\n}\r\n\r\n{/* <Row>\r\n<Col\r\n    xs={{ span: 24}}\r\n    md={{span: 16, offset: 4}}\r\n    lg={{span: 12, offset: 6}}\r\n    xl={{span: 8, offset: 8}}\r\n\r\n>\r\n    <div className=\"login-form\">\r\n\r\n        <div className=\"login-logo\">\r\n            <Image width={\"100%\"} src={Logo} preview={false} />\r\n        </div>\r\n        <h2 style={{ color: '#707070' }}>ការចូលគណនី</h2>\r\n        <div className=\"line-shape\"></div>\r\n        <Form\r\n            name=\"basic\"\r\n            // style={{margin:'20%'}}\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n        >\r\n            <Form.Item\r\n                // label=\"Username\"\r\n                name=\"username\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'ត្រូវបំពេញប្រអប់ខាងលើ!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input placeholder=\"ឈ្មោះសម្គាល់\" className=\"login-input\" />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                // label=\"Password\"\r\n                name=\"password\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'ត្រូវបំពេញប្រអប់ខាងលើ!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input type=\"password\" placeholder=\"លេខសម្ងាត់\" className=\"login-input\" />\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\" style={{ width: \"100%\", height: 'auto', fontSize: 20 }}>\r\n                    ចូល\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    </div>\r\n</Col>\r\n</Row> */}\r\n\r\n\r\n\r\n// <Row>\r\n// <Col\r\n//   xs={{ span: 6, offset: 9 }}\r\n//   style={{\r\n//     padding: 20,\r\n//   }}\r\n// >\r\n//   <Form name=\"basic\" onFinish={onFinish} onFinishFailed={onFinishFailed}>\r\n//     <Form.Item\r\n//       label=\"Username\"\r\n//       name=\"username\"\r\n//       rules={[\r\n//         {\r\n//           required: true,\r\n//           message: \"Please input your username!\",\r\n//         },\r\n//       ]}\r\n//     >\r\n//       <Input />\r\n//     </Form.Item>\r\n//     <Form.Item\r\n//       label=\"Password\"\r\n//       name=\"password\"\r\n//       rules={[\r\n//         {\r\n//           required: true,\r\n//           message: \"Please input your password!\",\r\n//         },\r\n//       ]}\r\n//     >\r\n//       <Input.Password />\r\n//     </Form.Item>\r\n\r\n//     <Form.Item>\r\n//       <Button type=\"primary\" htmlType=\"submit\" style={{ width: \"100%\" }}>\r\n//         Submit\r\n//       </Button>\r\n//     </Form.Item>\r\n//   </Form>\r\n// </Col>\r\n// </Row>\r\n","import React from \"react\";\r\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\r\nimport \"./InfoBox.css\";\r\n\r\nfunction InfoBox({ title, cases, total, active, isRed, ...props }) {\r\n  return (\r\n    <Card \r\n      onClick={props.onClick}\r\n      className={`infoBox ${active && \"infoBox--selected\"} ${\r\n        isRed && \"infoBox--red\"\r\n      } `}\r\n    >\r\n      <CardContent>\r\n        {/* <Typography  variant=\"h5\" color=\"textSecondary\" gutterBottom >\r\n          \r\n          {title}\r\n        </Typography> */}\r\n        <h4 className=\"infoBox_font\">{title}</h4>\r\n        <h3 className={`infoBox__cases ${!isRed && \"infoBox__cases--green\"}`}>\r\n         ថ្ងៃនេះ {cases}\r\n        </h3>\r\n\r\n        <Typography as=\"\" className=\" infoBox_font\" color=\"textSecondary\">\r\n        សរុប {total} \r\n        </Typography>\r\n     \r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default InfoBox;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport numeral from \"numeral\";\r\n\r\nconst options = {\r\n  legend: {\r\n    display: false,\r\n  },\r\n  elements: {\r\n    point: {\r\n      radius: 0,\r\n    },\r\n  },\r\n  maintainAspectRatio: false,\r\n  tooltips: {\r\n    mode: \"index\",\r\n    intersect: false,\r\n    callbacks: {\r\n      label: function (tooltipItem, data) {\r\n        return numeral(tooltipItem.value).format(\"+0,0\");\r\n      },\r\n    },\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        type: \"time\",\r\n        time: {\r\n          format: \"MM/DD/YY\",\r\n          tooltipFormat: \"ll\",\r\n        },\r\n      },\r\n    ],\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false,\r\n        },\r\n        ticks: {\r\n          // Include a dollar sign in the ticks\r\n          callback: function (value, index, values) {\r\n            return numeral(value).format(\"0a\");\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nconst buildChartData = (data, casesType) => {\r\n  console.log(data)\r\n  let chartData = [];\r\n  let lastDataPoint;\r\n  for (let date in data.cases) {\r\n    if (lastDataPoint) {\r\n      let newDataPoint = {\r\n        x: date,\r\n        y: data[casesType][date] - lastDataPoint,\r\n      };\r\n      chartData.push(newDataPoint);\r\n    }\r\n    lastDataPoint = data[casesType][date];\r\n  }\r\n  return chartData;\r\n};\r\n\r\nfunction LineGraph({ casesType }) {\r\n  const [data, setData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\r\n        .then((response) => {\r\n          return response.json();\r\n        })\r\n        .then((data) => {\r\n          console.log(data)\r\n          let chartData = buildChartData(data, casesType);\r\n          \r\n          setData(chartData);\r\n          \r\n          // buildChart(chartData);\r\n        });\r\n    };\r\n\r\n    fetchData();\r\n  }, [casesType]);\r\n\r\n  return (\r\n    <div>\r\n      {data?.length > 0 && (\r\n        <Line\r\n          data={{\r\n            datasets: [\r\n              {\r\n                backgroundColor: \"rgba(204, 16, 52, 0.5)\",\r\n                borderColor: \"#CC1034\",\r\n                data: data,\r\n              },\r\n            ],\r\n          }}\r\n          options={options}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LineGraph;\r\n","import React from \"react\";\r\nimport \"./Table.css\";\r\nimport numeral from \"numeral\";\r\n\r\nfunction Table({ district }) {\r\n  return (\r\n    <div className=\"covid_tables\">\r\n      {district?.map((dis) => (\r\n        <tr className=\"tr\">\r\n          <td className=\"td\">{dis.district}</td>\r\n          <td className=\"td\">\r\n            <strong>{numeral(dis.confirmedCase).format(\"0,0\")}</strong>\r\n          </td>\r\n        </tr>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\nimport numeral from \"numeral\";\r\nimport { Circle, Popup } from \"react-leaflet\";\r\n\r\nconst casesTypeColors = {\r\n  cases: {\r\n    hex: \"#a70b99\",\r\n    rgb: \"rgb(167, 11, 153)\",\r\n    half_op: \"rgba(167, 11, 153, 0.5)\",\r\n    multiplier: 100,\r\n  },\r\n  recovered: {\r\n    hex: \"#7dd71d\",\r\n    rgb: \"rgb(125, 215, 29)\",\r\n    half_op: \"rgba(125, 215, 29, 0.5)\",\r\n    multiplier: 100,\r\n  },\r\n  deaths: {\r\n    hex: \"#de0d2d\",\r\n    rgb: \"rgb(222, 13, 45)\",\r\n    half_op: \"rgba(222, 13, 45, 0.5)\",\r\n    multiplier: 400,\r\n  },\r\n\r\n};\r\n\r\nexport const joinArray = (arr1, arr2) => {\r\n  let arr = []\r\n  arr1.map(load => {\r\n      arr2.map(load1 => {\r\n          if(load1.district === load._id){\r\n              arr.push({...load, ...load1})\r\n          }\r\n      })\r\n  })\r\nreturn arr;\r\n}\r\n\r\nexport const sortData = (data) => {\r\n  let sortedData = [...data];\r\n  sortedData.sort((a, b) => {\r\n    if (a.confirmedCase > b.confirmedCase) {\r\n      return -1;\r\n    } else {\r\n      return 1;\r\n    }\r\n  });\r\n  return sortedData;\r\n};\r\n\r\nexport const prettyPrintStat = (stat) =>\r\n  stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\r\n\r\nexport const showDataOnMap = (data, casesType = \"cases\") =>\r\n  data?.map((country) => (\r\n    <Circle\r\n      center={[country.lat, country.long]}\r\n      color={casesTypeColors[casesType].hex}\r\n      pathOptions={{\r\n        color: casesTypeColors[casesType].hex,\r\n        fillColor: casesTypeColors[casesType].hex,\r\n      }}\r\n      fillOpacity={0.4}\r\n      radius={\r\n        5000\r\n        // Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\r\n      }\r\n    >\r\n      <Popup>\r\n        <div className=\"info-container\">\r\n          {/* <div\r\n            className=\"info-flag\"\r\n            style={{ backgroundImage: `url(${country.countryInfo.flag})` }}\r\n          ></div> */}\r\n          <div className=\"info-name\">{country.district}</div>\r\n          <div className=\"info-confirmed\">\r\n            Cases: {numeral(country.confirmedCase).format(\"0,0\")}\r\n          </div>\r\n          <div className=\"info-recovered\">\r\n            Recovered: {numeral(country.recovered).format(\"0,0\")}\r\n          </div>\r\n          <div className=\"info-deaths\">\r\n            Deaths: {numeral(country.death).format(\"0,0\")}\r\n          </div>\r\n        </div>\r\n      </Popup>\r\n    </Circle>\r\n  ));\r\n","import React from \"react\";\r\nimport { MapContainer as LeafletMap, TileLayer,LayersControl } from \"react-leaflet\";\r\nimport \"./Map.css\";\r\nimport ReactLeafletGoogleLayer from 'react-leaflet-google-layer';\r\nimport { showDataOnMap } from \"./util\";\r\nimport { FaMapMarkedAlt } from 'react-icons/fa';\r\nfunction Map({ district, casesType, center, zoom }) {\r\n  const [satellite, setSatellite] = React.useState(false);\r\n  return (\r\n    <div className=\"map \">\r\n        <button className=\"layerSwitcher\"\r\n      onClick={() => setSatellite(!satellite)}\r\n     >\r\n      <FaMapMarkedAlt />\r\n\r\n     </button>\r\n      <LeafletMap center={center} zoom={zoom}>\r\n      \r\n \r\n        <TileLayer\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n         {showDataOnMap(district, casesType)}\r\n         {satellite ? (\r\n       <ReactLeafletGoogleLayer\r\n        googleMapsLoaderConf={{\r\n         KEY: 'AIzaSyCLpho9FZOn3PUIt7Pm8R6GPTIQQrJ1_1M',\r\n        }}\r\n        type={'satellite'}\r\n       />\r\n      ) : null}\r\n      </LeafletMap>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n","import {gql} from '@apollo/client'\r\n\r\n\r\nexport const GET_ALL_PROVINCE =gql`\r\n\r\nquery getAllProvince($district:String){\r\n    getAllProvince(district:$district){\r\n            death\r\n        recovered\r\n        confirmedCase\r\n        deathToday\r\n        recoveredToday\r\n        confirmedCaseToday\r\n    }\r\n}\r\n\r\n`\r\n\r\nexport const GET_DATA_FOR_MAP =gql`\r\nquery  getAllDistrictForMap{\r\n    getAllDistrictForMap{\r\n            death\r\n        confirmedCase\r\n        confirmedCaseToday\r\n        deathToday\r\n        recovered\r\n        recoveredToday\r\n        _id\r\n    }\r\n\r\n  } \r\n\r\n\r\n`","import React, { useState, useEffect } from \"react\";\r\n\r\nimport \"./CovidScreen.css\";\r\nimport {\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  Card,\r\n  CardContent,\r\n} from \"@material-ui/core\";\r\n\r\nimport {\r\n  provinceData,\r\n  districtData,\r\n  communeData,\r\n  villageData,\r\n  genderData,\r\n} from \"../context/headerContext\";\r\nimport { ListSelect } from \"../static/own-comp\";\r\nimport {\r\n  convertToCommune,\r\n  convertToDistrict,\r\n  convertToVillage,\r\n} from \"../function/fn\";\r\nimport InfoBox from \"../component/covideComponents/InfoBox\";\r\nimport LineGraph from \"../component/covideComponents/LineGraph\";\r\nimport Table from \"../component/covideComponents/Table\";\r\nimport { sortData, prettyPrintStat } from \"../component/covideComponents/util\";\r\nimport numeral from \"numeral\";\r\nimport Map from \"../component/covideComponents/Map\";\r\nimport { joinArray } from \"../component/covideComponents/util\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport { Form, Divider } from \"antd\";\r\nimport {\r\n  GET_ALL_PROVINCE,\r\n  GET_DATA_FOR_MAP,\r\n} from \"../graphql/dashboardAndReport\";\r\nimport { useQuery } from \"@apollo/client\";\r\n\r\nconst MapScreen = () => {\r\n  const districtLatLong = [\r\n    {\r\n      district: \"ក្រឡាញ់\",\r\n      lat: 13.60472222544493,\r\n      long: 103.45245485053685,\r\n    },\r\n    {\r\n      district: \"វ៉ារិន\",\r\n      lat: 13.867238663711532,\r\n      long: 103.87715707241854,\r\n    },\r\n    {\r\n      district: \"ស្រិស្នំ\",\r\n      lat: 13.852238272312373,\r\n      long: 103.53639730433542,\r\n    },\r\n    {\r\n      district: \"អង្គរជុំ\",\r\n      lat: 13.713723851088394,\r\n      long: 103.67219336284299,\r\n    },\r\n    {\r\n      district: \"បន្ទាយស្រី\",\r\n      lat: 13.605041870228655,\r\n      long: 103.97859822744759,\r\n    },\r\n    {\r\n      district: \"សូទ្រនិគម\",\r\n      lat: 13.414442053292065,\r\n      long: 104.10460200711728,\r\n    },\r\n    {\r\n      district: \"បាគង\",\r\n      lat: 13.303005227138778,\r\n      long: 103.9796463766434,\r\n    },\r\n    {\r\n      district: \"ពួក\",\r\n      lat: 13.440442720250852,\r\n      long: 103.71973510206098,\r\n    },\r\n    {\r\n      district: \"ជីក្រែង\",\r\n      lat: 13.232399982258997,\r\n      long: 104.33684532302983,\r\n    },\r\n    {\r\n      district: \"ស្វាយលើ\",\r\n      lat: 13.698615549661712,\r\n      long: 104.21744370698126,\r\n    },\r\n    {\r\n      district: \"អង្គរធំ\",\r\n      lat: 13.483410469370508,\r\n      long: 103.87412317588966,\r\n    },\r\n    {\r\n      district: \"សៀមរាប\",\r\n      lat: 13.364307627357189,\r\n      long: 103.85798154316932,\r\n    },\r\n  ];\r\n\r\n  const [countryInfo, setCountryInfo] = useState({});\r\n  const [countries, setCountries] = useState([]);\r\n  const [mapCountries, setMapCountries] = useState([]);\r\n  const [tableData, setTableData] = useState([]);\r\n  const [casesType, setCasesType] = useState(\"cases\");\r\n  const [mapCenter, setMapCenter] = useState({ lat: 13.3633, lng: 103.8564 });\r\n  const [mapZoom, setMapZoom] = useState(9);\r\n  const [districtInfo, setDistrictInfo] = useState([]);\r\n\r\n  //update the data\r\n  const [district, setDistrict] = useState(\"\");\r\n  const [districtDatas, setDistrictDatas] = useState({});\r\n  let [form] = Form.useForm();\r\n\r\n  const { loading, error, refetch } = useQuery(GET_ALL_PROVINCE, {\r\n    variables: {\r\n      district: district,\r\n    },\r\n    onCompleted: ({ getAllProvince }) => {\r\n      setDistrictDatas(getAllProvince);\r\n    },\r\n  });\r\n\r\n  const { data: dd } = useQuery(GET_DATA_FOR_MAP, {\r\n    onCompleted: ({ getAllDistrictForMap }) => {\r\n      const mapDatas = joinArray(getAllDistrictForMap, districtLatLong);\r\n      setDistrictInfo(mapDatas);\r\n      let sortedData = sortData(mapDatas);\r\n      setTableData(sortedData);\r\n    },\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    refetch();\r\n  }, [district]);\r\n\r\n  const setToDistrictFn = (e) => {\r\n    form.setFieldsValue({\r\n      district: e,\r\n      commune: null,\r\n      village: null,\r\n    });\r\n    setDistrict(e);\r\n    // setCommune(\"\")\r\n  };\r\n\r\n\r\n  function lower(obj) {\r\n    for (var prop in obj) {\r\n      if (typeof obj[prop] === \"string\") {\r\n        obj[prop] = obj[prop].toLowerCase();\r\n      }\r\n      if (typeof obj[prop] === \"object\") {\r\n        lower(obj[prop]);\r\n      }\r\n    }\r\n    return obj;\r\n  }\r\n\r\n  countries.forEach((c) => {\r\n    lower(c);\r\n  });\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"app__left\">\r\n        <div className=\"app__header\">\r\n          <FormControl className=\"app__dropdown\">\r\n            <Form.Item\r\n              name=\"district\"\r\n              rules={[\r\n                { required: true, message: \"Please input your username!\" },\r\n              ]}\r\n            >\r\n              <ListSelect\r\n                type={0}\r\n                data={convertToDistrict(districtData)}\r\n                title=\"ស្រុក/ខណ្ឌ\"\r\n                setValue={setToDistrictFn}\r\n              />\r\n            </Form.Item>\r\n          </FormControl>\r\n        </div>\r\n        <div className=\"app__stats\">\r\n          <InfoBox\r\n            onClick={(e) => setCasesType(\"cases\")}\r\n            title=\"ករណីឆ្លង \"\r\n            isRed\r\n            active={casesType === \"cases\"}\r\n            cases={prettyPrintStat(districtDatas.confirmedCaseToday)}\r\n            total={numeral(districtDatas.confirmedCase).format(\"0.0a\")}\r\n          />\r\n          <InfoBox\r\n            onClick={(e) => setCasesType(\"recovered\")}\r\n            title=\"ចំនួនជាសះស្បើយ\"\r\n            active={casesType === \"recovered\"}\r\n            cases={prettyPrintStat(districtDatas.recoveredToday)}\r\n            total={numeral(districtDatas.recovered).format(\"0.0a\")}\r\n          />\r\n          <InfoBox\r\n            onClick={(e) => setCasesType(\"deaths\")}\r\n            title=\"ចំនួនអ្នកស្លាប់\"\r\n            isRed\r\n            active={casesType === \"deaths\"}\r\n            cases={prettyPrintStat(districtDatas.deathToday)}\r\n            total={numeral(districtDatas.death).format(\"0.0a\")}\r\n          />\r\n        </div>\r\n        <Map\r\n          district={districtInfo}\r\n          casesType={casesType}\r\n          center={mapCenter}\r\n          zoom={mapZoom}\r\n        />\r\n      </div>\r\n      <div className=\"app__right\">\r\n        <Card style={{ marginTop:\"70px\"}}>\r\n          <CardContent>\r\n            <div className=\"app__information\">\r\n              <h3 className=\"covid_table\">ករណីឆ្លងតាមស្រុក</h3>\r\n              <Divider />\r\n              <Table district={tableData} />\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n        <Card style={{marginTop:\"10px\"}}>\r\n          <CardContent>\r\n          {casesType === \"recovered\" ? (\r\n                <h3>ករណីជាសះស្បើយ ទូទាំងស្រុក</h3>\r\n              ) : null}\r\n              {casesType === \"deaths\" ? <h3>ករណីស្លាប់ ទូទាំងស្រុក</h3> : null}\r\n              {casesType === \"cases\" ? <h3>ករណីឆ្លង ទូទាំងស្រុក</h3> : null}\r\n              <LineGraph casesType={casesType} />\r\n         \r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapScreen;\r\n","import React, { useState } from 'react'\r\nimport MenuHeader from './dynamic/menu';\r\nimport Navbar from './dynamic/navbar';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  // Link\r\n} from \"react-router-dom\";\r\nimport { Image } from 'antd'\r\nimport GoGlobalLogo from './asset/goglobalschool.png'\r\nimport HeaderContext from './context/headerContext';\r\nimport DashBoardContext from './context/dashboardContext'\r\nimport CaseContext from './context/caseContext'\r\nimport UserContext from './context/userContext';\r\nimport QuarantineContext from './context/quarantineContext';\r\nimport HospitalContext from './context/hospitalContext';\r\n\r\nimport Dashboard from './page/dashboard';\r\nimport Case from './page/case'\r\nimport SubCase from './component/case/subCase';\r\nimport User from './page/user';\r\nimport Quarantine from './page/quarantine'\r\nimport SubQuarantine from './component/quarantine/subQuarantine';\r\nimport PeopleContext from './context/peopleContext';\r\nimport People from './page/people';\r\nimport SubPeople from './component/people/subPeople';\r\nimport Hospital from './page/hospital';\r\nimport SubHospital from './component/hospital/subHospital';\r\nimport Login from './page/login'\r\nimport { Layout } from 'antd'\r\nimport { useQuery } from '@apollo/client'\r\nimport { IS_LOGGED_IN } from './graphql/auth'\r\nimport MapScreen from './page/map';\r\nconst { Footer, Content } = Layout\r\nconst Routes = () => {\r\n  const { data: isLogin } = useQuery(IS_LOGGED_IN);\r\n  const login = isLogin.isLoggedIn;\r\n  {/* <Dashboard /> */ }\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Layout style={{ minHeight: '100vh' }}>\r\n          {login ? <>\r\n            <HeaderContext>\r\n              <MenuHeader />\r\n            </HeaderContext>\r\n            <Layout className=\"site-layout\">\r\n              <HeaderContext>\r\n                <Navbar />\r\n              </HeaderContext>\r\n              <Content style={{ margin: '20px' }}>\r\n                <DashBoardContext>\r\n                  <CaseContext>\r\n                    <UserContext>\r\n                      <QuarantineContext>\r\n                        <PeopleContext>\r\n                          <HospitalContext>\r\n                            <Switch >\r\n                              <Route exact path=\"/\">\r\n                                <MapScreen />\r\n                              </Route>\r\n                              <Route path=\"/case\">\r\n                                <Case />\r\n                              </Route>\r\n                              <Route path=\"/subCase/:id\">\r\n                                <SubCase />\r\n                              </Route>\r\n                              <Route path=\"/people\">\r\n                                <People />\r\n                              </Route>\r\n                              <Route path=\"/subPeople/:id\">\r\n                                <SubPeople />\r\n                              </Route>\r\n                              <Route path=\"/user\">\r\n                                <User />\r\n                              </Route>\r\n                              <Route path=\"/quarantine\">\r\n                                <Quarantine />\r\n                              </Route>\r\n                              <Route path=\"/subQuarantine/:id\">\r\n                                <SubQuarantine />\r\n                              </Route>\r\n                              <Route path=\"/hospital\">\r\n                                <Hospital />\r\n                              </Route>\r\n                              <Route path=\"/subHospital/:id\">\r\n                                <SubHospital />\r\n                              </Route>\r\n                            </Switch>\r\n                          </HospitalContext>\r\n                        </PeopleContext>\r\n                      </QuarantineContext>\r\n                    </UserContext>\r\n                  </CaseContext>\r\n                </DashBoardContext>\r\n              </Content>\r\n              <Footer style={{ textAlign: 'center', color: 'red', fontSize: 17 }}>\r\n                <marquee behavior=\"alternate\">\r\n                  <span style={{}}>\r\n                    <span  style={{ marginRight:15 }} >\r\n                      <Image height=\"50px\" width=\"50px\" src={GoGlobalLogo} preview={false}/>\r\n                    </span>\r\n                    <span style={{position:'absolute', top:14}}>សាលាហ្គោគ្លូប៊ល | Go Global School &copy;2021</span>\r\n                  </span>\r\n                </marquee>\r\n\r\n              </Footer>\r\n            </Layout></> : <Switch>\r\n            <Route>\r\n              <Login />\r\n            </Route>\r\n          </Switch>\r\n          }\r\n        </Layout>\r\n      </div>\r\n\r\n\r\n\r\n\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default Routes\r\n","import './static/App.css';\r\nimport React, { useState } from 'react'\r\nimport {cache} from './cache'\r\nimport {\r\n  split,\r\n   HttpLink,\r\n  ApolloClient,\r\n  InMemoryCache,\r\n  ApolloProvider\r\n} from \"@apollo/client\";\r\nimport { createUploadLink } from 'apollo-upload-client';\r\nimport { getMainDefinition } from '@apollo/client/utilities';\r\nimport { WebSocketLink } from '@apollo/client/link/ws';\r\nimport Routes from './Routes';\r\n\r\nconst token =()=>{\r\n  let newToken =  JSON.parse(localStorage.getItem('user'))\r\n  return newToken?.token\r\n}\r\n\r\nconst tokens = token()\r\n\r\n const upLoadLink = createUploadLink({\r\n    uri: \"http://192.168.1.152:4000/graphql\",\r\n    headers:{\r\n      Authorization: tokens\r\n    }\r\n    \r\n  })\r\n\r\nconst wsLink = new WebSocketLink({\r\n  uri: \"ws://192.168.1.152:4000/graphql\",\r\n  options: {\r\n    reconnect: true\r\n  }\r\n});\r\n\r\nconst splitLink = split(\r\n  ({ query }) => {\r\n    const definition = getMainDefinition(query);\r\n    return (\r\n      definition.kind === 'OperationDefinition' &&\r\n      definition.operation === 'subscription'\r\n    );\r\n  },\r\n  wsLink,\r\n  upLoadLink\r\n);\r\n\r\nconst client = new ApolloClient({\r\n  cache,\r\n  onError: ({ networkError, graphQLErrors }) => {\r\n    console.log('graphQLErrors', graphQLErrors)\r\n    console.log('networkError', networkError)\r\n  },\r\n\r\n  link:splitLink\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <Routes/>\r\n      {/* <h3>dddd</h3> */}\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport './static/index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}