{"version":3,"sources":["cache.js","asset/srLogo.png","reducer/headerReducer.js","context/headerContext.js","function/fn.js","dynamic/menu.js","dynamic/navbar.js","asset/goglobalschool.png","reducer/dashboardReducer.js","context/dashboardContext.js","function/set.js","reducer/caseReducer.js","context/caseContext.js","graphql/auth.js","context/userContext.js","reducer/quarantineReducer.js","context/quarantineContext.js","reducer/hospitalReducer.js","context/hospitalContext.js","component/datepickertwo/datePickerTwo.js","page/dashboard.js","component/case/tableColumn/caseColumn.js","static/own-comp.js","graphql/case.js","component/case/modal/addCase.js","page/case.js","component/case/tableColumn/subCaseColumn.js","component/case/modal/editCase.js","component/case/subCase.js","component/user/tableColumn/userColumn.js","component/user/modal/addUser.js","component/user/modal/editUser.js","component/user/tableColumn/roleColumn.js","component/user/modal/addRole.js","component/user/modal/editAccount.js","page/user.js","component/quarantine/tableColumn/quarantineColumn.js","graphql/quarantine.js","component/quarantine/modal/addQuarantine.js","page/quarantine.js","component/quarantine/tableColumn/subQuarantineColumn.js","component/quarantine/modal/editQuarantine.js","component/quarantine/modal/addSubQuarantine.js","component/quarantine/modal/editSubQuarantine.js","graphql/people.js","component/quarantine/subQuarantine.js","reducer/peopleReducer.js","context/peopleContext.js","component/people/tableColumn/peopleColumn.js","component/people/modal/addPeople.js","graphql/hospital.js","page/people.js","component/people/tableColumn/testColumn.js","component/people/tableColumn/relatedColumn.js","component/people/modal/addPeopleRelated.js","component/people/modal/addPeopleTest.js","component/hospital/modal/addHospital.js","component/people/modal/addPeopleHospital.js","component/people/modal/addPeopleStatus.js","component/people/modal/addPeopleQuarantine.js","component/people/modal/addPeopleHistory.js","graphql/location.js","component/location/modal/addLocation.js","graphql/historylocation.js","component/people/modal/addPeopleLocation.js","component/people/modal/editPeople.js","component/people/modal/uploadPic.js","component/people/modal/editCurrentState.js","component/people/subPeople.js","component/hospital/tableColumn/hospitalColumn.js","page/hospital.js","component/hospital/tableColumn/subHospitalColumn.js","component/hospital/modal/editHospital.js","component/hospital/modal/addSubHospital.js","component/hospital/modal/editSubHospital.js","component/hospital/subHospital.js","page/login.js","component/covideComponents/InfoBox.js","component/covideComponents/Table.js","component/covideComponents/util.js","component/covideComponents/Map.js","graphql/dashboardAndReport.js","component/covideComponents/BarChart.js","asset/covid19.png","asset/recover.png","asset/death.png","asset/curring.png","asset/direct.png","asset/close-area.png","asset/notdirect.png","asset/open-area.png","component/covideComponents/LineGraph.js","component/covideComponents/BarGraph.js","component/covideComponents/LineChartTesting.js","page/map.jsx","component/print/report.js","component/print/report1.js","component/print/report2.js","page/report.js","component/location/tableColumn/locationColumn.js","component/location/modal/editLocation.js","page/location.js","component/location/subLocation.js","component/interview/tableColumn/interviewColumn.js","component/interview/modal/addInterview.js","component/interview/modal/editInterview.js","page/interview.js","component/NotFound.js","Routes.js","asset/cover-bg.jpg","App.js","reportWebVitals.js","index.js"],"names":["isLoggedInVar","makeVar","localStorage","getItem","cache","InMemoryCache","typePolicies","Query","fields","isLoggedIn","read","headerReducer","state","action","type","payload","HeaderData","createContext","genderData","require","provinceData","districtData","communeData","villageData","districForMap","nationalityData","HeaderContext","props","userData","JSON","parse","urlPath","useLocation","pathname","useReducer","user","userDispatch","Provider","value","children","convertToDistrict","data","item","map","load","push","id","district","title","convertToCommune","distict","commune","convertToVillage","village","getRelated","e","condition","i","direct","getRoles","txt","role","convertEditData","array","Object","entries","key","moment","keyMenu","myArr","split","convertHospitalToSelect","hospitalName","convertQurantineToSelect","locationName","Sider","Layout","SubMenu","Menu","MenuHeader","useContext","useState","collapsed","setCollapsed","collapsible","onCollapse","className","style","to","width","src","Logo","preview","background","height","theme","selectedKeys","mode","Item","fontSize","icon","HomeOutlined","LoginOutlined","TeamOutlined","ReconciliationOutlined","AuditOutlined","BankOutlined","ContainerOutlined","backgroundColor","UserOutlined","ExportOutlined","onClick","removeItem","Header","Navbar","padding","textAlign","color","paddingRight","UserSwitchOutlined","username","toUpperCase","dashboardReducer","count","Error","DashboardController","DashBoardContext","today","total","dashBoardData","dashBoardDataDispatch","case","dashboardList","dashboardListDispatch","setEditCase","values","caseName","date","related","undefined","province","other","long","lat","setQuarantine","length","quarantineName","place","inCharge","tel","note","setSubQuarantine","caseId","name","gender","status","relatedInfo","setEditSubQuarantine","date_in","date_out","in","others","personalInfo","personalType","setEditHospital","capacity","createdAt","personInCharge","firstName","lastName","position","setAddQuarantine","parseFloat","setAddHospital","otehrs","setAddPeople","age","parseInt","nationality","occupation","idCard","vaccinated","interviewed","setAddSubQuarantine","format","setEditQuarantine","setPeopleLocation","affectedLocationId","setPeopleHospital","hospitalInfo","caseReducer","index","findIndex","index1","caseTitle","Date","remark","splice","setSubCase","CaseController","CaseContext","caseData","caseDataDispatch","subCaseData","subCaseDataDispatch","LOGIN_USER","gql","IS_LOGGED_IN","REGISTER_USER","GET_ALL_USERS","UPDATE_USER_DETAIL","DELETE_USER","ADD_USER_ROLE","UserController","UserContext","setUserData","useQuery","variables","page","limit","keyword","onCompleted","getUserWithPagination","users","loading","error","quarantineReducer","QuarantineController","QuarantineContext","quarantineData","quarantineDataDispatch","subQuarantineData","subQuarantineDataDispatch","hospitalReducer","HospitalController","HospitalContext","hospitalData","hospitalDataDispatch","subHospitalData","subHospitalDataDispatch","DatePickerTwo","ranges","setRange","selectionRange","startDate","endDate","ran","showSelectionPreview","showDateDisplay","onChange","selection","showMonthAndYearPickers","Typography","Title","DatePicker","RangePicker","Select","Option","caseCol","handleDelete","no","dataIndex","render","text","record","size","console","log","fixed","align","EditOutlined","onConfirm","okText","cancelText","DeleteOutlined","ListSelect","setValue","disabled","showSearch","placeholder","optionFilterProp","filterOption","input","option","indexOf","filterSort","optionA","optionB","localeCompare","affectedLocationName","GET_ALL_CASES","CREATE_NEW_CASE","GET_ALL_CASES_NO_LIMIT","GET_PERSON_BY_CASE","GET_CASE_BY_ID","UPDATE_CASE_BY_ID","DELETE_CASE_BY_ID","AddCase","open","setOpen","setRefetch","setCaseId","useMutation","createCase","message","success","onError","setProvince","setDistrict","setCommune","Form","useForm","form","visible","onOk","onCancel","footer","onFinish","resetFields","onFinishFailed","errorInfo","xs","md","span","rules","required","offset","setFieldsValue","htmlType","Case","setCaseData","openAdd","setOpenAdd","setPage","setLimit","setKeyword","getCaseWithPagination","fetchPolicy","refetch","deleteCase","useEffect","PlusOutlined","Search","target","marginTop","columns","dataSource","cases","rowKey","pagination","paginator","totalDocs","pageSize","scroll","x","sticky","subCaseCol","handleEditSubCase","currentState","confirm","EyeOutlined","EditCase","setRetetch","updateCase","destroyOnClose","getContainer","forceRender","initialValues","SubCase","useParams","setSubCaseData","openEdit","setOpenEdit","getPersonalInfoByCaseWithPagination","getCaseById","dataCase","refetchCase","level","personalInfos","userCol","handleUserEdit","handleAccountEdit","handleUserRole","setRoleUserID","roles","KeyOutlined","AddUser","registerUser","password","firstname","lastname","email","EditUser","updateUserDetail","userId","roleColumn","AddRole","userID","dataRoles","addRole","EditAccount","Password","iconRender","EyeTwoTone","EyeInvisibleOutlined","User","setDataRoles","userEdit","setUserEdit","openRole","setOpenRole","roleUserID","openEditAccount","setOpenEditAccount","deleteUser","current","currentPage","quarantineCol","d","setHours","GET_ALL_QUARANTINEINFO","CREATE_QUARANTINEINFO","DELETE_QUARANTINE_BY_ID","CREATE_PERSON_QUARANTINE","GET_PERSON_BY_QUARANTINE","GET_QUARANTINE_BY_ID","UPDATE_QUARANTINE_BY_ID","DELETE_PERSON_BY_QUARANTINE","UPDATE_PEOPLE_BY_QUARANTINE","ALL_QUARANTINEINFO","AddQuarantine","quarantineId","setQuarantineId","createQuarantineInfo","quarantineInfo","Quarantine","setQuarantineData","getQuarantineInfoWithPagination","deleteQuarantineInfo","quarantineInfos","subQuarantineCol","handleEditSubQuarantine","EditQuarantine","updateQuarantineInfo","AddSubQuarantine","peopleData","createQuarantine","people","EditSubQuarantine","updateQuarantine","GET_ALL_PERSONINFO","CREATE_NEW_PERSON","GET_ALL_PERSONINFO_NO_LIMIT","RECORD_SAMPLETEST","GET_PERSONALINFO_BY_ID","DELETE_PERSONALINFO_BY_ID","GET_HOSPITAL_QUARANTINE_BY_PERSON","UPDATE_PERSON_BY_ID","DELETE_SAMPLETEST","UPDATE_CURRENTSTATE_BY_ID","GET_INTERVIEW","SubQuarantine","setPeopleData","updateSubData","setUpdateSubData","openAddSub","setOpenAddSub","openEditSub","setOpenEditSub","setSubQuarantineData","allPersonalInfos","getQuarantineInfoById","quarantine","refetchQuarantine","quarantineInfoId","getQuarantineByQurantineIdWithPagination","subQuarantine","refetchSub","deleteQuarantine","PlusCircleOutlined","quarantines","peopleReducer","job","PeopleController","PeopleContext","peopleDataDispatch","peopleCol","AddPeople","allCases","setAllCases","openModal","setOpenModal","createPersonalInfo","englishName","patientId","relation","illness","addonBefore","valuePropName","GET_ALL_HOSPITAL","CREATE_HOSPITALINFO","DELETE_HOSPITALINFO_BY_ID","CREATE_NEW_HOSPITALIZATION","GET_PERSON_BY_HOSPITALINFO","GET_HOSPITALINFO_BY_ID","UPDATE_HOSPITALINFO_BY_ID","UPDATE_PERSON_BY_HOSPITALINFO","DELETE_PERSON_BY_HOSPITAL","ALL_HOSPIAL_INFO","People","getPersonalInfoWithPagination","deletePersonalInfo","testCol","handleSampleTestDelete","result","relatedCol","handleRelatedDelete","AddPeopleRelated","AddPeopleTest","peopleID","recordSampleTest","times","location","symptom","personalInfoId","labFormCompletedBy","laboratory","reasonForTesting","symptomStart","AddHospital","hospitalId","setHospitalId","createHospitalInfo","hospitalInfos","AddPeopleHospital","peopleId","hospital","setHospital","createHospitalization","allHospitalInfos","AddPeopleStatus","AddPeopleQuarantine","allQuarantineInfos","AddPeopleHistory","GET_ALL_LOCATION","CREATE_NEW_LOCATION","GET_AFFECTED_LOCATION_PAGINATION","DELETE_AFFECTEDLOCATION_BY_ID","UPDATE_AFFECTEDLOCATION_BY_ID","AddLocation","locationId","setLocationId","createAffectedLocation","affectedLocation","CREATE_NEW_HISTORYLOCATION","GET_HISTORYLOCATION_BY_PERSON","AddPeopleLocation","locationData","setLocationData","setLocation","createHistoryLocation","allAffectedLocations","EditPeople","personId","personalData","updatePersonalInfo","setEditPeople","UploadPic","fileList","setFileList","onPreview","file","a","url","Promise","resolve","reader","FileReader","readAsDataURL","originFileObj","onload","image","Image","window","document","write","outerHTML","rotate","listType","newFileList","maxCount","EditCurrentState","currentStateData","setDateKey","updateCurrentState","newObj","confirmedAt","recovered","recoveredAt","death","deathAt","handleStateChange","SubPeople","openAddPeopleRelated","setOpenAddPeopleRelated","openAddPeopleTest","setOpenAddPeopleTest","openAddPeopleHospital","setOpenAddPeopleHospital","openAddPeopleStatus","setOpenAddPeopleStatus","openAddPeopleQuarantine","setOpenAddPeopleQuarantine","openAddPeopleHistory","setOpenAddPeopleHistory","openAddPeopleLocation","setOpenAddPeopleLocation","openUploadPic","setOpenUploadPic","setSubCasePagination","openEditCurrentState","setOpenEditCurrentState","setHospitalData","getPersonalInfoById","refetchPerson","personalId","getHospitalizationByPersonalInfo","hospital_quarantine","getHistoryLocationByPersonalInfoId","historylocation","refetchHistoryLocation","deleteSampleTest","border","CameraOutlined","marginLeft","paddingBottom","colSpan","marginBottom","label","paddingTop","sampleTestId","sampleTest","y","hospitalCol","Hospital","getHospitalInfoWithPagination","deleteHospitalInfo","subHospitalCol","handleEditSubHospital","EditHospital","updateHospitalInfo","AddSubHospital","EditSubHospital","updateHospitalization","setEditSubHospital","SubHospital","setSubHospitalData","getHospitalInfoById","refetchHospital","getQuarantineByHospitalIdIdWithPagination","hospitalSub","deleteHospitalization","hospitalizations","Login","useHistory","loginUser","setItem","stringify","lg","xl","autoComplete","InfoBox","active","isRed","ImageShow","r","Card","CardContent","as","top","right","Table","dis","numeral","confirmedCase","casesTypeColors","hex","rgb","half_op","multiplier","deaths","showDataOnMap","casesType","Circle","center","pathOptions","fillColor","fillOpacity","radius","Popup","showHospitalInfoOnMap","Map","zoom","React","satellite","setSatellite","quantineData","TileLayer","attribution","googleMapsLoaderConf","KEY","GET_ALL_PROVINCE","GET_DATA_FOR_MAP","GET_DATA_FOR_GRAP","BarChart","setData","getDataForGrap","datas","dat","labels","datasets","fill","borderColor","options","maintainAspectRatio","LineGraph","BarGraph","LineChartTesting","MapScreen","districtLatLong","countries","tableData","setTableData","setCasesType","lng","mapCenter","mapZoom","districtInfo","setDistrictInfo","districtDatas","setDistrictDatas","getAllProvince","mapDatas","arr1","arr2","arr","load1","_id","joinArray","getAllDistrictForMap","sortedData","sort","b","sortData","lower","obj","prop","toLowerCase","forEach","c","FormControl","confirmedCaseToday","ImageCovid","recoveredToday","ImageRecover","deathToday","ImageDeath","ImageCure","ImageDirect","ImageNotDirect","ImageClose","ImageOpen","PrintReport","float","verticalAlign","listStyleType","Component","PrintReport1","rowSpan","PrintReport2","Report","componentRef","useRef","componentRef1","componentRef2","openModal1","setOpenModal1","openModal2","setOpenModal2","setRanges","trigger","content","ref","locationCol","handleEdit","closeAt","openAt","dataEdit","updateAffectedLocation","Location","setDataEdit","getAffectedLocationWithPagination","deleteAffectedLocation","affectedLocations","SubLocation","interviewCol","Interview","interviewType","setInterviewType","setEditData","interviewedData","setInterviewedData","interview","getConfirmedPersonalInfoByInterviewWithPagination","defaultValue","NotFound","subTitle","extra","Footer","Content","Routes","login","minHeight","margin","exact","path","marginRight","GoGlobalLogo","tokens","newToken","token","process","upLoadLink","createUploadLink","uri","headers","Authorization","wsLink","WebSocketLink","reconnect","splitLink","query","definition","getMainDefinition","kind","operation","client","ApolloClient","networkError","graphQLErrors","link","App","ApolloProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.7b277395.chunk.js","sourcesContent":["import { InMemoryCache, Reference, makeVar } from '@apollo/client';\r\n\r\n\r\n// Initializes to true if localStorage includes a 'token' key,\r\n// false otherwise\r\nexport const  isLoggedInVar = makeVar(!!localStorage.getItem(\"user\"));\r\n\r\nexport const cache = new InMemoryCache({\r\n    typePolicies: {\r\n      Query: {\r\n        fields: {\r\n          isLoggedIn: {\r\n            read() {\r\n              return isLoggedInVar();\r\n            }\r\n          },\r\n        }\r\n      }\r\n    }\r\n  });","export default __webpack_public_path__ + \"static/media/srLogo.85fb41d7.png\";","export const headerReducer = (state, action) => {\r\n    switch(action.type){\r\n        case 'SET_DATA_BACK':\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}","import React, { createContext, useReducer } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { headerReducer } from '../reducer/headerReducer'\r\n\r\nexport const HeaderData = createContext()\r\n\r\nexport const genderData = require('../asset/data/gender.json')\r\nexport const provinceData = require('../asset/data/province.json')\r\nexport const districtData = require('../asset/data/district.json')\r\nexport const communeData = require('../asset/data/commune.json')\r\nexport const villageData = require('../asset/data/village.json')\r\nexport const districForMap = require('../asset/data/districtFormap.json')\r\nexport const nationalityData = require('../asset/data/nationality.json')\r\n\r\nexport default function HeaderContext(props) {\r\n    let userData = JSON.parse(localStorage.getItem('user'))\r\n    const urlPath = useLocation().pathname\r\n    const [user, userDispatch] = useReducer(headerReducer,userData)\r\n\r\n    return (\r\n        <HeaderData.Provider\r\n            value={{\r\n                urlPath,\r\n                user,\r\n                userDispatch\r\n            }}\r\n        >\r\n            {props.children}\r\n        </HeaderData.Provider>\r\n    )\r\n}\r\n","import moment from 'moment'\r\n\r\nexport function convertToDistrict(data) {\r\n    var item = []\r\n    data.map(load => {\r\n        return item.push({ id: load.district, title: load.district })\r\n    })\r\n\r\n    return item\r\n}\r\n\r\nexport function convertToCommune(distict, data) {\r\n    var item = []\r\n    data.map(load => {\r\n        if (distict === load.district) {\r\n            return (item.push({ id: load.commune, title: load.commune }))\r\n        }\r\n        return null\r\n    })\r\n\r\n    return item\r\n}\r\n\r\nexport function convertToVillage(commune, data) {\r\n    var item = []\r\n    data.map(load => {\r\n        if (commune === load.commune) {\r\n            item.push({ id: load.village, title: load.village })\r\n        }\r\n        return null\r\n    })\r\n\r\n    return item\r\n}\r\n\r\nexport function getRelated(e, condition) {\r\n    var i = 0\r\n    if (e) {\r\n        e.map(load => {\r\n            if (load.direct === condition) {\r\n                i += 1\r\n            }\r\n            return null\r\n        })\r\n    }\r\n\r\n    return i\r\n}\r\n\r\nexport function getRoles(e) {\r\n    var txt = \"\"\r\n    e.map(load => {\r\n        txt += load.role + \", \"\r\n    })\r\n    return txt\r\n}\r\n\r\nexport function getFullNamePersonInCharge(e) {\r\n    var txt = \"\"\r\n    e.map(load => {\r\n        txt += load.firstName + \" \" + load.lastName\r\n    })\r\n    return txt\r\n}\r\n\r\nexport function convertEditData(e) {\r\n    var array = []\r\n    for (let [key, value] of Object.entries(e)) {\r\n        if(key === \"openAt\" || key === \"closeAt\"){\r\n            array.push(\r\n                {\r\n                    \"name\": [\r\n                        key\r\n                    ],\r\n                    \"value\": value === null ? null : moment(value)\r\n                }\r\n            )\r\n        }else{\r\n            array.push(\r\n                {\r\n                    \"name\": [\r\n                        key\r\n                    ],\r\n                    \"value\": value\r\n                }\r\n            )\r\n        }\r\n    }\r\n    return array\r\n}\r\n\r\nexport function keyMenu(e){\r\n    const myArr = e.split(\"/\");\r\n    let x = \"\"\r\n\r\n    if(myArr[1] === 'people' || myArr[1] === 'subPeople'){\r\n        x=\"/people\"\r\n    }\r\n\r\n    else if(myArr[1] === 'case' || myArr[1] === 'subCase'){\r\n        x=\"/case\"\r\n    }\r\n\r\n    else if(myArr[1] === 'quarantine' || myArr[1] === 'subQuarantine'){\r\n        x=\"/quarantine\"\r\n    }\r\n\r\n    else if(myArr[1] === 'hospital' || myArr[1] === 'subHospital'){\r\n        x=\"/hospital\"\r\n    }\r\n\r\n    else if(myArr[1] === 'specifylocation' || myArr[1] === 'subSpecifylocation'){\r\n        x=\"/specifylocation\"\r\n    }\r\n\r\n    else if(myArr[1] === 'interview' || myArr[1] === 'subInterview'){\r\n        x=\"/interview\"\r\n    }\r\n\r\n    else if(myArr[1] === 'user'){\r\n        x=\"/user\"\r\n    }\r\n\r\n    else if(myArr[1] === 'reportdaily'){\r\n        x=\"/reportdaily\"\r\n    }\r\n\r\n    else{\r\n        x=\"/\"\r\n    }\r\n    \r\n    return x\r\n}\r\n\r\nexport function convertHospitalToSelect(e){\r\n    let array = []\r\n\r\n    e?.map(load => {\r\n        return array.push({id: load.id, title: load.hospitalName})\r\n    })\r\n\r\n    return array\r\n}\r\n\r\nexport function convertQurantineToSelect(e){\r\n    let array = []\r\n\r\n    e?.map(load => {\r\n        return array.push({id: load.id, title: load.locationName})\r\n    })\r\n\r\n    return array\r\n}","import { Layout, Menu, Image,Divider } from 'antd';\r\nimport {\r\n    SettingOutlined,\r\n    ContainerOutlined,\r\n    TeamOutlined,\r\n    ExportOutlined,\r\n    HomeOutlined,\r\n    LoginOutlined,\r\n    UserOutlined,\r\n    BankOutlined,\r\n    ReconciliationOutlined,AuditOutlined\r\n} from '@ant-design/icons';\r\nimport Logo from '../asset/srLogo.png'\r\nimport { Link } from 'react-router-dom'\r\nimport { useContext, useState } from 'react';\r\nimport { HeaderData } from '../context/headerContext';\r\n// import { auth } from '../api/firebase';\r\nimport { isLoggedInVar } from '../cache';\r\nimport { keyMenu } from '../function/fn'\r\n\r\nconst { Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nexport default function MenuHeader() {\r\n    const { urlPath, user } = useContext(HeaderData)\r\n    const [collapsed, setCollapsed] = useState(false)\r\n\r\n    // const token =()=>{\r\n    //     let newToken =  JSON.parse(localStorage.getItem('user'))\r\n    //     return newToken?.token\r\n    //   }\r\n      \r\n\r\n    const handleLoggout = ()=>{\r\n        localStorage.removeItem(\"user\")\r\n        isLoggedInVar(false)\r\n    }\r\n\r\n    return (\r\n        <Sider collapsible collapsed={collapsed} onCollapse={() => setCollapsed(!collapsed)}\r\n        className=\"side-custom\"\r\n            style={{\r\n                // backgroundColor: '#06385f' \r\n                // backgroundColor: '#22252A' \r\n                // backgroundColor:'#1e3b87'\r\n                // backgroundColor:'#005438'\r\n                // background: 'repeating-linear-gradient(-55deg,#005b3d,#005b3d 30px,#005438 30px,#005438 40px)'\r\n                // background: 'url(\"../asset/covid-19-bg.png\") repeat center'\r\n\r\n            }}>\r\n            <Link to=\"/\">\r\n                <div className=\"logo\">\r\n                    <Image width={\"100%\"} className=\"img-logo\" src={Logo} preview={false} />\r\n                </div>\r\n            </Link>\r\n            <Divider style={{background:'#FFF',height:2}} />\r\n            <Menu theme=\"dark\"\r\n                // defaultSelectedKeys={[urlPath]} \r\n                selectedKeys={[keyMenu(urlPath)]}\r\n                mode=\"inline\"\r\n                style={{\r\n                    // backgroundColor: '#06385f'\r\n                    // backgroundColor:'#1e3b87'\r\n                    // backgroundColor: '#22252A' \r\n                    // backgroundColor:'#005438'\r\n                    // background: 'repeating-linear-gradient(-55deg,#006745,#006745 10px,#005438 10px,#005438 20px)'\r\n                    // backgroundColor:\"none\"\r\n                    // background: repeating-linear-gradient(\r\n                    //     -55deg,\r\n                    //     #222,\r\n                    //     #222 10px,\r\n                    //     #333 10px,\r\n                    //     #333 20px\r\n                    //   );\r\n                }}>\r\n               \r\n                <Menu.Item key=\"/\" style={{fontSize:16}} icon={<HomeOutlined style={{fontSize:20}}  />}>\r\n                    ទំព័រដើម\r\n                    <Link to=\"/\" />\r\n                </Menu.Item>\r\n                <Menu.Item key=\"/case\" style={{fontSize:16}} icon={<LoginOutlined style={{fontSize:20}}  />}>\r\n                    កំណត់ត្រាករណី\r\n                    <Link to=\"/case\" />\r\n                </Menu.Item>\r\n                <Menu.Item key=\"/people\" style={{fontSize:16}} icon={<TeamOutlined style={{fontSize:20}}  />}>\r\n                    ព័ត៌មានអ្នកជំងឺ\r\n                    <Link to=\"/people\" />\r\n                </Menu.Item>\r\n\r\n                <Menu.Item key=\"/hospital\" style={{fontSize:16}} icon={<ReconciliationOutlined style={{fontSize:20}}  />}>\r\n                    ការព្យាបាល\r\n                    <Link to=\"/hospital\" />\r\n                </Menu.Item>\r\n\r\n                <Menu.Item key=\"/interview\" style={{fontSize:16}} icon={<AuditOutlined style={{fontSize:20}}  />}>\r\n                    ការសម្ភាសអ្នកជំងឺ\r\n                    <Link to=\"/interview\" />\r\n                </Menu.Item>\r\n\r\n                <Menu.Item key=\"/quarantine\" style={{fontSize:16}} icon={<BankOutlined style={{fontSize:20}}  />}>\r\n                    ចត្តាឡីស័ក\r\n                    <Link to=\"/quarantine\" />\r\n                </Menu.Item>\r\n                \r\n                <Menu.Item key=\"/specifylocation\" style={{fontSize:16}} icon={<AuditOutlined style={{fontSize:20}}  />}>\r\n                    ទីតាំងបិទ/បើក\r\n                    <Link to=\"/specifylocation\" />\r\n                </Menu.Item>\r\n                \r\n                <SubMenu key=\"sub1\" style={{fontSize:16}} icon={<ContainerOutlined style={{fontSize:20}}  />} title=\"របាយការណ៍\">\r\n                    <Menu.Item style={{backgroundColor:'#009966'}} key=\"/reportdaily\">\r\n                        របាយការណ៍\r\n                        <Link to=\"/reportdaily\" />\r\n                    </Menu.Item>\r\n                    {/* <Menu.Item key=\"5\">\r\n                        របាយការណ៍ទាំងមូល\r\n                        <Link to=\"/reportall\" />\r\n                    </Menu.Item> */}\r\n                </SubMenu>\r\n                {/* <Menu.Item key=\"/setting\" icon={<SettingOutlined />}>\r\n                    ការកំណត់\r\n                    <Link to=\"/setting\" />\r\n                </Menu.Item> */}\r\n                {user.role !== \"ADMIN\" ? (\r\n                    <Menu.Item key=\"/user\" style={{fontSize:16}} icon={<UserOutlined style={{fontSize:20}}  />}>\r\n                        កំណត់អ្នកប្រើប្រាស់\r\n                        <Link to=\"/user\" />\r\n                    </Menu.Item>\r\n                ) : (\r\n                    <></>\r\n                )}\r\n\r\n                <Menu.Item\r\n                    // onClick={() => auth.signOut()}\r\n                    style={{fontSize:16}} \r\n                    key=\"6\"\r\n                    icon={<ExportOutlined style={{fontSize:20}}  />}\r\n                    \r\n                    onClick={() => handleLoggout()}\r\n                >\r\n                    ចាកចេញ\r\n                </Menu.Item>\r\n            </Menu>\r\n        </Sider>\r\n    )\r\n}","import React, { useContext } from 'react'\r\nimport { Layout } from 'antd'\r\nimport { HeaderData } from '../context/headerContext'\r\nimport {UserSwitchOutlined} from '@ant-design/icons'\r\n\r\nconst { Header } = Layout\r\n\r\nexport default function Navbar() {\r\n    const { user } = useContext(HeaderData)\r\n\r\n    return (\r\n        // background:'#0087c0'\r\n        // background: 'repeating-linear-gradient(-55deg,#005b3d,#005b3d 30px,#005438 30px,#005438 40px)'\r\n        <Header className=\"site-layout-background nav-custom\" style={{ padding: 0, textAlign: \"right\", }}>\r\n            <p style={{ color: \"white\", paddingRight: 20}}><UserSwitchOutlined style={{fontSize:25}} /> {user?.user?.username.toUpperCase()}</p>\r\n        </Header>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/goglobalschool.cd293cd0.png\";","export function dashboardReducer(state, action) {\r\n    switch (action.type) {\r\n      case 'increment':\r\n        return {count: state.count + 1};\r\n      case 'decrement':\r\n        return {count: state.count - 1};\r\n      default:\r\n        throw new Error();\r\n    }\r\n  }","import React, {useReducer, createContext} from 'react'\r\nimport { dashboardReducer } from '../reducer/dashboardReducer'\r\n\r\nexport const DashboardController = createContext()\r\n\r\nexport default function DashBoardContext(props) {\r\n    const [dashBoardData, dashBoardDataDispatch] = useReducer(dashboardReducer, [\r\n        {\r\n            title: \"ករណីឆ្លង\",\r\n            today: 200,\r\n            total: 200,\r\n        },\r\n        {\r\n            title: \"ជាសះស្បើយ\",\r\n            today: 200,\r\n            total: 200,\r\n        },\r\n        {\r\n            title: \"ករណីស្លាប់\",\r\n            today: 200,\r\n            total: 200,\r\n        },\r\n        {\r\n            title: \"ចត្តាឡីស័ក\",\r\n            today: 200,\r\n            total: 200,\r\n        },\r\n        {\r\n            title: \"ករណីឆ្លង\",\r\n            today: 200,\r\n            total: 200,\r\n        },\r\n        {\r\n            title: \"ករណីឆ្លង\",\r\n            today: 200,\r\n            total: 200,\r\n        },\r\n    ])\r\n\r\n    const [dashboardList, dashboardListDispatch] = useReducer(dashboardReducer, [\r\n        {\r\n            title: \"ស្រុកពួក\",\r\n            case: 10\r\n        },\r\n        {\r\n            title: \"ស្រុកបន្ទាយស្រី\",\r\n            case: 10\r\n        },\r\n    ])\r\n\r\n    return (\r\n        <DashboardController.Provider\r\n            value={{\r\n                dashBoardData,\r\n                dashboardList,\r\n\r\n                dashBoardDataDispatch,\r\n                dashboardListDispatch\r\n            }}\r\n        >\r\n            {props.children}\r\n        </DashboardController.Provider>\r\n    )\r\n}\r\n","import moment from \"moment\"\r\n\r\nexport function setCase(values, length) {\r\n    var array = {\r\n        id: values.id === undefined ? length += 1 + \"\" : values.id,\r\n        caseTitle: values.caseTitle,\r\n        date: new Date(values.date),\r\n        place: values.place,\r\n        related: values.related === undefined ? 0 : values.related,\r\n        province: values.province === undefined ? \"\" : values.province,\r\n        district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n        commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n        village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n        remark: values.remark,\r\n    }\r\n\r\n    return array\r\n}\r\n\r\nexport function setEditCase(values) {\r\n    var array = {\r\n        id: values.id + \"\",\r\n        caseName: values.caseName,\r\n        date: moment(values.date),\r\n        related: values.related === undefined ? 0 : values.related,\r\n        province: values.province === undefined ? \"\" : values.province,\r\n        district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n        commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n        village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n        other: values.other,\r\n        long: values.long === undefined ? \"\" : values.long,\r\n        lat: values.lat === undefined ? \"\" : values.lat,\r\n    }\r\n\r\n    return array\r\n}\r\n\r\nexport function setSubCase(values, length) {\r\n    var array = {\r\n        id: values.id === undefined ? length += 1 + \"\" : values.id,\r\n        caseId: values.caseId === undefined ? \"\" : values.caseId,\r\n        name: values.name === undefined ? \"\" : values.name,\r\n        gender: values.gender === undefined ? \"\" : values.gender,\r\n        province: values.province === undefined ? \"\" : values.province,\r\n        district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n        commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n        village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n        status: values.status === undefined ? \"\" : values.status,\r\n        relatedInfo: values.relatedInfo === undefined ? \"\" : values.relatedInfo,\r\n    }\r\n\r\n    return array\r\n}\r\n\r\nexport function setEditSubCase(values) {\r\n    var array = {\r\n        id: values.id + \"\",\r\n        caseId: values.caseId === undefined ? \"\" : values.caseId,\r\n        name: values.name === undefined ? \"\" : values.name,\r\n        gender: values.gender === undefined ? \"\" : values.gender,\r\n        province: values.province === undefined ? \"\" : values.province,\r\n        district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n        commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n        village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n        status: values.status === undefined ? \"\" : values.status,\r\n        relatedInfo: values.relatedInfo === undefined ? \"\" : values.relatedInfo,\r\n    }\r\n\r\n    return array\r\n}\r\n\r\nexport function setPeople(values, length) {\r\n    var array = {\r\n        id: values.id === undefined ? length += 1 + \"\" : values.id,\r\n        idCard: values.idCard === undefined ? \"\" : values.idCard,\r\n        name: values.name === undefined ? \"\" : values.name,\r\n        gender: values.gender === undefined ? \"\" : values.gender,\r\n        age: values.age === undefined ? \"\" : values.age,\r\n        tel: values.tel === undefined ? \"\" : values.tel,\r\n        job: values.job === undefined ? \"\" : values.job,\r\n        nationality: values.nationality === undefined ? \"\" : values.nationality,\r\n        province: values.province === undefined ? \"\" : values.province,\r\n        district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n        commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n        village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n        remark: values.remark === undefined ? \"\" : values.remark,\r\n    }\r\n\r\n    return array\r\n}\r\n\r\nexport function setUser(values, length) {\r\n    var array = {\r\n        id: values.id === undefined ? length += 1 + \"\" : values.id,\r\n        username: values.username,\r\n        firstName: values.firstName === undefined ? \"\" : values.firstName,\r\n        lastName: values.lastName === undefined ? \"\" : values.lastName,\r\n        role: values.roles.role,\r\n        tel: values.tel,\r\n        email: values.email,\r\n    }\r\n\r\n    return array\r\n}\r\n\r\nexport function setEditUser(values) {\r\n    const data = values.roles\r\n\r\n    console.log(data)\r\n\r\n    var array = {\r\n        id: values.id + \"\",\r\n        username: values.username === undefined ? \"\" : values.username,\r\n        firstName: values.firstName === undefined ? \"\" : values.firstName,\r\n        lastName: values.lastName === undefined ? \"\" : values.lastName,\r\n        role: values.role === undefined ? \"\" : values.role,\r\n        tel: values.tel === undefined ? \"\" : values.tel,\r\n        email: values.email === undefined ? \"\" : values.email,\r\n    }\r\n    return array\r\n}\r\n\r\nexport function setQuarantine(values, length) {\r\n    var array = {\r\n        id: values.id + \"\",\r\n        quarantineName: values.quarantineName === undefined ? \"\" : values.quarantineName,\r\n        place: values.place === undefined ? \"\" : values.place,\r\n        village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n        commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n        district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n        province: values.province === undefined ? \"\" : values.province,\r\n        inCharge: values.inCharge === undefined ? \"\" : values.inCharge,\r\n        tel: values.tel === undefined ? \"\" : values.tel,\r\n        note: values.note === undefined ? \"\" : values.note,\r\n    }\r\n\r\n    return array\r\n}\r\n\r\n// export function setEditQuarantine(values, length) {\r\n//     var array = {\r\n//         id: values.id + \"\",\r\n//         quarantineName: values.quarantineName === undefined ? \"\" : values.quarantineName,\r\n//         place: values.place === undefined ? \"\" : values.place,\r\n//         village: values.village === undefined ? \"\" : values.village,\r\n//         commune: values.commune === undefined ? \"\" : values.commune,\r\n//         district: values.district === undefined ? \"\" : values.district,\r\n//         province: values.province === undefined ? \"\" : values.province,\r\n//         inCharge: values.inCharge === undefined ? \"\" : values.inCharge,\r\n//         tel: values.tel === undefined ? \"\" : values.tel,\r\n//         note: values.note === undefined ? \"\" : values.note,\r\n//     }\r\n\r\n//     return array\r\n// }\r\n\r\nexport function setSubQuarantine(values, length) {\r\n    var array = {\r\n        id: values.id === undefined ? length += 1 + \"\" : values.id,\r\n        caseId: values.caseId === undefined ? \"\" : values.caseId,\r\n        name: values.name === undefined ? \"\" : values.name,\r\n        gender: values.gender === undefined ? \"\" : values.gender,\r\n        province: values.province === undefined ? \"\" : values.province,\r\n        district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n        commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n        village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n        status: values.status === undefined ? \"\" : values.status,\r\n        relatedInfo: values.relatedInfo === undefined ? \"\" : values.relatedInfo,\r\n    }\r\n\r\n    return array\r\n}\r\n\r\nexport function setEditSubQuarantine(values) {\r\n    var array = {\r\n        date_in: moment(values.date_in),\r\n        date_out: moment(values.date_out),\r\n        in: values.in,\r\n        others: values.others,\r\n        personalInfo: values?.personalInfo?.id,\r\n        personalType:values.personalType\r\n    }\r\n\r\n    return array\r\n}\r\n\r\nexport function setSubHospital(values, length) {\r\n    var array = {\r\n        id: values.id === undefined ? length += 1 + \"\" : values.id,\r\n        caseId: values.caseId === undefined ? \"\" : values.caseId,\r\n        name: values.name === undefined ? \"\" : values.name,\r\n        gender: values.gender === undefined ? \"\" : values.gender,\r\n        province: values.province === undefined ? \"\" : values.province,\r\n        district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n        commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n        village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n        status: values.status === undefined ? \"\" : values.status,\r\n        relatedInfo: values.relatedInfo === undefined ? \"\" : values.relatedInfo,\r\n    }\r\n\r\n    return array\r\n}\r\n\r\nexport function setEditSubHospital(values) {\r\n    var array = {\r\n        // id: values.id + \"\",\r\n        date_in: moment(values.date_in),\r\n        date_out: moment(values.date_out),\r\n        in: values.in,\r\n        others: values.others,\r\n        personalInfo: values?.personalInfo?.id,\r\n        personalType:values.personalType\r\n       \r\n    }\r\n\r\n    return array\r\n}\r\n\r\nexport function setHospital(values, length) {\r\n    var array = {\r\n        id: values.id + \"\",\r\n        hospitalName: values.hospitalName === undefined ? \"\" : values.hospitalName,\r\n        place: values.place === undefined ? \"\" : values.place,\r\n        village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n        commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n        district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n        province: values.province === undefined ? \"\" : values.province,\r\n        inCharge: values.inCharge === undefined ? \"\" : values.inCharge,\r\n        tel: values.tel === undefined ? \"\" : values.tel,\r\n        note: values.note === undefined ? \"\" : values.note,\r\n    }\r\n\r\n    return array\r\n}\r\n\r\nexport function setEditHospital(values, length) {\r\n    var array = {\r\n        lat: values.lat,\r\n        capacity: values.capacity,\r\n        createdAt: values.createdAt,\r\n        hospitalName:values.hospitalName,\r\n        long:values.long,\r\n        other:values.other,\r\n        tel:values?.personInCharge?.tel,\r\n        firstName:values?.personInCharge?.firstName, \r\n        lastName:values?.personInCharge?.lastName, \r\n        position:values?.personInCharge?.position, \r\n        others:values?.personInCharge?.others,\r\n        village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n        commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n        district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n        province: values.province === undefined ? \"\" : values.province,\r\n    }\r\n\r\n    return array\r\n}\r\n\r\nexport function setAddQuarantine(values) {\r\n    var array = {\r\n        locationName: values.locationName,\r\n        village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n        commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n        district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n        province: values.province === undefined ? \"\" : values.province,\r\n        long: parseFloat(values.long),\r\n        lat: parseFloat(values.lat),\r\n        other: values.other,\r\n        firstName: values.firstName,\r\n        lastName: values.lastName,\r\n        position: values.position,\r\n        tel: values.tel,\r\n        others: values.others,\r\n    }\r\n    return array\r\n}\r\n\r\nexport function setAddHospital(values) {\r\n    var array = {\r\n        hospitalName: values.hospitalName,\r\n        village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n        commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n        district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n        province: values.province === undefined ? \"\" : values.province,\r\n        long: parseFloat(values.long),\r\n        lat: parseFloat(values.lat),\r\n        other: values.other,\r\n        firstName: values.firstName,\r\n        lastName: values.lastName,\r\n        position: values.position,\r\n        others: values.otehrs,\r\n        tel: values.tel,\r\n\r\n    }\r\n    return array\r\n}\r\n\r\nexport function setAddPeople(values) {\r\n    var array = {\r\n        firstName:values.firstName,\r\n        lastName:values.lastName,\r\n        age:parseInt(values.age),\r\n        gender:values.gender,\r\n        tel:values.tel,\r\n        nationality:values.nationality,\r\n        occupation:values.occupation,\r\n        idCard:values.idCard,\r\n        village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n        commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n        district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n        province: values.province === undefined ? \"\" : values.province,\r\n        case:values.case,\r\n        direct:values.direct,\r\n        other:values.other,\r\n        vaccinated:parseInt(values.vaccinated),\r\n        interviewed: values.interviewed\r\n    }\r\n    return array\r\n}\r\n\r\nexport function setEditPeople(values) {\r\n    var array = {\r\n        firstName:values.firstName,\r\n        lastName:values.lastName,\r\n        age:parseInt(values.age),\r\n        gender:values.gender,\r\n        tel:values.tel,\r\n        nationality:values.nationality,\r\n        occupation:values.occupation,\r\n        idCard:values.idCard,\r\n        village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n        commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n        district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n        province: values.province === undefined ? \"\" : values.province,\r\n        case:values.case,\r\n        other:values.other,\r\n        vaccinated:parseInt(values.vaccinated),\r\n        interviewed: values.interviewed\r\n    }\r\n    return array\r\n}\r\n\r\nexport function setAddSubQuarantine(values){\r\n    var array= {\r\n        date_in: moment(values.date_in).format(),\r\n        date_out: moment(values.date_out).format(),\r\n        others: values.others,\r\n        personalType:values.personalType\r\n    }\r\n    return array;\r\n}\r\n\r\nexport function setEditQuarantine(values){\r\n    var array ={\r\n        lat: values.lat,\r\n        capacity: values.capacity,\r\n        createdAt: values.createdAt,\r\n        locationName:values.locationName,\r\n        long:values.long,\r\n        other:values.other,\r\n        tel:values?.personInCharge?.tel,\r\n        firstName:values?.personInCharge?.firstName, \r\n        lastName:values?.personInCharge?.lastName, \r\n        position:values?.personInCharge?.position, \r\n        others:values?.personInCharge?.others,\r\n        village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n        commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n        district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n        province: values.province === undefined ? \"\" : values.province,\r\n    }\r\n\r\n    return array;\r\n}\r\n\r\nexport function setPeopleLocation(values){\r\n    var array ={\r\n        affectedLocationId: values.affectedLocationId,\r\n        type: values.type   ,\r\n        other: values.other === undefined ? \"\" : values.other,\r\n        date: moment(values.date).format()\r\n    }\r\n\r\n    return array;\r\n}\r\n\r\nexport function setPeopleHospital(values){\r\n    var array ={\r\n        date_in: moment(values.date_in),\r\n        date_out: values.date_out === undefined ? null : moment(values.date_out),\r\n        hospitalInfo: values.hospitalInfo,\r\n        others: values.others\r\n    }\r\n\r\n    return array;\r\n}\r\n","import { setCase, setSubCase } from '../function/set'\r\n\r\nexport function caseReducer(state, action) {\r\n\r\n    let item = [...state]\r\n    let index = item.findIndex(e => e.id === action.payload)\r\n    let index1 = item.findIndex(e => e.id === action.payload.id)\r\n\r\n    switch (action.type) {\r\n        case 'ADD_CASE':\r\n            item.push(setCase(action.payload, item.length))\r\n            return item;\r\n        case 'EDIT_CASE':\r\n            item[index1] = action.payload\r\n\r\n            return item;\r\n        case 'DELETE_CASE':\r\n            item.splice(index, 1)\r\n\r\n            return item;\r\n        case 'ADD_SUB_CASE':\r\n            item.push(setSubCase(action.payload, item.length))\r\n\r\n            return item;\r\n        case 'EDIT_SUB_CASE':\r\n            item[index1] = action.payload\r\n\r\n            return item;\r\n        case 'DELETE_SUB_CASE':\r\n            item.splice(index, 1)\r\n            return item;\r\n\r\n        default:\r\n            throw new Error();\r\n    }\r\n}","import React, {useReducer, createContext} from 'react'\r\nimport { caseReducer } from '../reducer/caseReducer'\r\n\r\nexport const CaseController = createContext()\r\n\r\nexport default function CaseContext(props) {\r\n    const [caseData, caseDataDispatch] = useReducer(caseReducer, [\r\n        {\r\n            id: \"1\",\r\n            caseTitle: \"ផ្សារក្រោម\",\r\n            date: new Date(),\r\n            place: \"តូបអ៊ីលាប\",\r\n            related: 100,\r\n            province: \"សៀមរាប\",\r\n            district: \"សៀមរាប\",\r\n            commune: \"ស្វាយដង្គំ\",\r\n            village: \"ល្វា\",\r\n            remark: \"ដេកពេទ្យ\",\r\n            lat:12.23434,\r\n            long:34.3344,\r\n        },\r\n        {\r\n            id: \"2\",\r\n            caseTitle: \"ផ្សារលើ\",\r\n            date: new Date(),\r\n            place: \"តូបអ៊ីលាប\",\r\n            related: 100,\r\n            province: \"សៀមរាប\",\r\n            district: \"សៀមរាប\",\r\n            commune: \"ស្វាយដង្គំ\",\r\n            village: \"ល្វា\",\r\n            remark: \"ដេកពេទ្យ\",\r\n            lat:12.23434,\r\n            long:34.3344,\r\n        },\r\n    ])\r\n\r\n    const [subCaseData, subCaseDataDispatch] = useReducer(caseReducer, [\r\n        {\r\n            id: \"1\",\r\n            caseId: \"1\",\r\n            name: \"សំបូរ\",\r\n            gender: \"ប្រុស\",\r\n            province: \"សៀមរាប\",\r\n            district: \"សៀមរាប\",\r\n            commune: \"ស្វាយដង្គំ\",\r\n            village: \"ល្វា\",\r\n            status: \"អវិជ្ជមាន\",\r\n            relatedInfo: \"ប្រយោល\"\r\n        },\r\n        {\r\n            id: \"2\",\r\n            caseId: \"2\",\r\n            name: \"សំណាង\",\r\n            gender: \"ប្រុស\",\r\n            province: \"សៀមរាប\",\r\n            district: \"សៀមរាប\",\r\n            commune: \"ស្វាយដង្គំ\",\r\n            village: \"ល្វា\",\r\n            status: \"វិជ្ជមាន\",\r\n            relatedInfo: \"ផ្ទាល់\"\r\n        },\r\n    ])\r\n\r\n    return (\r\n        <CaseController.Provider\r\n            value={{\r\n                caseData,\r\n                subCaseData,\r\n\r\n                caseDataDispatch,\r\n                subCaseDataDispatch,\r\n            }}\r\n        >\r\n            {props.children}\r\n        </CaseController.Provider>\r\n    )\r\n}\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const LOGIN_USER = gql`\r\n  mutation loginUser($username: String!, $password: String!) {\r\n    loginUser(username: $username, password: $password) {\r\n      user {\r\n        id\r\n        email\r\n        username\r\n        lastName\r\n        firstName\r\n        image\r\n        tel\r\n        roles {\r\n          id\r\n          role\r\n        }\r\n        createdAt\r\n        updatedAt\r\n      }\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nexport const IS_LOGGED_IN = gql`\r\n  query IsUserLoggedIn {\r\n    isLoggedIn @client\r\n  }\r\n`;\r\n\r\nexport const REGISTER_USER = gql`\r\nmutation registerUser($username:String!, $password:String!,$firstname:String!,$lastname:String!,$email:String!,$role:String!,$tel:String!){\r\n  registerUser(newUser:{\r\n    username:$username\r\n    password:$password\r\n    firstName:$firstname\r\n    lastName:$lastname\r\n    email:$email\r\n    role:$role\r\n    tel:$tel\r\n  }){\r\n    success\r\n    message\r\n  }\r\n}\r\n\r\n`;\r\n\r\nexport const GET_ALL_USERS = gql `\r\nquery getUserWithPagination($page:Int,$limit:Int,$keyword:String){\r\n  getUserWithPagination(page:$page,limit:$limit,keyword:$keyword){\r\n  \tusers{\r\n      id\r\n      username\r\n      lastName\r\n      firstName\r\n      email\r\n    \troles{\r\n        id\r\n        role\r\n      }\r\n      tel\r\n    }\r\n    paginator{\r\n      slNo\r\n      prev\r\n      next\r\n      perPage\r\n      totalPosts\r\n      totalPages\r\n      currentPage\r\n      hasPrevPage\r\n      hasNextPage\r\n      totalDocs\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nexport const UPDATE_USER_DETAIL = gql`\r\nmutation updateUserDetail($userId:ID!,$firstName:String!,$lastName:String!,$email:String!,$tel:String!){\r\n  updateUserDetail(\r\n    userId:$userId,\r\n    tel:$tel,\r\n    firstName:$firstName,\r\n    lastName:$lastName,\r\n    email:$email\r\n    ){\r\n    success\r\n    message\r\n  }\r\n}\r\n`;\r\n\r\nexport const DELETE_USER = gql`\r\nmutation deleteUser($userId:ID!){\r\n  deleteUser(userId:$userId){\r\n    success\r\n    message\r\n  }\r\n}\r\n`;\r\n\r\nexport const ADD_USER_ROLE = gql`\r\nmutation addRole($userId:ID!,$role:String!){\r\n  addRole(userId:$userId,role:$role){\r\n    success\r\n    message\r\n  }\r\n}\r\n`;\r\n\r\n\r\n","import React, {useReducer, createContext,useState} from 'react'\r\nimport { userReducer } from '../reducer/userReducer'\r\nimport { useQuery } from '@apollo/client'\r\nimport { GET_ALL_USERS } from '../graphql/auth'\r\nimport { setUser } from '../function/set'\r\n\r\nexport const UserController = createContext()\r\n\r\nexport default function UserContext(props) {\r\n    // const [userData, userDataDispatch] = useReducer(userReducer, [\r\n    //     {\r\n    //         id: \"1\",\r\n    //         username: \"user@admin.com\",\r\n    //         role: \"ADMIN\",\r\n    //         tel: \"012457478\" ,\r\n    //         note: \"active\",\r\n           \r\n    //     },\r\n    //     {\r\n    //         id: \"2\",\r\n    //         username: \"user@eka.com\",\r\n    //         role: \"USER\",\r\n    //         tel: \"01548448\" ,\r\n    //         note: \"active\",\r\n    //     },\r\n    // ])\r\n\r\n    const [userData,setUserData] = useState([])\r\n\r\n    const {data, loading,error} = useQuery(GET_ALL_USERS,{variables:{\r\n        page:1,\r\n        limit:2,\r\n        keyword:\"\",\r\n    },onCompleted:({getUserWithPagination})=>{\r\n        // console.log(getUserWithPagination?.users)\r\n        setUserData(getUserWithPagination?.users)\r\n    }})\r\n\r\n\r\n\r\n    return (\r\n        <UserController.Provider\r\n            value={{\r\n                userData,\r\n                //subCaseData,\r\n\r\n                // userDataDispatch,\r\n                //subCaseDataDispatch,\r\n            }}\r\n        >\r\n            {props.children}\r\n        </UserController.Provider>\r\n    )\r\n}\r\n","import { setQuarantine, setSubQuarantine } from '../function/set'\r\n\r\nexport function quarantineReducer(state, action) {\r\n\r\n    let item = [...state]\r\n    let index1 = item.findIndex(e => e.id === action.payload.id)\r\n    let index = item.findIndex(e => e.id === action.payload)\r\n    switch (action.type) {\r\n        case 'ADD_QUARANTINE':\r\n            item.push(setQuarantine(action.payload, item.length))\r\n            return item;\r\n        case 'EDIT_QUARANTINE':\r\n            item[index1] = action.payload\r\n            return item;\r\n        case 'DELETE_QUARANTINE':\r\n            item.splice(index, 1)\r\n            return item;\r\n        case 'ADD_SUB_QUARANTINE':\r\n            item.push(setSubQuarantine(action.payload, item.length))\r\n            return item;\r\n        case 'EDIT_SUB_QUARANTINE':\r\n            item[index1] = action.payload\r\n            return item;\r\n        case 'DELETE_SUB_QUARANTINE':\r\n            item.splice(index, 1)\r\n            return item;\r\n\r\n        default:\r\n            throw new Error();\r\n    }\r\n}","import React, {useReducer, createContext} from 'react'\r\nimport { quarantineReducer } from '../reducer/quarantineReducer'\r\n\r\nexport const QuarantineController = createContext()\r\n\r\nexport default function QuarantineContext(props) {\r\n    const [quarantineData, quarantineDataDispatch] = useReducer(quarantineReducer, [\r\n        {\r\n            id: \"1\",\r\n            quarantineName: \"សាលាគ្រួស\",\r\n            place: \"សាលា\",\r\n            village: \"គ្រួស\" ,\r\n            commune: \"ស្វាយដង្គំ\",\r\n            district:'សៀមរាប',\r\n            province:'សៀមរាប',\r\n            inCharge:'ដឹម ដយ',\r\n            tel:'015487762',\r\n            note:'test',\r\n            long:12.34343,\r\n            lat:3433.34,\r\n            capacity:30,\r\n        },\r\n        {\r\n            id: \"2\",\r\n            quarantineName: \"សាលាសម្ដេចឪ\",\r\n            place: \"សាលា\",\r\n            village: \"គោកដូង\" ,\r\n            commune: \"ទឹកវិល\",\r\n            district:'សៀមរាប',\r\n            province:'សៀមរាប',\r\n            inCharge:'ដា​ ធី',\r\n            tel:'087555999',\r\n            note:'098554477',\r\n            long:12.34343,\r\n            lat:3433.34,\r\n            capacity:30,\r\n        },\r\n    ])\r\n\r\n    const [subQuarantineData, subQuarantineDataDispatch] = useReducer(quarantineReducer, [\r\n        {\r\n            id: \"1\",\r\n            name: \"សំបូរ\",\r\n            gender: \"ប្រុស\",\r\n            province: \"សៀមរាប\",\r\n            district: \"សៀមរាប\",\r\n            commune: \"ស្វាយដង្គំ\",\r\n            village: \"ល្វា\",\r\n            status: \"អវិជ្ជមាន\",\r\n            relatedInfo:'ផ្ទាល់',\r\n        },\r\n        {\r\n            id: \"2\",\r\n            name: \"សំណាង\",\r\n            gender: \"ប្រុស\",\r\n            province: \"សៀមរាប\",\r\n            district: \"សៀមរាប\",\r\n            commune: \"ស្វាយដង្គំ\",\r\n            village: \"ល្វា\",\r\n            status: \"វិជ្ជមាន\",\r\n            relatedInfo:'ប្រយោល',\r\n        },\r\n    ])\r\n\r\n    return (\r\n        <QuarantineController.Provider\r\n            value={{\r\n                quarantineData,\r\n                subQuarantineData,\r\n\r\n                quarantineDataDispatch,\r\n                subQuarantineDataDispatch,\r\n            }}\r\n        >\r\n            {props.children}\r\n        </QuarantineController.Provider>\r\n    )\r\n}\r\n","import { setQuarantine, setSubQuarantine } from '../function/set'\r\n\r\nexport function hospitalReducer(state, action) {\r\n\r\n    let item = [...state]\r\n    let index1 = item.findIndex(e => e.id === action.payload.id)\r\n    let index = item.findIndex(e => e.id === action.payload)\r\n    switch (action.type) {\r\n        case 'ADD_HOSPITAL':\r\n            item.push(setQuarantine(action.payload, item.length))\r\n            return item;\r\n        case 'EDIT_HOSPITAL':\r\n            item[index1] = action.payload\r\n            return item;\r\n        case 'DELETE_HOSPITAL':\r\n            item.splice(index, 1)\r\n            return item;\r\n        case 'ADD_SUB_HOSPITAL':\r\n            item.push(setSubQuarantine(action.payload, item.length))\r\n            return item;\r\n        case 'EDIT_SUB_HOSPITAL':\r\n            item[index1] = action.payload\r\n            return item;\r\n        case 'DELETE_SUB_HOSPITAL':\r\n            item.splice(index, 1)\r\n            return item;\r\n\r\n        default:\r\n            throw new Error();\r\n    }\r\n}","import React, {useReducer, createContext} from 'react'\r\nimport { hospitalReducer } from '../reducer/hospitalReducer'\r\n\r\nexport const HospitalController = createContext()\r\n\r\nexport default function HospitalContext(props) {\r\n    const [hospitalData, hospitalDataDispatch] = useReducer(hospitalReducer, [\r\n        {\r\n            id: \"1\",\r\n            hospitalName: \"ពេទ្យខេត្តសៀមរាប\",\r\n            place: \"សាលា\",\r\n            village: \"គ្រួស\" ,\r\n            commune: \"ស្វាយដង្គំ\",\r\n            district:'សៀមរាប',\r\n            province:'សៀមរាប',\r\n            inCharge:'ដឹម ដយ',\r\n            tel:'015487762',\r\n            note:'test',\r\n            long:12.34343,\r\n            lat:3433.34,\r\n            capacity:30,\r\n        },\r\n        {\r\n            id: \"2\",\r\n            hospitalName: \"ពេទ្យនាគទេព\",\r\n            place: \"សាលា\",\r\n            village: \"គោកដូង\" ,\r\n            commune: \"ទឹកវិល\",\r\n            district:'សៀមរាប',\r\n            province:'សៀមរាប',\r\n            inCharge:'ដា​ ធី',\r\n            tel:'087555999',\r\n            note:'098554477',\r\n            long:12.34343,\r\n            lat:3433.34,\r\n            capacity:30,\r\n        },\r\n    ])\r\n\r\n    const [subHospitalData, subHospitalDataDispatch] = useReducer(hospitalReducer, [\r\n        {\r\n            id: \"1\",\r\n            name: \"សំបូរ\",\r\n            gender: \"ប្រុស\",\r\n            province: \"សៀមរាប\",\r\n            district: \"សៀមរាប\",\r\n            commune: \"ស្វាយដង្គំ\",\r\n            village: \"ល្វា\",\r\n            status: \"អវិជ្ជមាន\",\r\n            relatedInfo:'ផ្ទាល់',\r\n        },\r\n        {\r\n            id: \"2\",\r\n            name: \"សំណាង\",\r\n            gender: \"ប្រុស\",\r\n            province: \"សៀមរាប\",\r\n            district: \"សៀមរាប\",\r\n            commune: \"ស្វាយដង្គំ\",\r\n            village: \"ល្វា\",\r\n            status: \"វិជ្ជមាន\",\r\n            relatedInfo:'ប្រយោល',\r\n        },\r\n    ])\r\n\r\n    return (\r\n        <HospitalController.Provider\r\n            value={{\r\n                hospitalData,\r\n                subHospitalData,\r\n\r\n                hospitalDataDispatch,\r\n                subHospitalDataDispatch,\r\n            }}\r\n        >\r\n            {props.children}\r\n        </HospitalController.Provider>\r\n    )\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport { DateRangePicker } from \"react-date-range\";\r\nimport \"react-date-range/dist/styles.css\"; // main style file\r\nimport \"react-date-range/dist/theme/default.css\";\r\nconst DatePickerTwo = ({ranges, setRange}) => {\r\n \r\n  const handleSelect = (ranges) => {\r\n    \r\n    setRange({\r\n      startDate: ranges.selection.startDate,\r\n      endDate: ranges.selection.endDate,\r\n    });\r\n  };\r\n\r\n  const selectionRange = {\r\n    startDate: ranges.startDate,\r\n    endDate: ranges.endDate,\r\n    key: \"selection\",\r\n  };\r\n\r\n  const ran = {\r\n    startDate: ranges.startDate,\r\n    endDate: ranges.endDate,\r\n  };\r\n\r\n  return (\r\n    <DateRangePicker\r\n      showSelectionPreview={true}\r\n      showDateDisplay={true}\r\n      ranges={[selectionRange]}\r\n      onChange={handleSelect}\r\n      showMonthAndYearPickers={true}\r\n      showSelectionPreview={true}\r\n      showPreview={true}\r\n      editableDateInputs={true}\r\n      // color=\"#721f9c\"\r\n      // rangeColors={[\" #0f0c29\"]}\r\n      preview={ran}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DatePickerTwo;\r\n\r\n// items.save({\r\n//   name: \"example\",\r\n//   created_at: ISODate(\"2010-04-30T00:00:00.000Z\")\r\n// })\r\n// items.find({\r\n//   created_at: {\r\n//       $gte: ISODate(\"2010-04-29T00:00:00.000Z\"),\r\n//       $lt: ISODate(\"2010-05-01T00:00:00.000Z\")\r\n//   }\r\n// })\r\n// => { \"_id\" : ObjectId(\"4c0791e2b9ec877893f3363b\"), \"name\" : \"example\", \"created_at\" : \"Sun May 30 2010 00:00:00 GMT+0300 (EEST)\" }\r\n","import React, { useState, useContext } from 'react'\r\nimport { Row, Col, Typography, DatePicker, Select, List,Button } from 'antd'\r\nimport { DashboardController } from '../context/dashboardContext'\r\nimport DatePickerTwo from '../component/datepickertwo/datePickerTwo'\r\n\r\nconst { Title } = Typography\r\nconst { RangePicker } = DatePicker\r\nconst { Option } = Select;\r\n\r\nexport default function Dashboard() {\r\n    const { dashBoardData, dashboardList } = useContext(DashboardController)\r\n\r\n    const [dataTop, setDataTop] = useState(dashBoardData)\r\n    const [dataTopRight, setDataTopRight] = useState(dashboardList)\r\n    const [displayDate, setDisplayDate] = useState(\"none\")\r\n\r\n    const dataTitle = [\"ចាប់ពី\", \"រហូតដល់\"]\r\n\r\n    const [ranges,setRange] =useState({\r\n        startDate:\"\",\r\n        endDate:\"\"\r\n    })\r\n\r\n\r\n    return (\r\n        <Row>\r\n            <Col\r\n                xs={24}\r\n                md={{ span: 12, offset: 12 }}\r\n            // style={{display:'flex',justifyContent:'flex-end'}}\r\n            >\r\n                <Row>\r\n                    <Col\r\n                        xs={24}\r\n                        md={12}\r\n                        className=\"inCol\"\r\n                    >\r\n                        {/* <RangePicker placeholder={dataTitle} style={{width:\"100%\"}} /> */}\r\n                        <Button style={{color:'#CCC', width: \"100%\"}} onClick={()=> setDisplayDate(displayDate===\"block\" ? \"none\":\"block\")}>ជ្រើសរើសកាលបរិច្ឆេទ</Button>\r\n                        <div style={{position:'absolute',zIndex:99,display:displayDate}}>\r\n                        <DatePickerTwo ranges={ranges} setRange={setRange} />\r\n                        </div>\r\n                    </Col>\r\n                    <Col\r\n                        xs={24}\r\n                        md={12}\r\n                        className=\"inCol\"\r\n                    >\r\n                        <Select\r\n                            showSearch\r\n                            style={{ width: \"100%\" }}\r\n                            placeholder=\"ស្វែងរក...\"\r\n                            optionFilterProp=\"children\"\r\n                            filterOption={(input, option) =>\r\n                                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                            }\r\n                        >\r\n                            <Option value=\"jack\">Jack</Option>\r\n                            <Option value=\"lucy\">Lucy</Option>\r\n                            <Option value=\"tom\">Tom</Option>\r\n                        </Select>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n            <Col\r\n                xs={24}\r\n                md={18}\r\n            >\r\n                <Row>\r\n                    {dataTop.map(load => {\r\n                        return (\r\n                            <Col\r\n                                md={8}\r\n                                xs={12}\r\n                            >\r\n                                <div className=\"dashboard-card\">\r\n                                    <Title level={4}>{load.title}</Title>\r\n                                    <span\r\n                                        className=\"dashboard-card-mid-text\"\r\n                                    >\r\n                                        ថ្ងៃនេះ៖ {load.today}នាក់\r\n                                    </span><br />\r\n                                    <span\r\n                                        className=\"dashboard-card-footer-text\"\r\n                                    >\r\n                                        សរុប៖ {load.total}នាក់\r\n                                    </span>\r\n                                </div>\r\n                            </Col>\r\n                        )\r\n                    })}\r\n                </Row>\r\n                <Row>\r\n                    <Col\r\n                        xs={24}\r\n                    >\r\n                        <p>Map</p>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n            <Col\r\n                xs={24}\r\n                md={6}\r\n            >\r\n                <Row>\r\n                    <Col\r\n                        xs={24}\r\n                    >\r\n                        <div className=\"inCol\">\r\n                            <List\r\n                                header={\r\n                                    <div>ករណីឆ្លងតាមស្រុក</div>\r\n                                }\r\n                                bordered\r\n                                dataSource={dataTopRight}\r\n                                renderItem={item => (\r\n                                    <List.Item style={{backgroundColor:'#FFF'}}>\r\n                                        <span>{item.title}</span>\r\n                                        <span>{item.case}នាក់</span>\r\n                                    </List.Item>\r\n                                )}\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col\r\n                        xs={24}\r\n                    >\r\n                        <p>Statistic</p>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n","import { Space, Tooltip, Popconfirm } from 'antd'\r\nimport {\r\n    EditOutlined,\r\n    DeleteOutlined\r\n} from '@ant-design/icons';\r\nimport moment from 'moment'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const caseCol = ({ handleDelete, limit, page }) => {\r\n    let no = ((page - 1) * limit)\r\n    var array = [\r\n        {\r\n            title: 'ល.រ',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: 50,\r\n            render: (text, record, i) => (\r\n                <Space size=\"middle\">\r\n                {console.log(page)}\r\n                    {no += 1}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'ឈ្មោះករណី',\r\n            dataIndex: 'caseName',\r\n            key: 'caseName',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'កាលបរិច្ឆេទ',\r\n            dataIndex: 'date',\r\n            key: 'date',\r\n            width: 100,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {/* {record.date} */}\r\n                    {moment(record.date).format(\"ថ្ងែDD ខែMM ឆ្នាំYYYY\")}\r\n                </Space>\r\n            ),\r\n        },\r\n\r\n        {\r\n            title: 'ចំនួនអ្នកពាក់ព័ន្ធ',\r\n            dataIndex: 'related',\r\n            key: 'related',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'អាសយដ្ឋាន',\r\n            dataIndex: 'address',\r\n            key: 'address',\r\n            width: 150,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {(record.village !== \"ក្រៅសៀមរាប\") && record.village}\r\n                    {record.commune !== \"ក្រៅសៀមរាប\" && record.commune}\r\n                    {record.district !== \"ក្រៅសៀមរាប\" && record.district}\r\n                    {record.province && record.province}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'ចំណាំ',\r\n            dataIndex: 'other',\r\n            key: 'other',\r\n            width: 150,\r\n        },\r\n        {\r\n            key: 'action',\r\n            dataIndex: 'action',\r\n            fixed: 'right',\r\n            width: 50,\r\n            align: 'center',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    <Link className=\"link\" to={\"/subCase/\" + record.id}><EditOutlined /></Link>\r\n                    <Popconfirm\r\n                        title=\"តើអ្នកពិតចង់លុបមែនឬទេ?\"\r\n                        onConfirm={() => { handleDelete(record.id) }}\r\n                        okText=\"ចង់\"\r\n                        cancelText=\"មិនចង់\"\r\n                    >\r\n                        <span className=\"link\" style={{ color: \"red\" }}><DeleteOutlined /></span>\r\n                    </Popconfirm>\r\n\r\n                </Space>\r\n            ),\r\n        }\r\n    ]\r\n    return array\r\n}","import React from 'react'\r\nimport { Select } from 'antd'\r\n\r\nconst { Option } = Select;\r\n\r\nexport function ListSelect({ type, data, title, value, setValue, id, disabled }) {\r\n    return (\r\n        type === 0 ? (\r\n            <Select\r\n                showSearch\r\n                style={{ width: \"100%\" }}\r\n                placeholder={title}\r\n                value={value}\r\n                onChange={e => setValue(e)}\r\n                disabled={disabled}\r\n                optionFilterProp=\"children\"\r\n                filterOption={(input, option) =>\r\n                    option.children.indexOf(input) >= 0\r\n                }\r\n                filterSort={(optionA, optionB) =>\r\n                    optionA.children.localeCompare(optionB.children)\r\n                }\r\n            >\r\n                {data.map(load => {\r\n                    return <Option value={load.title} key={load.id}>{load.title}</Option>\r\n                })}\r\n            </Select>\r\n        ) : (\r\n\r\n            type === 1 ? (\r\n                <Select\r\n                    showSearch\r\n                    style={{ width: \"100%\" }}\r\n                    placeholder={title}\r\n                    value={value}\r\n                    onChange={e => setValue(e)}\r\n                    disabled={disabled}\r\n                    optionFilterProp=\"children\"\r\n                    filterOption={(input, option) =>\r\n                        option.children.indexOf(input) >= 0\r\n                    }\r\n                    filterSort={(optionA, optionB) =>\r\n                        optionA.children.localeCompare(optionB.children)\r\n                    }\r\n                >\r\n                    {data.map(load => {\r\n                        return <Option value={load.title} key={load.title}>{load.title}</Option>\r\n                    })}\r\n                </Select>\r\n            ) : (\r\n\r\n                type === 2 ? (\r\n                    <Select\r\n                        showSearch\r\n                        style={{ width: \"100%\" }}\r\n                        placeholder={title}\r\n                        value={value}\r\n                        onChange={e => setValue(e)}\r\n                        disabled={disabled}\r\n                        optionFilterProp=\"children\"\r\n                        filterOption={(input, option) =>\r\n                            option.children.indexOf(input) >= 0\r\n                        }\r\n                        filterSort={(optionA, optionB) =>\r\n                            optionA.children.localeCompare(optionB.children)\r\n                        }\r\n                    >\r\n                        {data.map(load => {\r\n                            return <Option value={load.id} key={load.id}>{load.lastName} {load.firstName}</Option>\r\n                        })}\r\n                    </Select>\r\n                ) : (\r\n\r\n                    type === 3 ? (\r\n                        <Select\r\n                            showSearch\r\n                            style={{ width: \"100%\" }}\r\n                            placeholder={title}\r\n                            value={value}\r\n                            onChange={e => setValue(e)}\r\n                            disabled={disabled}\r\n                            optionFilterProp=\"children\"\r\n                            filterOption={(input, option) =>\r\n                                option.children.indexOf(input) >= 0\r\n                            }\r\n                            filterSort={(optionA, optionB) =>\r\n                                optionA.children.localeCompare(optionB.children)\r\n                            }\r\n                        >\r\n                            {data.map(load => {\r\n                                return <Option value={load.id} key={load.id}>{load.caseName}</Option>\r\n                            })}\r\n                        </Select>\r\n                    ) :\r\n                        type === 4 ? (\r\n                            <Select\r\n                                showSearch\r\n                                style={{ width: \"100%\" }}\r\n                                placeholder={title}\r\n                                value={value}\r\n                                onChange={e => setValue(e)}\r\n                                disabled={disabled}\r\n                                optionFilterProp=\"children\"\r\n                                filterOption={(input, option) =>\r\n                                    option.children.indexOf(input) >= 0\r\n                                }\r\n                                filterSort={(optionA, optionB) =>\r\n                                    optionA.children.localeCompare(optionB.children)\r\n                                }\r\n                            >\r\n                                <Option value=\"new\" key=\"new\">បញ្ចូលថ្មី</Option>\r\n                                {data.map(load => {\r\n                                    return <Option value={load.id} key={load.id}>{load.caseName}</Option>\r\n                                })}\r\n                            </Select>\r\n                        ) :\r\n                            type === 5 ? (\r\n                                <Select\r\n                                    showSearch\r\n                                    style={{ width: \"100%\" }}\r\n                                    placeholder={title}\r\n                                    value={value}\r\n                                    onChange={e => setValue(e)}\r\n                                    disabled={disabled}\r\n                                    optionFilterProp=\"children\"\r\n                                    filterOption={(input, option) =>\r\n                                        option.children.indexOf(input) >= 0\r\n                                    }\r\n                                    filterSort={(optionA, optionB) =>\r\n                                        optionA.children.localeCompare(optionB.children)\r\n                                    }\r\n                                >\r\n                                    <Option value=\"new\" key=\"new\">បញ្ចូលថ្មី</Option>\r\n                                    {data.map(load => {\r\n                                        return <Option value={load.id} key={load.id}>{load.affectedLocationName}</Option>\r\n                                    })}\r\n                                </Select>\r\n                            ) : (\r\n                                <Select\r\n                                    showSearch\r\n                                    style={{ width: \"100%\" }}\r\n                                    placeholder={title}\r\n                                    value={value}\r\n                                    onChange={e => setValue(e)}\r\n                                    disabled={disabled}\r\n                                    optionFilterProp=\"children\"\r\n                                    filterOption={(input, option) =>\r\n                                        option.children.indexOf(input) >= 0\r\n                                    }\r\n                                    filterSort={(optionA, optionB) =>\r\n                                        optionA.children.localeCompare(optionB.children)\r\n                                    }\r\n                                >\r\n                                    <Option value=\"new\" key=\"new\">បញ្ចូលថ្មី</Option>\r\n                                    {data.map(load => {\r\n                                        return <Option value={load.id} key={load.id}>{load.title}</Option>\r\n                                    })}\r\n                                </Select>\r\n                            )\r\n                )\r\n            )\r\n\r\n        )\r\n\r\n    )\r\n}\r\n\r\nexport function ListUserSelect({ type, data, title, value, setValue, id, disabled }) {\r\n    return (\r\n        type === 0 ? (\r\n            <Select\r\n                showSearch\r\n                style={{ width: \"100%\" }}\r\n                placeholder={title}\r\n                value={value}\r\n                disabled={disabled}\r\n                optionFilterProp=\"children\"\r\n                onChange={(e) => setValue(e)}\r\n                filterOption={(input, option) =>\r\n                    option.children.indexOf(input) >= 0\r\n                }\r\n                filterSort={(optionA, optionB) =>\r\n                    optionA.children.localeCompare(optionB.children)\r\n                }\r\n            >\r\n                <Option key={0} value=\"New\">បញ្ចូលថ្មី</Option>\r\n                {data.map(load => {\r\n                    return (\r\n                        <Option value={load.id} key={load.id}>{load.idCard + \" \" + load.firstName + \" \" + load.lastName + \" (\" + load.gender + \") \" + load.tel}</Option>\r\n                    )\r\n                })}\r\n            </Select>\r\n        ) : (\r\n            <Select\r\n                showSearch\r\n                style={{ width: \"100%\" }}\r\n                placeholder={title}\r\n                value={value}\r\n                disabled={disabled}\r\n                optionFilterProp=\"children\"\r\n                onChange={(e) => setValue(e)}\r\n                filterOption={(input, option) =>\r\n                    option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                }\r\n                filterSort={(optionA, optionB) =>\r\n                    optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\r\n                }\r\n            >\r\n                <Option key={0} value=\"New\">New</Option>\r\n                {data.map(load => {\r\n                    return (\r\n                        <Option value={load.id} key={load.id}>{load.id + \" \" + load.name + \" (\" + load.gender + \")\"}</Option>\r\n                    )\r\n                })}\r\n            </Select>\r\n        )\r\n    )\r\n}","import {gql} from '@apollo/client'\r\n\r\n\r\n\r\nexport const GET_ALL_CASES = gql`\r\nquery getCaseWithPagination($page:Int!, $limit:Int!, $keyword:String){\r\n    getCaseWithPagination(page:$page,limit:$limit,keyword:$keyword){\r\n      cases{\r\n        id\r\n        caseName\r\n        village\r\n        commune\r\n        district\r\n        province\r\n        date\r\n        createdAt\r\n        updatedAt\r\n        long\r\n        lat\r\n        other\r\n      },\r\n      paginator{\r\n        slNo\r\n        prev\r\n        next\r\n        perPage\r\n        totalPosts\r\n        totalPages\r\n        currentPage\r\n        hasPrevPage\r\n        hasNextPage\r\n        totalDocs\r\n      }\r\n    }\r\n  }\r\n\r\n`\r\n\r\nexport const CREATE_NEW_CASE = gql`\r\nmutation createCase($caseName:String,$village:String,$commune:String,$district:String,$province:String,$date:DateTime,$lat:Float,$long:Float,$other:String){\r\n    createCase(newCase:{\r\n      caseName:$caseName\r\n      village:$village\r\n      commune:$commune\r\n      district:$district\r\n      province:$province\r\n      date:$date\r\n        lat:$lat\r\n      long:$long\r\n      other:$other\r\n    }){\r\n      success\r\n      message\r\n      case{\r\n        id\r\n        caseName\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_ALL_CASES_NO_LIMIT = gql`\r\nquery allCases{\r\n  allCases{\r\n    id\r\n    caseName\r\n  }\r\n}\r\n`;\r\n\r\nexport const GET_PERSON_BY_CASE = gql`\r\nquery getPersonalInfoByCaseWithPagination($page:Int!,$limit:Int!,$keyword:String,$caseId:ID!){\r\n  getPersonalInfoByCaseWithPagination(page:$page,limit:$limit,keyword:$keyword,caseId:$caseId){\r\n    personalInfos{\r\n      id\r\n      firstName\r\n      lastName\r\n      gender\r\n      village\r\n      district\r\n      commune\r\n      province\r\n      direct\r\n      currentState{\r\n        confirm\r\n        death\r\n        recovered\r\n      }\r\n    }\r\n    paginator{\r\n      slNo\r\n      prev\r\n      next\r\n      perPage\r\n      totalPosts\r\n      totalPages\r\n      currentPage\r\n      hasPrevPage\r\n      hasNextPage\r\n      totalDocs\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nexport const GET_CASE_BY_ID = gql`\r\nquery getCaseById($id:ID!){\r\n\tgetCaseById(id:$id){\r\n    id\r\n    caseName\r\n    village\r\n    commune\r\n    district\r\n    province\r\n    other\r\n    date\r\n    long\r\n    lat\r\n    createdAt\r\n    updatedAt\r\n  }\r\n}\r\n`;\r\n\r\nexport const UPDATE_CASE_BY_ID = gql`\r\nmutation updateCase(\r\n  $caseName:String,\r\n  $village:String,\r\n  $commune:String,\r\n  $district:String,\r\n  $province:String,\r\n  $date:DateTime,\r\n  $long:Float,\r\n  $lat:Float,\r\n  $other:String,\r\n  $id:ID!\r\n){\r\n  updateCase(updatedCase:{\r\n    caseName:$caseName\r\n    village:$village\r\n    commune:$commune\r\n    district:$district\r\n    province:$province\r\n    date:$date\r\n    long:$long\r\n    lat:$lat\r\n    other:$other\r\n  },id:$id){\r\n    success\r\n    message\r\n  }\r\n}\r\n`;\r\n\r\nexport const DELETE_CASE_BY_ID = gql`\r\nmutation deleteCase($id:ID!){\r\n  deleteCase(id:$id){\r\n    success\r\n    message\r\n  }\r\n}\r\n`;\r\n","import React, { useContext, useState } from 'react'\r\nimport { Modal, Form, Input, DatePicker, Row, Col, Button, message } from 'antd'\r\nimport { CaseController } from '../../../context/caseContext'\r\nimport { provinceData, districtData, communeData, villageData, genderData } from '../../../context/headerContext'\r\nimport { ListSelect } from '../../../static/own-comp'\r\nimport { convertToCommune, convertToDistrict, convertToVillage } from '../../../function/fn'\r\nimport { CREATE_NEW_CASE } from '../../../graphql/case'\r\nimport { useMutation } from '@apollo/client'\r\nimport moment from 'moment'\r\n\r\nexport default function AddCase({ open, setOpen, setRefetch, caseId, setCaseId }) {\r\n    //const { caseDataDispatch } = useContext(CaseController)\r\n    const [createCase, { loading, error }] = useMutation(CREATE_NEW_CASE, {\r\n        onCompleted: ({ createCase }) => {\r\n            console.log(\"tset\", createCase)\r\n            message.success(\"បញ្ចូលទិន្នន័យជោគជ័យ\")\r\n            if (caseId === \"new\") {\r\n                setCaseId(createCase.case)\r\n            } else {\r\n                setRefetch()\r\n            }\r\n        },\r\n        onError: (error) => {\r\n            console.log(error.message)\r\n        },\r\n        // refetchQueries:\r\n    })\r\n\r\n\r\n    const [province, setProvince] = useState(\"\")\r\n    const [district, setDistrict] = useState(\"\")\r\n    const [commune, setCommune] = useState(\"\")\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const onFinish = (values) => {\r\n        // console.log('Success:', values);\r\n\r\n        createCase({\r\n            variables: {\r\n                caseName: values.caseName,\r\n                village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n                commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n                district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n                province: values.province === undefined ? \"ក្រៅសៀមរាប\" : values.province,\r\n                date: moment(values.date).format(),\r\n                lat: parseFloat(values.lat),\r\n                long: parseFloat(values.long),\r\n                other: values.other,\r\n            }\r\n        })\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const setToProviceFn = (e) => {\r\n        form.setFieldsValue({\r\n            province: e,\r\n            district: null,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setProvince(e)\r\n        setDistrict(\"\")\r\n        setCommune(\"\")\r\n    };\r\n\r\n\r\n    const setToDistrictFn = (e) => {\r\n        form.setFieldsValue({\r\n            district: e,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setDistrict(e)\r\n        setCommune(\"\")\r\n    };\r\n\r\n    const setToCommuneFn = (e) => {\r\n        form.setFieldsValue({\r\n            commune: e,\r\n            village: null,\r\n        });\r\n\r\n        setCommune(e)\r\n    };\r\n\r\n    const setToVillageFn = (e) => {\r\n        form.setFieldsValue({\r\n            village: e\r\n        });\r\n    };\r\n\r\n    const setPeopleCaseFn = () => {\r\n        setOpen(false)\r\n        setCaseId(\"\")\r\n        console.log(caseId)\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            title=\"បញ្ចូលករណីថ្មី\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => caseId === \"new\" ? setPeopleCaseFn() : setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"addCase\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"caseName\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"ឈ្មោះករណី\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"date\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <DatePicker placeholder=\"កាលបរិច្ឆេទ\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={province !== \"សៀមរាប\" ? { span: 24 } : { span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"province\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <ListSelect type={1} data={provinceData} title=\"ខេត្ត/ក្រុង\" setValue={setToProviceFn} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {province === \"សៀមរាប\" ? (\r\n                        <>\r\n                            <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                                <Form.Item\r\n                                    name=\"district\"\r\n                                    rules={[{ required: true, message: 'Please input your username!' }]}\r\n                                >\r\n                                    <ListSelect type={0} data={convertToDistrict(districtData)} title=\"ស្រុក/ខណ្ឌ\" setValue={setToDistrictFn} disabled={province !== \"សៀមរាប\" ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 11 }}>\r\n                                <Form.Item\r\n                                    name=\"commune\"\r\n                                    rules={[{ required: true, message: 'Please input your username!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToCommune(district, communeData)} title=\"ឃុំ/សង្កាត់\" setValue={setToCommuneFn} disabled={district === \"\" || district === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                                <Form.Item\r\n                                    name=\"village\"\r\n                                    rules={[{ required: true, message: 'Please input your username!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToVillage(commune, villageData)} title=\"ភូមិ\" setValue={setToVillageFn} disabled={commune === \"\" || commune === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </>\r\n                    ) : null}\r\n\r\n\r\n\r\n                    <Col xs={24}>\r\n                        <Form.Item\r\n                            name=\"other\"\r\n                        >\r\n                            <Input placeholder=\"ចំណាំ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"long\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input type=\"number\" placeholder=\"longtitude\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"lat\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input type=\"number\" placeholder=\"latitude\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useContext, useState, useEffect } from 'react'\r\nimport { Row, Col, Button, Input, Table, message } from 'antd'\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { caseCol } from '../component/case/tableColumn/caseColumn'\r\nimport { CaseController } from '../context/caseContext'\r\nimport AddCase from '../component/case/modal/addCase';\r\nimport { useQuery, useMutation } from '@apollo/client';\r\nimport { GET_ALL_CASES, DELETE_CASE_BY_ID } from '../graphql/case'\r\n\r\nexport default function Case() {\r\n    //const {caseData, caseDataDispatch} = useContext(CaseController)\r\n    const [caseData, setCaseData] = useState([])\r\n    const [openAdd, setOpenAdd] = useState(false)\r\n\r\n    const [page, setPage] = useState(1)\r\n    const [limit, setLimit] = useState(15)\r\n    const [keyword, setKeyword] = useState(\"\")\r\n\r\n    const { data, loading, error, refetch} = useQuery(GET_ALL_CASES, {\r\n        variables: {\r\n            page: page,\r\n            limit: limit,\r\n            keyword: keyword,\r\n        }, onCompleted: ({ getCaseWithPagination }) => {\r\n            // console.log(\"casePage\",getCaseWithPagination)\r\n            // setCaseData(getCaseWithPagination)\r\n        },\r\n        fetchPolicy:\"network-only\"\r\n    })\r\n\r\n    const [deleteCase, { loading: deleteLoading }] = useMutation(DELETE_CASE_BY_ID, {\r\n        onCompleted: () => {\r\n            refetch()\r\n            message.success(\"លុបទិន្នន័យជោគជ័យ\")\r\n        }\r\n    })\r\n\r\n    useEffect(()=>{\r\n        if(data){\r\n            setCaseData(data?.getCaseWithPagination)\r\n        }\r\n    },[data])\r\n\r\n    useEffect(() => {\r\n        refetch()\r\n    }, [page, limit, keyword])\r\n\r\n    const callRefetch = ()=>{\r\n        console.log(\"ref\")\r\n        refetch()\r\n    }\r\n\r\n    const handleDelete = (e) => {\r\n        //caseDataDispatch({type: \"DELETE_CASE\", payload: e})\r\n        \r\n        deleteCase({\r\n            variables: {\r\n                id: e\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <AddCase open={openAdd} refetch={refetch} setOpen={setOpenAdd} />\r\n            <Col\r\n                xs={8}\r\n                md={18}\r\n            >\r\n                <Button\r\n                    type=\"primary\"\r\n                    onClick={() => setOpenAdd(true)}\r\n                >\r\n                    បញ្ចូលករណី\r\n                    <PlusOutlined />\r\n                </Button>\r\n            </Col>\r\n            <Col\r\n                xs={16}\r\n                md={6}\r\n            >\r\n                <Input.Search\r\n                    onChange={(e) => setKeyword(e.target.value)}\r\n                    placeholder=\"ស្វែងរក...\"\r\n                />\r\n            </Col>\r\n            <Col\r\n                xs={24}\r\n                style={{ marginTop: 20 }}\r\n            >\r\n                <Table\r\n                    className=\"table-go-list\"\r\n                    columns={caseCol({ handleDelete, limit, page })}\r\n                    dataSource={caseData?.cases}\r\n                    rowKey={record => record.id}\r\n                    pagination={{\r\n                        total: caseData?.paginator?.totalDocs,\r\n                        // showSizeChanger: true,\r\n                        onChange: ((page, pageSize) => { setPage(page); setLimit(pageSize) })\r\n                    }}\r\n                    scroll={{ x: 1500 }}\r\n                    sticky\r\n                />\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n","import { Space, Popconfirm } from 'antd'\r\nimport {\r\n    EditOutlined,\r\n    DeleteOutlined,\r\n    EyeOutlined\r\n} from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const subCaseCol = ({handleDelete, handleEditSubCase}) => {\r\n    var array = [\r\n        {\r\n            title: 'ល.រ',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: 20,\r\n            render: (text, record, i) => (\r\n                <Space size=\"middle\">\r\n                    {i += 1}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'ឈ្មោះ',\r\n            dataIndex: 'personalInfos',\r\n            key: 'personalInfos',\r\n            width: 50,\r\n            render: (text, record) => (\r\n                <span size=\"middle\">\r\n                    {\r\n                        record.lastName+\" \"+record.firstName\r\n                    }\r\n                </span>\r\n            ),\r\n        },\r\n        {\r\n            title: 'ភេទ',\r\n            dataIndex: 'gender',\r\n            key: 'gender',\r\n            width: 20,\r\n            // render: (text, record) => (\r\n            //     <Space size=\"middle\">\r\n            //         {moment(record.date).format(\"ថ្ងែDD ខែMM ឆ្នាំYYYY\")}\r\n            //     </Space>\r\n            // ),\r\n        },\r\n\r\n        {\r\n            title: 'អាសយដ្ឋាន',\r\n            dataIndex: 'address',\r\n            key: 'address',\r\n            width: 100,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {record.village + \",\" + record.commune + \",\" + record.district + \",\" + record.province}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'ស្ថានភាព',\r\n            dataIndex: 'personalInfos',\r\n            key: 'personalInfos',\r\n            width: 50,\r\n            render: (text, record) => (\r\n                <span size=\"middle\">\r\n                    {\r\n                        // console.log(record.currentState.confirm)\r\n                        record.currentState.confirm ? \"វិជ្ជមាន\" : \"អវិជ្ជមាន\"\r\n                    }\r\n                </span>\r\n            ),\r\n        },\r\n        {\r\n            title: 'លក្ខណៈពាក់ព័ន្ធ',\r\n            dataIndex: 'direct',\r\n            key: 'direct',\r\n            width: 50,\r\n            render: (text, record) => (\r\n                <span size=\"middle\">\r\n                    {\r\n                        // console.log(record.currentState.confirm)\r\n                        record ? \"ផ្ទាល់\" : \"ប្រយោល\"\r\n                    }\r\n                </span>\r\n            ),\r\n        },\r\n        {\r\n            key: 'action',\r\n            dataIndex: 'action',\r\n            fixed: 'right',\r\n            width: 20,\r\n            align: 'center',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {/* <span className=\"link\" onClick={() => handleEditSubCase(record)}><EditOutlined /></span> */}\r\n                    <Link className=\"link\" to={\"/subPeople/\" + record.id}><EyeOutlined /></Link>\r\n                    <Popconfirm\r\n                        title=\"តើអ្នកពិតចង់លុបមែនឬទេ?\"\r\n                        onConfirm={() => {handleDelete(record.id) }}\r\n                        okText=\"ចង់\"\r\n                        cancelText=\"មិនចង់\"\r\n                    >\r\n                        <span className=\"link\" style={{ color: \"red\" }}><DeleteOutlined /></span>\r\n                    </Popconfirm>\r\n\r\n                </Space>\r\n            ),\r\n        }\r\n    ]\r\n    return array\r\n}","import React, {useContext, useEffect,useState} from 'react'\r\nimport { Modal, Form, Input, DatePicker, Row, Col, Button, message } from 'antd'\r\nimport {setEditCase} from '../../../function/set'\r\nimport { provinceData, districtData, communeData, villageData, genderData } from '../../../context/headerContext'\r\nimport { ListSelect } from '../../../static/own-comp'\r\nimport { convertToCommune, convertToDistrict, convertToVillage } from '../../../function/fn'\r\nimport { useMutation } from '@apollo/client'\r\nimport { UPDATE_CASE_BY_ID } from '../../../graphql/case'\r\n\r\nexport default function EditCase({ open, setOpen, data, caseId,setRetetch}) {\r\n\r\n    const [province, setProvince] = useState(\"\")\r\n    const [district, setDistrict] = useState(\"\")\r\n    const [commune, setCommune] = useState(\"\")\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const [updateCase,{loading}] = useMutation(UPDATE_CASE_BY_ID,{\r\n        onCompleted:()=>{\r\n            setRetetch()\r\n            message.success(\"កែប្រែទិន្នន័យជោគជ័យ\")\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (data !== undefined){\r\n            form.setFieldsValue(setEditCase(data))\r\n            setProvince(data.province)\r\n            setDistrict(data.district)\r\n            setCommune(data.commune)\r\n        }\r\n\r\n    }, [data])\r\n\r\n    const onFinish = (values) => {\r\n\r\n        updateCase({\r\n            variables:{\r\n                caseName:values.caseName,\r\n                village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n                commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n                district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n                province: values.province === undefined ? \"\" : values.province,\r\n                date:values.date,\r\n                long:values.long,\r\n                lat:values.lat,\r\n                other:values.other,\r\n                id:caseId\r\n            }\r\n        })\r\n\r\n        // caseDataDispatch({type: 'EDIT_CASE', payload: {...values, id: data.id}})\r\n        // setData({...values, id: data.id})\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const setToProviceFn = (e) => {\r\n        form.setFieldsValue({\r\n            province: e,\r\n            district: null,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setProvince(e)\r\n        setDistrict(\"\")\r\n        setCommune(\"\")\r\n    };\r\n\r\n\r\n    const setToDistrictFn = (e) => {\r\n        form.setFieldsValue({\r\n            district: e,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setDistrict(e)\r\n        setCommune(\"\")\r\n    };\r\n\r\n    const setToCommuneFn = (e) => {\r\n        form.setFieldsValue({\r\n            commune: e,\r\n            village: null,\r\n        });\r\n\r\n        setCommune(e)\r\n    };\r\n\r\n    const setToVillageFn = (e) => {\r\n        form.setFieldsValue({\r\n            village: e\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            title=\"កែប្រែករណី\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n            destroyOnClose={false} \r\n            getContainer={false}\r\n            forceRender\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"editCase\"\r\n                initialValues={setEditCase(data)}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{span:11}}>\r\n                        <Form.Item\r\n                            name=\"caseName\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"ឈ្មោះករណី\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{span:11, offset: 2}}>\r\n                        <Form.Item\r\n                            name=\"date\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <DatePicker placeholder=\"កាលបរិច្ឆេទ\" style={{width: \"100%\"}} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"province\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <ListSelect type={1} data={provinceData} title=\"ខេត្ត/ក្រុង\" setValue={setToProviceFn} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {province === \"សៀមរាប\" ? (\r\n                        <>\r\n                            <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                                <Form.Item\r\n                                    name=\"district\"\r\n                                    rules={[{ required: true, message: 'Please input your username!' }]}\r\n                                >\r\n                                    <ListSelect type={0} data={convertToDistrict(districtData)} title=\"ស្រុក/ខណ្ឌ\" setValue={setToDistrictFn} disabled={province !== \"សៀមរាប\" ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 11 }}>\r\n                                <Form.Item\r\n                                    name=\"commune\"\r\n                                    rules={[{ required: true, message: 'Please input your username!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToCommune(district, communeData)} title=\"ឃុំ/សង្កាត់\" setValue={setToCommuneFn} disabled={district === \"\" || district === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                                <Form.Item\r\n                                    name=\"village\"\r\n                                    rules={[{ required: true, message: 'Please input your username!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToVillage(commune, villageData)} title=\"ភូមិ\" setValue={setToVillageFn} disabled={commune === \"\" || commune === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </>\r\n                    ) : null}\r\n\r\n                    <Col xs={24}>\r\n                        <Form.Item\r\n                            name=\"other\"\r\n                            \r\n                        >\r\n                            <Input placeholder=\"ចំណាំ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"long\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input type={1} placeholder=\"longtitude\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 , offset:2}}>\r\n                        <Form.Item\r\n                            name=\"lat\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input type={1} placeholder=\"latitude\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button \r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{width: \"100%\"}}\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import { Col, Row, Typography, Table } from 'antd'\r\nimport React, { useState, useContext, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport moment from 'moment'\r\nimport { subCaseCol } from './tableColumn/subCaseColumn'\r\nimport { EditOutlined } from '@ant-design/icons';\r\nimport EditCase from './modal/editCase'\r\nimport { getRelated } from '../../function/fn'\r\nimport { useMutation, useQuery } from '@apollo/client'\r\nimport { GET_PERSON_BY_CASE } from '../../graphql/case'\r\nimport { GET_CASE_BY_ID } from '../../graphql/case'\r\n\r\nconst { Title } = Typography\r\n\r\nexport default function SubCase() {\r\n    // const { subCaseData, subCaseDataDispatch } = useContext(CaseController)\r\n\r\n    let { id } = useParams();\r\n\r\n    const [subCaseData, setSubCaseData] = useState([])\r\n    const [openEdit, setOpenEdit] = useState(false)\r\n    // const [openAddSub, setOpenAddSub] = useState(false)\r\n    // const [openEditSub, setOpenEditSub] = useState(false)\r\n    const [caseData, setCaseData] = useState({})\r\n\r\n    const [page, setPage] = useState(1)\r\n    const [limit, setLimit] = useState(10)\r\n    const [keyword, setKeyword] = useState(\"\")\r\n\r\n    const { data, refetch } = useQuery(GET_PERSON_BY_CASE, {\r\n        variables: {\r\n            page: page,\r\n            limit: limit,\r\n            keyword: keyword,\r\n            caseId: id\r\n        },\r\n        onCompleted: ({ getPersonalInfoByCaseWithPagination }) => {\r\n            setSubCaseData(getPersonalInfoByCaseWithPagination)\r\n        },\r\n        fetchPolicy: 'network-only'\r\n    })\r\n\r\n    useEffect(()=>{\r\n        if(data){\r\n            setSubCaseData(data?.getPersonalInfoByCaseWithPagination)\r\n        }\r\n    },[data])\r\n\r\n    const { data: dataCase , refetch:refetchCase} = useQuery(GET_CASE_BY_ID, {\r\n        variables: {\r\n            id: id\r\n        },\r\n        onCompleted: ({ getCaseById }) => {\r\n            setCaseData(getCaseById)\r\n        }\r\n    })\r\n\r\n    useEffect(()=>{\r\n        if(dataCase){\r\n            setCaseData(dataCase?.getCaseById)\r\n        }\r\n    },[dataCase])\r\n\r\n    useEffect(() => {\r\n        refetch()\r\n    }, [page, limit, keyword])\r\n\r\n    // console.log(headerData)\r\n    const handleDelete = (e) => {\r\n        // subCaseDataDispatch({type: \"DELETE_SUB_CASE\", payload: e})\r\n    }\r\n\r\n    const handleEditSubCase = (e) => {\r\n        // setUpdateSubData(e)\r\n        // setOpenEditSub(true)\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <EditCase open={openEdit} setOpen={setOpenEdit} data={caseData} caseId={id} setRetetch={refetchCase} />\r\n            <Col\r\n                xs={24}\r\n            >\r\n\r\n            </Col>\r\n            <Col\r\n                xs={24}\r\n                md={11}\r\n                className=\"subCase-card\"\r\n            >\r\n                <table>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td style={{ width: 150 }}>\r\n                                <Title level={5}>ឈ្មោះករណី\r\n                                </Title>\r\n                            </td>\r\n                            <td style={{ width: '50%' }}>\r\n                                <Title level={5}>៖ {caseData?.caseName + \" \"}\r\n                                    <EditOutlined className=\"link\" onClick={() => setOpenEdit(true)} />\r\n                                </Title>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td style={{ width: '50%' }}><p>កាលបរិច្ឆេទ</p></td>\r\n                            <td style={{ width: '50%' }}><p>៖ {moment(caseData?.date).format(\"ថ្ងែDD ខែMM ឆ្នាំYYYY\")}</p></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>អាសយដ្ឋាន</td>\r\n                            <td> <p>៖ {\" \"}\r\n                                {caseData?.village !== \"ក្រៅសៀមរាប\" && caseData?.village + \",\"}\r\n                                {caseData?.commune !== \"ក្រៅសៀមរាប\" && caseData?.commune + \",\"}\r\n                                {caseData?.district !== \"ក្រៅសៀមរាប\" && caseData?.district + \",\"}\r\n                                {caseData?.province}</p></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><p>ចំនួនអ្នកពាក់ព័ន្ធករណី</p></td>\r\n                            <td><p>៖ {subCaseData?.personalInfos?.length}</p></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><p>ផ្សេងៗ</p></td>\r\n                            <td><p>៖ {caseData?.other}</p></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n\r\n\r\n\r\n\r\n\r\n            </Col>\r\n            <Col\r\n                xs={24}\r\n                md={{ span: 11, offset: 2 }}\r\n                className=\"subCase-card\"\r\n            >\r\n                <table>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td style={{ width: '50%' }}><p>ចំនួនអ្នកពាក់ព័ន្ធផ្ទាល់</p></td>\r\n                            <td style={{ width: '50%' }}><p>៖ {getRelated(subCaseData?.personalInfos, true)}នាក់</p></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><p>ចំនួនអ្នកពាក់ព័ន្ធប្រយោល</p></td>\r\n                            <td><p>៖ {getRelated(subCaseData?.personalInfos, false)}នាក់</p></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n\r\n                {/* <p>ចំនួនអ្នកជាសះស្បើយ៖ {getRelated(subCaseData, \"សះស្បើយ\")}នាក់</p>\r\n                <p>ចំនួនអ្នកស្លាប់៖ {getRelated(subCaseData, \"ស្លាប់\")}នាក់</p> */}\r\n            </Col>\r\n\r\n\r\n            <Col\r\n                xs={24}\r\n                style={{ marginTop: 20 }}\r\n            >\r\n                <Title level={5}>\r\n                    អ្នកពាក់ព័ន្ធ៖\r\n                    {/* <PlusCircleOutlined className=\"link\" onClick={() => setOpenAddSub(true)}/> */}\r\n                </Title>\r\n\r\n            </Col>\r\n            <Col\r\n                xs={24}\r\n                md={24}\r\n            >\r\n                <Table\r\n                    columns={subCaseCol({ handleDelete, handleEditSubCase })}\r\n                    dataSource={subCaseData?.personalInfos}\r\n                    rowKey={record => record.id}\r\n                    pagination={{\r\n                        total: subCaseData?.paginator?.totalDocs,\r\n                        // showSizeChanger: true,\r\n                        onChange: ((page, pageSize) => { setPage(page); setLimit(pageSize) })\r\n                    }}\r\n                    scroll={{ x: 240 }}\r\n                    sticky\r\n                />\r\n            </Col>\r\n        </Row>\r\n\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Space, Popconfirm } from 'antd'\r\nimport {\r\n    EditOutlined,\r\n    DeleteOutlined,\r\n    KeyOutlined\r\n} from '@ant-design/icons';\r\nimport { getRoles } from '../../../function/fn';\r\n\r\nexport const userCol = ({ handleDelete, handleUserEdit,handleAccountEdit,handleUserRole, setRoleUserID , limit, page }) => {\r\n    let l = limit >= 20 ? limit/page : limit\r\n    let no = ((page-1) * l)\r\n\r\n    var array = [\r\n        {\r\n            title: 'ល.រ',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: 50,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {no+=1}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'ឈ្មោះសម្គាល់អ្នកប្រើប្រាស់',\r\n            dataIndex: 'username',\r\n            key: 'username',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'គោត្តនាម',\r\n            dataIndex: 'firstName',\r\n            key: 'firstName',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'នាម',\r\n            dataIndex: 'lastName',\r\n            key: 'lastName',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'តួនាទី',\r\n            dataIndex: 'roles',\r\n            key: 'roles',\r\n            width: 50,\r\n            render: (text, record) => (\r\n                <span onClick={()=> {handleUserRole(record.roles);setRoleUserID(record.id)}} className=\"link\" size=\"middle\">\r\n                    {\r\n                        getRoles(record.roles)\r\n                    }\r\n                </span>\r\n            ),\r\n        },\r\n        {\r\n            title: 'លេខទូរស័ព្ទ',\r\n            dataIndex: 'tel',\r\n            key: 'tel',\r\n            width: 80,\r\n        },\r\n        {\r\n            title: 'អ៊ីម៉ែល',\r\n            dataIndex: 'email',\r\n            key: 'email',\r\n            width: 100,\r\n        },\r\n\r\n        {\r\n            key: 'action',\r\n            dataIndex: 'action',\r\n            fixed: 'right',\r\n            width: 50,\r\n            align: 'center',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    \r\n                    <span className=\"link\" onClick={() => handleAccountEdit(record)}><KeyOutlined /></span>\r\n                    <span className=\"link\" onClick={() => handleUserEdit(record)}><EditOutlined /></span>\r\n                    <Popconfirm\r\n                        title=\"តើអ្នកពិតចង់លុបមែនឬទេ?\"\r\n                        onConfirm={() => { handleDelete(record.id) }}\r\n                        okText=\"ចង់\"\r\n                        cancelText=\"មិនចង់\"\r\n                    >\r\n                        <span className=\"link\" style={{ color: \"red\" }}><DeleteOutlined /></span>\r\n                    </Popconfirm>\r\n\r\n                </Space>\r\n            ),\r\n        }\r\n    ]\r\n    return array\r\n}","import React, { useContext } from 'react'\r\nimport { Modal, Form, Input, Row, Col, Button,Select, message} from 'antd';\r\nimport { useMutation } from '@apollo/client';\r\nimport { REGISTER_USER } from '../../../graphql/auth';\r\n\r\nconst { Option } = Select;\r\n\r\nexport default function AddUser({ open, setOpen,setRefetch }) {\r\n\r\n    const [registerUser,{loading,error}] = useMutation(REGISTER_USER,{\r\n        onCompleted:({registerUser})=>{\r\n            setRefetch()\r\n            message.success(\"បញ្ចូលបានជោគជ័យ\")\r\n            setOpen(false)\r\n        },\r\n        onError:(error)=>{\r\n            console.log(error.message)\r\n        }\r\n    })\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const onFinish = (values) => {\r\n\r\n        registerUser({\r\n            variables:{\r\n\r\n                username:values.username,\r\n                password:values.password,\r\n                firstname:values.firstname,\r\n                lastname:values.lastname,\r\n                email:values.email,\r\n                role:values.role,\r\n                tel:values.tel\r\n\r\n            }\r\n        })\r\n\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            title=\"បញ្ចូលអ្នកប្រើប្រាស់ថ្មី\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"addUser\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"username\"\r\n                            rules={[{ required: true, message: 'Field is required!' }]}\r\n                        >\r\n                            <Input placeholder=\"ឈ្មោះសម្គាល់អ្នកប្រើប្រាស់\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"password\"\r\n                            rules={[{ required: true, message: 'Field is required!' }]}\r\n                        >\r\n                            <Input placeholder=\"លេខកូដសម្ងាត់\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"firstname\"\r\n                            rules={[{ required: true, message: 'Field is required!' }]}\r\n                        >\r\n                            <Input placeholder=\"នាម\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"lastname\"\r\n                            rules={[{ required: true, message: 'Field is required!' }]}\r\n                        >\r\n                            <Input placeholder=\"គោត្តនាម\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"role\"\r\n                            rules={[{ required: true, message: 'Field is required!' }]}\r\n                        >\r\n                            {/* <Input placeholder=\"តួនាទី\" /> */}\r\n                            <Select placeholder=\"តួនាទី\" style={{ width: \"100%\" }}>\r\n                            <Option value=\"BASIC\">BASIC</Option>\r\n                                <Option value=\"ADMIN\">ADMIN</Option>\r\n                                <Option value=\"SUPPER\">SUPPER</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"tel\"\r\n                        // rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"លេខទូរស័ព្ទ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Form.Item\r\n                            name=\"email\"\r\n                        // rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input type=\"email\" placeholder=\"អ៊ីម៉ែល\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                            // onClick={()=> }\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { Modal, Form, Input, Row, Col, Button, Select, message } from 'antd';\r\n\r\nimport { useMutation } from '@apollo/client';\r\nimport { UPDATE_USER_DETAIL } from '../../../graphql/auth';\r\n\r\nconst { Option } = Select;\r\n\r\nexport default function EditUser({ open, setOpen, data, setRefetch }) {\r\n    //const { userDataDispatch } = useContext(UserController)\r\n\r\n    const [updateUserDetail, { loading, error }] = useMutation(UPDATE_USER_DETAIL,{\r\n        onCompleted:({updateUserDetail})=>{\r\n            setRefetch()\r\n            message.success(\"កែប្រែបានជោគជ័យ\")\r\n        },\r\n        onError:(error)=>{\r\n            message.success(\"កែប្រែមានបញ្ហា!\")\r\n        }\r\n    })\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    \r\n\r\n    const onFinish = (values) => {\r\n        updateUserDetail({variables:{\r\n            userId:data.id,\r\n            firstName:values.firstName,\r\n            lastName:values.lastName,\r\n            email:values.email,\r\n            tel:values.tel,\r\n        }})\r\n\r\n        \r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            title=\"កែប្រេអ្នកប្រើប្រាស់\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"editUser\"\r\n                fields={[\r\n                    \r\n                    {\r\n                        name: ['firstName'],\r\n                        value: data.firstName,\r\n                    },\r\n                    {\r\n                        name: ['lastName'],\r\n                        value: data.lastName,\r\n                    },\r\n                    {\r\n                        name: ['tel'],\r\n                        value: data.tel,\r\n                    },\r\n                    {\r\n                        name: ['email'],\r\n                        value: data.email,\r\n                    },\r\n                    \r\n                ]}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    {/* <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"username\"\r\n                            rules={[{ required: true, message: 'Field is required!' }]}\r\n                        >\r\n                            <Input placeholder=\"ឈ្មោះសម្គាល់អ្នកប្រើប្រាស់\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"password\"\r\n                            rules={[{ required: true, message: 'Field is required!' }]}\r\n                        >\r\n                            <Input placeholder=\"លេខកូដសម្ងាត់\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col> */}\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"firstName\"\r\n                            rules={[{ required: true, message: 'Field is required!' }]}\r\n                        >\r\n                            <Input placeholder=\"នាម\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"lastName\"\r\n                            rules={[{ required: true, message: 'Field is required!' }]}\r\n                        >\r\n                            <Input placeholder=\"គោត្តនាម\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"tel\"\r\n                        // rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"លេខទូរស័ព្ទ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"email\"\r\n                        // rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input type=\"email\" placeholder=\"អ៊ីម៉ែល\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            កែប្រែទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal >\r\n    )\r\n}\r\n","import { Space } from \"antd\"\r\nimport { Popconfirm } from \"antd\"\r\nimport { DeleteOutlined } from \"@ant-design/icons\"\r\n\r\nexport const roleColumn = [\r\n    {\r\n        title: 'តួនាទី',\r\n        dataIndex: 'role',\r\n        key: 'role',\r\n        width: 20,\r\n    },\r\n    {\r\n        dataIndex: 'action',\r\n        key: 'action',\r\n        width: 20,\r\n        render:() => (\r\n            <Space size=\"middle\"\r\n            >\r\n                <Popconfirm\r\n                        title=\"តើអ្នកពិតចង់លុបមែនឬទេ?\"\r\n                        // onConfirm={() => { handleDelete(record.id) }}\r\n                        okText=\"ចង់\"\r\n                        cancelText=\"មិនចង់\"\r\n                    >\r\n                        <span className=\"link\" style={{ color: \"red\" }}><DeleteOutlined /></span>\r\n                </Popconfirm>\r\n            </Space>\r\n        )\r\n    }\r\n]","import React, { useContext, useState } from 'react'\r\nimport { Modal, Form, Input, Row, Col, Button, Select, message, Table } from 'antd';\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_USER_ROLE } from '../../../graphql/auth';\r\nimport { roleColumn } from '../tableColumn/roleColumn';\r\n\r\nconst { Option } = Select;\r\n\r\nexport default function AddRole({ open, setOpen,userID, dataRoles , setRefetch }) {\r\n   \r\n    const [addRole, { loading, error }] = useMutation(ADD_USER_ROLE, {\r\n        onCompleted: ({ addRole }) => {\r\n            setRefetch()\r\n            message.success(\"បញ្ចូលបានជោគជ័យ\")\r\n        },\r\n        onError: (error) => {\r\n            message.error(\"បញ្ចូលបានជោគជ័យ\")\r\n        }\r\n    })\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const onFinish = (values) => {\r\n        // console.log('Success:', values);\r\n\r\n        addRole({\r\n            variables: {\r\n                userId:userID,\r\n                role:values.role\r\n            }\r\n        })\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            title=\"បញ្ចូលអតួនាទី\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"addUser\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={12}>\r\n                        <Form.Item\r\n                            name=\"role\"\r\n                            rules={[{ required: true, message: 'Field is required!' }]}\r\n                        >\r\n                            {/* <Input placeholder=\"តួនាទី\" /> */}\r\n                            <Select placeholder=\"តួនាទី\" style={{ width: \"100%\" }}>\r\n\r\n                                <Option value=\"BASIC\">BASIC</Option>\r\n                                <Option value=\"ADMIN\">ADMIN</Option>\r\n                                <Option value=\"SUPPER\">SUPPER</Option>\r\n                                {/* <Option value=\"USER\">USER</Option> */}\r\n                                {/* 'BASIC','ADMIN','SUPPER','ACCOUNTANT','MARTMANAGER','CEO' */}\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col xs={{span: 11, offset:1}}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        // onClick={()=> }\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Table\r\n                            columns={roleColumn}\r\n                            dataSource={dataRoles}\r\n                            pagination={false}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { Modal, Form, Input, Row, Col, Button, Select, message } from 'antd';\r\nimport { useMutation } from '@apollo/client';\r\nimport { UPDATE_USER_DETAIL } from '../../../graphql/auth';\r\nimport { EyeTwoTone,EyeInvisibleOutlined } from '@ant-design/icons';\r\n\r\nconst { Option } = Select;\r\n\r\nexport default function EditAccount({ open, setOpen, data,setRefetch }) {\r\n    //const { userDataDispatch } = useContext(UserController)\r\n\r\n    const [updateUserDetail, { loading, error }] = useMutation(UPDATE_USER_DETAIL,{\r\n        onCompleted:({updateUserDetail})=>{\r\n            setRefetch()\r\n            message.success(\"កែប្រែបានជោគជ័យ\")\r\n        },\r\n        onError:(error)=>{\r\n            message.success(\"កែប្រែមានបញ្ហា!\")\r\n        }\r\n    })\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const onFinish = (values) => {\r\n\r\n        updateUserDetail({variables:{\r\n            userId:data.id,\r\n            firstName:values.firstName,\r\n            lastName:values.lastName,\r\n            email:values.email,\r\n            tel:values.tel,\r\n        }})\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            title=\"កែប្រែលេខសម្ងាត់\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"editUser\"\r\n                fields={[\r\n                    {\r\n                        name: ['username'],\r\n                        value: data.username,\r\n                    },\r\n                    // {\r\n                    //     name: ['firstName'],\r\n                    //     value: data.firstName,\r\n                    // },\r\n                    // {\r\n                    //     name: ['lastName'],\r\n                    //     value: data.lastName,\r\n                    // },\r\n                    // {\r\n                    //     name: ['tel'],\r\n                    //     value: data.tel,\r\n                    // },\r\n                    // {\r\n                    //     name: ['email'],\r\n                    //     value: data.email,\r\n                    // },\r\n                    \r\n\r\n                ]}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"username\"\r\n                            rules={[{ required: true, message: 'Field is required!' }]}\r\n                        >\r\n                            <Input placeholder=\"ឈ្មោះសម្គាល់អ្នកប្រើប្រាស់\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"password\"\r\n                            rules={[{ required: true, message: 'Field is required!' }]}\r\n                        >\r\n                            <Input.Password placeholder=\"លេខកូដសម្ងាត់\" style={{ width: \"100%\" }} iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11}}>\r\n                        <Form.Item\r\n                            name=\"cfpassword\"\r\n                            rules={[{ required: true, message: 'Field is required!' }]}\r\n                        >\r\n                            <Input.Password placeholder=\"បញ្ជាក់លេខកូដសម្ងាត់\" style={{ width: \"100%\" }} iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    \r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            កែប្រែទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal >\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Row, Col, Button, Input, Table, message } from 'antd'\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { userCol } from '../component/user/tableColumn/userColumn'\r\nimport AddUser from '../component/user/modal/addUser';\r\nimport EditUser from '../component/user/modal/editUser';\r\nimport { useQuery, useMutation } from '@apollo/client'\r\nimport { GET_ALL_USERS } from '../graphql/auth'\r\nimport { DELETE_USER } from '../graphql/auth';\r\nimport AddRole from '../component/user/modal/addRole';\r\nimport EditAccount from '../component/user/modal/editAccount';\r\n\r\nexport default function User() {\r\n\r\n    const [userData, setUserData] = useState([])\r\n\r\n    const [page, setPage] = useState(1)\r\n    const [limit, setLimit] = useState(10)\r\n    const [keyword, setKeyword] = useState(\"\")\r\n    \r\n    const [dataRoles, setDataRoles] = useState([])\r\n    const [openAdd, setOpenAdd] = useState(false)\r\n    const [openEdit, setOpenEdit] = useState(false)\r\n    const [userEdit, setUserEdit] = useState({});\r\n    const [openRole, setOpenRole] = useState(false)\r\n    const [roleUserID, setRoleUserID] = useState(\"\")\r\n    const [openEditAccount, setOpenEditAccount] = useState(false)\r\n\r\n    //query all user\r\n    const { data, loading, error,refetch } = useQuery(GET_ALL_USERS, {\r\n        variables: {\r\n            page:page,\r\n            limit: limit,\r\n            keyword: keyword,\r\n        }, onCompleted: ({ getUserWithPagination }) => {\r\n            //console.log(getUserWithPagination)\r\n            setUserData(data?.getUserWithPagination)\r\n        }\r\n    })\r\n\r\n    //delete user on ID\r\n    const [deleteUser, { loading: deleteLoading, error: deleteError }] = useMutation(DELETE_USER, {\r\n        onCompleted: ({ deleteUser }) => {\r\n            refetch()\r\n            message.success(\"លុបបានជោគជ័យ\")\r\n        }\r\n    })\r\n\r\n    useEffect(()=>{\r\n        if(data){\r\n            setUserData(data?.getUserWithPagination)\r\n        }\r\n    },[data])\r\n\r\n    useEffect(() => {\r\n        refetch()\r\n    }, [page,limit,keyword])\r\n\r\n    const handleUserRole = (e) => {\r\n        setOpenRole(true)\r\n        setDataRoles(e)\r\n    }\r\n\r\n    const handleUserEdit = (e) => {\r\n        setUserEdit(e)\r\n        setOpenEdit(true)\r\n    }\r\n\r\n    const handleAccountEdit = (e) => {\r\n        setUserEdit(e)\r\n        setOpenEditAccount(true)\r\n    }\r\n\r\n    const handleDelete = (e) => {\r\n        //userDataDispatch({ type: \"DELETE_USER\", payload: e })\r\n        // console.log(e)\r\n        deleteUser({variables:{\r\n            userId:e\r\n        }})\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <AddUser open={openAdd} setOpen={setOpenAdd} setRefetch={refetch} />\r\n            <EditUser open={openEdit} setOpen={setOpenEdit} data={userEdit} setRefetch={refetch} />\r\n            <AddRole open={openRole} setOpen={setOpenRole} userID={roleUserID} dataRoles={dataRoles} setRefetch={refetch} />\r\n            <EditAccount open={openEditAccount} setOpen={setOpenEditAccount} data={userEdit} setRefetch={refetch} />\r\n            <Col\r\n                xs={8}\r\n                md={18}\r\n            >\r\n                <Button\r\n                    type=\"primary\"\r\n                    onClick={() => setOpenAdd(true)}\r\n                >\r\n                    បញ្ចូលអ្នកប្រើប្រាស់\r\n                    <PlusOutlined />\r\n                </Button>\r\n            </Col>\r\n            <Col\r\n                xs={16}\r\n                md={6}\r\n            >\r\n                <Input.Search\r\n                    onChange={(e)=> setKeyword(e.target.value)}\r\n                    placeholder=\"ស្វែងរក...\"\r\n                />\r\n            </Col>\r\n            <Col\r\n                xs={24}\r\n                style={{ marginTop: 20 }}\r\n            >\r\n                <Table\r\n                    className=\"table-go-list\"\r\n                    // caseCol({handleDelete})\r\n                    columns={userCol({ handleDelete, handleUserEdit,handleAccountEdit, handleUserRole,setRoleUserID,limit, page })}\r\n                    dataSource={userData.users}\r\n                    rowKey={record => record.id}\r\n                    pagination={{\r\n                        total: userData?.paginator?.totalDocs,\r\n                        //pageSizeOptions:[\"10\", \"20\"],\r\n                        // showSizeChanger: true,\r\n                        current:userData?.paginator?.currentPage,\r\n                        onChange:((page, pageSize) => {setPage(page);setLimit(pageSize)} )\r\n                    }}\r\n                    scroll={{ x: 400 }}\r\n                    sticky\r\n                />\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Space, Tooltip, Popconfirm } from 'antd'\r\nimport {\r\n    EditOutlined,\r\n    DeleteOutlined\r\n} from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom'\r\nimport { getFullNamePersonInCharge, getRoles } from '../../../function/fn';\r\nimport moment from 'moment';\r\n\r\nexport const quarantineCol = ({handleDelete,limit,page}) => {\r\n\r\n    let no = ((page-1) * limit)\r\n\r\n    let d = new Date().setHours(0,0,0,0)\r\n    let m = moment(d).format(\"DD-MM-yyyy hh:mm:ss\")\r\n\r\n   \r\n    var array = [\r\n        {\r\n            title: 'ល.រ',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: 50,\r\n            render: (text, record, i) => (\r\n                <Space size=\"middle\">\r\n                    {no += 1}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'ឈ្មោះមណ្ឌល',\r\n            dataIndex: 'locationName',\r\n            key: 'locationName',\r\n            width: 100,\r\n        },\r\n       \r\n        {\r\n            title: 'អាសយដ្ឋាន  ',\r\n            dataIndex: 'address',\r\n            key: 'address',\r\n            width: 100,\r\n            render: (text, record) => (\r\n                // <Tooltip placement=\"top\" title={record.village + \",\" + record.commune + \",\" + record.district + \",\" + record.province}>\r\n                    <Space size=\"middle\">\r\n                        {(record.village !== \"ក្រៅសៀមរាប\") && record.village}\r\n                        {record.commune !== \"ក្រៅសៀមរាប\" && record.commune}\r\n                        {record.district !== \"ក្រៅសៀមរាប\" && record.district}\r\n                        {record.province && record.province}\r\n                        \r\n                    </Space>\r\n                // </Tooltip>\r\n            ),\r\n            \r\n        },\r\n        {\r\n            title: 'អ្នកទទួលខុសត្រូវ',\r\n            dataIndex: 'personInCharge',\r\n            key: 'personInCharge',\r\n            width: 100,\r\n            render: (text, record) => (\r\n                <span size=\"middle\">\r\n                    {\r\n                        // getFullNamePersonInCharge(record.personInCharge)\r\n                        record.personInCharge.lastName+\" \"+record.personInCharge.firstName\r\n                        // console.log(record.personInCharge)\r\n                    }\r\n                </span>\r\n            ),\r\n            \r\n        },\r\n        {\r\n            title: 'លេខទូរស័ព្ទ',\r\n            dataIndex: 'personInCharge',\r\n            key: 'personInCharge',\r\n            width: 100,\r\n            render: (text, record) => (\r\n                <span size=\"middle\">\r\n                    {\r\n                        // getFullNamePersonInCharge(record.personInCharge)\r\n                        record.personInCharge.tel\r\n                        // console.log(record.personInCharge)\r\n                    }\r\n                </span>\r\n            ),\r\n        },\r\n        {\r\n            title: 'ចំណាំ',\r\n            dataIndex: 'other',\r\n            key: 'other',\r\n            width: 100,\r\n        },\r\n    \r\n        {\r\n            key: 'action',\r\n            dataIndex: 'action',\r\n            fixed: 'right',\r\n            width: 50,\r\n            align: 'center',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    <Link className=\"link\" to={\"/subQuarantine/\"+record.id}><EditOutlined /></Link>\r\n                    <Popconfirm\r\n                        title=\"តើអ្នកពិតចង់លុបមែនឬទេ?\"\r\n                        onConfirm={() => { handleDelete(record.id) }}\r\n                        okText=\"ចង់\"\r\n                        cancelText=\"មិនចង់\"\r\n                    >\r\n                        <span className=\"link\" style={{ color: \"red\" }}><DeleteOutlined /></span>\r\n                    </Popconfirm>\r\n\r\n                </Space>\r\n            ),\r\n        }\r\n    ]\r\n    return array\r\n}","import {gql} from \"@apollo/client\"\r\n\r\nexport const GET_ALL_QUARANTINEINFO = gql`\r\nquery getQuarantineInfoWithPagination($page:Int!,$limit:Int!,$keyword:String){\r\n    getQuarantineInfoWithPagination(page:$page,limit:$limit,keyword:$keyword){\r\n      quarantineInfos{\r\n        id\r\n        locationName\r\n        village\r\n        commune\r\n        district\r\n        province\r\n        other\r\n        capacity\r\n        personInCharge{\r\n            firstName\r\n            lastName\r\n            position\r\n            tel\r\n            others\r\n        }\r\n        long\r\n        lat\r\n        createdAt\r\n        updatedAt\r\n       \r\n      },\r\n      paginator{\r\n        slNo\r\n        prev\r\n        next\r\n        perPage\r\n        totalPosts\r\n        totalPages\r\n        currentPage\r\n        hasPrevPage\r\n        hasNextPage\r\n        totalDocs\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_QUARANTINEINFO = gql`\r\nmutation createQuarantineInfo(\r\n    $locationName:String,\r\n    $village:String,\r\n    $commune:String,\r\n    $district:String,\r\n    $province:String,\r\n    $long: Float,\r\n    $lat:Float,\r\n    $other:String,\r\n    $firstName:String,\r\n    $lastName:String,\r\n    $position:String,\r\n    $tel:String,\r\n    $others:String,\r\n){\r\n    createQuarantineInfo(newQuarantineInfo:{\r\n      locationName:$locationName\r\n      village:$village\r\n      commune:$commune\r\n      district: $district\r\n      province:$province\r\n      long: $long\r\n      lat:$lat\r\n      other:$other\r\n      personInCharge:{\r\n        firstName:$firstName\r\n        lastName:$lastName\r\n        position:$position\r\n        tel:$tel\r\n        others:$others\r\n      }\r\n    }){\r\n      success\r\n      message\r\n      quarantineInfo{\r\n        capacity\r\n        id\r\n        locationName\r\n        village\r\n        commune\r\n        district\r\n        province\r\n        long\r\n        lat\r\n        other\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DELETE_QUARANTINE_BY_ID = gql`\r\nmutation deleteQuarantineInfo($id:ID!){\r\n    deleteQuarantineInfo(id:$id){\r\n      success\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_PERSON_QUARANTINE = gql`\r\nmutation createQuarantine(\r\n  $date_in:DateTime,\r\n  $date_out:DateTime,\r\n  $personalInfo:ID!,\r\n  $quarantineInfo:ID!,\r\n  $others:String,\r\n  $personalType:String\r\n){\r\n  createQuarantine(newQuarantine:{\r\n    date_in:$date_in\r\n    date_out:$date_out\r\n    personalInfo:$personalInfo\r\n    quarantineInfo:$quarantineInfo\r\n    others:$others\r\n    personalType:$personalType\r\n  }){\r\n    success\r\n    message\r\n  }\r\n}\r\n`;\r\n\r\nexport const GET_PERSON_BY_QUARANTINE = gql`\r\nquery getQuarantineByQurantineIdWithPagination(\r\n  $page:Int!,\r\n  $limit:Int!,\r\n  $keyword:String,\r\n  $quarantineInfoId:ID!\r\n){\r\n  getQuarantineByQurantineIdWithPagination(page:$page,limit:$limit,keyword:$keyword,quarantineInfoId:$quarantineInfoId){\r\n    quarantines{\r\n      id\r\n      date_in\r\n      date_out\r\n      personalInfo{\r\n      \tid\r\n        firstName\r\n        lastName\r\n        village\r\n        gender\r\n        district\r\n        commune\r\n        province\r\n        direct\r\n        currentState{\r\n          confirm\r\n          death\r\n          recovered\r\n        }\r\n    \t}\r\n      \r\n      personalType\r\n      others\r\n    }\r\n    paginator{\r\n      slNo\r\n      prev\r\n      next\r\n      perPage\r\n      totalPosts\r\n      totalPages\r\n      currentPage\r\n      hasPrevPage\r\n      hasNextPage\r\n      totalDocs\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nexport const GET_QUARANTINE_BY_ID = gql`\r\nquery getQuarantineInfoById($id:ID!){\r\n  getQuarantineInfoById(id:$id){\r\n    capacity\r\n    id\r\n    locationName\r\n    village\r\n    commune\r\n    district\r\n    province\r\n    long\r\n    lat\r\n    createdAt\r\n    updatedAt\r\n    personInCharge{\r\n      firstName\r\n      lastName\r\n      position\r\n      others\r\n      tel\r\n    }\r\n    other\r\n  }\r\n}\r\n`;\r\n\r\nexport const UPDATE_QUARANTINE_BY_ID = gql`\r\nmutation updateQuarantineInfo(\r\n    $locationName:String,\r\n    $village:String,\r\n    $commune:String,\r\n    $district:String,\r\n    $province:String,\r\n    $long:Float,\r\n    $lat:Float,\r\n    $other:String,\r\n    $capacity:Int,\r\n    $firstName:String,\r\n    $lastName:String,\r\n    $tel:String,\r\n    $position:String,\r\n    $others:String,\r\n    $id:ID!\r\n){\r\n  updateQuarantineInfo(updatedQuarantineInfo:{\r\n    locationName:$locationName\r\n    village:$village\r\n    commune:$commune\r\n    district:$district\r\n    province:$province\r\n    long:$long\r\n    lat:$lat\r\n    other:$other\r\n    capacity:$capacity\r\n    personInCharge:{\r\n      firstName:$firstName\r\n      lastName:$lastName\r\n      tel:$tel\r\n      position:$position\r\n      others:$others\r\n    }\r\n  },id:$id){\r\n    message\r\n    success\r\n  }\r\n}\r\n`;\r\n\r\nexport const DELETE_PERSON_BY_QUARANTINE = gql`\r\nmutation deleteQuarantine($id:ID!){\r\n  deleteQuarantine(id:$id){\r\n    success\r\n    message\r\n  }\r\n}\r\n`;\r\n\r\nexport const UPDATE_PEOPLE_BY_QUARANTINE = gql`\r\nmutation updateQuarantine(\r\n    $date_in:DateTime,\r\n    $date_out:DateTime,\r\n    $personalType:String,\r\n    $personalInfo:ID!,\r\n    $quarantineInfo:ID!,\r\n    $others:String,\r\n    $id:ID!\r\n){\r\n  updateQuarantine(updatedQuarantine:{\r\n    date_in:$date_in\r\n    date_out:$date_out\r\n    personalType:$personalType\r\n    personalInfo:$personalInfo\r\n    quarantineInfo:$quarantineInfo\r\n    others:$others\r\n  },id:$id){\r\n    message\r\n    success\r\n  }\r\n}\r\n`;\r\n\r\n\r\nexport const ALL_QUARANTINEINFO = gql`\r\nquery allQuarantineInfos{\r\n  allQuarantineInfos{\r\n    capacity\r\n    locationName\r\n    id\r\n    village\r\n    commune\r\n    district\r\n    province\r\n    long \r\n    lat\r\n    personInCharge{\r\n      firstName \r\n      lastName \r\n      position\r\n      others\r\n      tel\r\n    }\r\n  }}\r\n\r\n\r\n`","import React, { useContext,useState,useEffect } from 'react'\r\nimport { Modal, Form, Input, Row, Col, Button,Select, Divider, message} from 'antd';\r\nimport { ListSelect } from '../../../static/own-comp'\r\nimport { provinceData, districtData, communeData, villageData } from '../../../context/headerContext'\r\nimport { convertToDistrict, convertToCommune, convertToVillage } from '../../../function/fn'\r\nimport { useMutation } from '@apollo/client';\r\nimport { CREATE_QUARANTINEINFO } from '../../../graphql/quarantine';\r\nimport { setAddQuarantine } from '../../../function/set';\r\n\r\nconst { Option } = Select;\r\n\r\nexport default function AddQuarantine({ open, setOpen, quarantineId, setQuarantineId , setRefetch }) {\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const [province, setProvince] = useState(\"\")\r\n    const [district, setDistrict] = useState(\"\")\r\n    const [commune, setCommune] = useState(\"\")\r\n\r\n    const [createQuarantineInfo,{loading,error}]=useMutation(CREATE_QUARANTINEINFO,{\r\n        onCompleted:({createQuarantineInfo})=>{\r\n            \r\n            message.success(\"បញ្ចូលបានជោគជ័យ\")\r\n            if (quarantineId === \"new\") {\r\n                setQuarantineId(createQuarantineInfo.quarantineInfo)\r\n            }else{\r\n                setRefetch()\r\n            }\r\n        },\r\n        \r\n    })\r\n\r\n    const onFinish = (values) => {\r\n\r\n        createQuarantineInfo({variables:setAddQuarantine(values)})\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const setToGenderFn = (e) => {\r\n        form.setFieldsValue({\r\n            gender: e\r\n        });\r\n    };\r\n\r\n    const setToProviceFn = (e) => {\r\n        form.setFieldsValue({\r\n            province: e,\r\n            district: null,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setProvince(e)\r\n        setDistrict(\"\")\r\n        setCommune(\"\")\r\n    };\r\n\r\n\r\n    const setToDistrictFn = (e) => {\r\n        form.setFieldsValue({\r\n            district: e,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setDistrict(e)\r\n        setCommune(\"\")\r\n    };\r\n\r\n    const setToCommuneFn = (e) => {\r\n        form.setFieldsValue({\r\n            commune: e,\r\n            village: null,\r\n        });\r\n\r\n        setCommune(e)\r\n    };\r\n\r\n    const setToVillageFn = (e) => {\r\n        form.setFieldsValue({\r\n            village: e\r\n        });\r\n    };\r\n\r\n    const setPeopleQuarantineFn = () => {\r\n        setOpen(false)\r\n        setQuarantineId(\"\")\r\n        // console.log(locationId)\r\n    }\r\n\r\n\r\n    return (\r\n        <Modal\r\n            title=\"បញ្ចូលមណ្ឌលចត្តាឡីស័កថ្មី\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => quarantineId === \"new\" ? setPeopleQuarantineFn() : setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"addUser\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"locationName\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"ឈ្មោះមណ្ឌល\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    \r\n\r\n                    <Col xs={24} md={{ span: 11, offset:2 }}>\r\n                        <Form.Item\r\n                            name=\"province\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <ListSelect type={1} data={provinceData} title=\"ខេត្ត/ក្រុង\" setValue={setToProviceFn} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {province === \"សៀមរាប\" ? (\r\n                        <>\r\n                            <Col xs={24} md={{ span: 11, offset: 0 }}>\r\n                                <Form.Item\r\n                                    name=\"district\"\r\n                                    rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                >\r\n                                    <ListSelect type={0} data={convertToDistrict(districtData)} title=\"ស្រុក/ខណ្ឌ\" setValue={setToDistrictFn} disabled={province !== \"សៀមរាប\" ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                                <Form.Item\r\n                                    name=\"commune\"\r\n                                    rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToCommune(district, communeData)} title=\"ឃុំ/សង្កាត់\" setValue={setToCommuneFn} disabled={district === \"\" || district === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 24, offset: 0 }}>\r\n                                <Form.Item\r\n                                    name=\"village\"\r\n                                    rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToVillage(commune, villageData)} title=\"ភូមិ\" setValue={setToVillageFn} disabled={commune === \"\" || commune === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </>\r\n                    ) : null}\r\n\r\n                    <Col xs={24}>\r\n                        <Form.Item\r\n                            name=\"other\"\r\n                        // rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"ចំណាំ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"long\"\r\n                            // rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input type=\"number\" placeholder=\"longtitude\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 , offset:2}}>\r\n                        <Form.Item\r\n                            name=\"lat\"\r\n                            // rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input type=\"number\" placeholder=\"latitude\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Divider>អ្នកទទួលខុសត្រូវ</Divider>\r\n                    <Col xs={24} md={{ span: 11, offset: 0 }}>\r\n                        <Form.Item\r\n                            name=\"firstName\"\r\n                            // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"នាម\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"lastName\"\r\n                            // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"គោត្តនាម\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 0 }}>\r\n                        <Form.Item\r\n                            name=\"position\"\r\n                            // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"តួនាទីការងារ\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"tel\"\r\n                            // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"លេខទូរស័ព្ទ\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 0 }}>\r\n                        <Form.Item\r\n                            name=\"others\"\r\n                            //rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"ផ្សេងៗ\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useContext, useState, useEffect } from 'react'\r\nimport { Row, Col, Button, Input, Table, message } from 'antd'\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { quarantineCol } from '../component/quarantine/tableColumn/quarantineColumn'\r\nimport AddQuarantine from '../component/quarantine/modal/addQuarantine';\r\nimport { useQuery, useMutation } from '@apollo/client';\r\nimport { GET_ALL_QUARANTINEINFO } from '../graphql/quarantine';\r\nimport { DELETE_QUARANTINE_BY_ID } from '../graphql/quarantine';\r\n\r\nexport default function Quarantine() {\r\n\r\n    const [openAdd, setOpenAdd] = useState(false)\r\n    const [page, setPage] = useState(1)\r\n    const [limit, setLimit] = useState(10)\r\n    const [keyword, setKeyword] = useState(\"\")\r\n    const [quarantineData, setQuarantineData] = useState([])\r\n\r\n    const { data, loading, error, refetch } = useQuery(GET_ALL_QUARANTINEINFO, {\r\n        variables: {\r\n            page: page,\r\n            limit: limit,\r\n            keyword: keyword,\r\n        },\r\n        onCompleted: ({ getQuarantineInfoWithPagination }) => {\r\n            // console.log(\"test\",getQuarantineInfoWithPagination?.quarantineInfos)\r\n            setQuarantineData(getQuarantineInfoWithPagination)\r\n            \r\n        },\r\n        fetchPolicy: 'network-only',\r\n        \r\n    })\r\n\r\n    useEffect(()=>{\r\n        if(data){\r\n            setQuarantineData(data?.getQuarantineInfoWithPagination)\r\n        }\r\n    }, [data])\r\n    \r\n    const [deleteQuarantineInfo, { loading: deleteLoading, error: deleteError }] = useMutation(DELETE_QUARANTINE_BY_ID, {     \r\n        onCompleted: () => {\r\n            refetch()\r\n            message.success(\"ទិន្នន័យត្រូវបានលុប\")\r\n        },\r\n\r\n    })\r\n\r\n    useEffect(() => {\r\n        refetch()\r\n    }, [page, limit, keyword])\r\n\r\n\r\n    const handleDelete = (e) => {\r\n        //quarantineDataDispatch({ type: \"DELETE_QUARANTINE\", payload: e })\r\n        deleteQuarantineInfo({\r\n            variables: {\r\n                id: e\r\n            },\r\n            \r\n        })\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <AddQuarantine open={openAdd} setOpen={setOpenAdd} setRefetch={refetch} />\r\n            {/* <EditUser open={openEdit} setOpen={setOpenEdit} user={userEdit} /> */}\r\n            <Col\r\n                xs={8}\r\n                md={18}\r\n            >\r\n                <Button\r\n                    type=\"primary\"\r\n                    onClick={() => setOpenAdd(true)}\r\n                >\r\n                    បញ្ចូលមណ្ឌលចត្តាឡីស័ក\r\n                    <PlusOutlined />\r\n                </Button>\r\n            </Col>\r\n            <Col\r\n                xs={16}\r\n                md={6}\r\n            >\r\n                <Input.Search\r\n                    onChange={(e) => setKeyword(e.target.value)}\r\n                    placeholder=\"ស្វែងរក...\"\r\n                />\r\n            </Col>\r\n            <Col\r\n                xs={24}\r\n                style={{ marginTop: 20 }}\r\n            >\r\n                <Table\r\n                    // caseCol({handleDelete})\r\n                    className=\"table-go-list\"\r\n                    columns={quarantineCol({ handleDelete, limit, page })}\r\n                    dataSource={quarantineData?.quarantineInfos}\r\n                    rowKey={record => record.id}\r\n                    pagination={{\r\n                        total: quarantineData?.paginator?.totalDocs,\r\n                        //pageSizeOptions:[\"10\", \"20\"],\r\n                        // showSizeChanger: true,\r\n                        current: quarantineData?.paginator?.currentPage,\r\n                        onChange: ((page, pageSize) => { setPage(page); setLimit(pageSize) })\r\n                    }}\r\n                    scroll={{ x: 1500 }}\r\n                    sticky\r\n                />\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n","import { Space, Popconfirm } from 'antd'\r\nimport {\r\n    EditOutlined,\r\n    DeleteOutlined,\r\n    EyeOutlined\r\n} from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nexport const subQuarantineCol = ({handleDelete, handleEditSubQuarantine,limit,page}) => {\r\n    let no = (page-1) * limit\r\n    var array = [\r\n        {\r\n            title: 'ល.រ',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: 20,\r\n            render: (text, record, i) => (\r\n                <Space size=\"middle\">\r\n                    {no+=1}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'ឈ្មោះ',\r\n            dataIndex: 'quarantines',\r\n            key: 'quarantines',\r\n            width: 50,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {record?.personalInfo?.lastName} {record?.personalInfo?.firstName}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'កាលបរិច្ឆេទចូល',\r\n            dataIndex: 'date_in',\r\n            key: 'date_in',\r\n            width: 50,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {moment(record?.date_in).format(\"ថ្ងែDD ខែMM ឆ្នាំYYYY\")}\r\n                </Space>\r\n            ),\r\n        },\r\n\r\n        {\r\n            title: 'កាលបរិច្ឆេទចេញ',\r\n            dataIndex: 'date_out',\r\n            key: 'date_out',\r\n            width: 50,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {record?.date_out === null ? \"គ្មាន\":moment(record?.date_out).format(\"ថ្ងែDD ខែMM ឆ្នាំYYYY\")}\r\n                </Space>\r\n            ),\r\n        },\r\n\r\n        {\r\n            title: 'អាសយដ្ឋាន',\r\n            dataIndex: 'address',\r\n            key: 'address',\r\n            width: 90,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {(record?.personalInfo?.village !== \"ក្រៅសៀមរាប\") && record?.personalInfo?.village}\r\n                    {record?.personalInfo?.commune !== \"ក្រៅសៀមរាប\" && record?.personalInfo?.commune}\r\n                    {record?.personalInfo?.district !== \"ក្រៅសៀមរាប\" && record?.personalInfo?.district}\r\n                    {record?.personalInfo?.province && record?.personalInfo?.province}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'ស្ថានភាព',\r\n            dataIndex: 'status',\r\n            key: 'status',\r\n            width: 30,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {record?.personalInfo?.currentState?.confirm ? \"វិជ្ជមាន\" : \"អវិជ្ជមាន\"}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'លក្ខណៈពាក់ព័ន្ធ',\r\n            dataIndex: 'direct',\r\n            key: 'direct',\r\n            width: 30,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {record?.personalInfo?.direct ? \"ផ្ទាល់\" : \"ប្រយោល\"}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            key: 'action',\r\n            dataIndex: 'action',\r\n            fixed: 'right',\r\n            width: 30,\r\n            align: 'center',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    <Link className=\"link\" to={\"/subPeople/\" + record?.personalInfo?.id}><EyeOutlined /></Link>\r\n                    <span className=\"link\" onClick={() => handleEditSubQuarantine(record)}><EditOutlined /></span>\r\n                    <Popconfirm\r\n                        title=\"តើអ្នកពិតចង់លុបមែនឬទេ?\"\r\n                        onConfirm={() => {handleDelete(record.id) }}\r\n                        okText=\"ចង់\"\r\n                        cancelText=\"មិនចង់\"\r\n                    >\r\n                        <span className=\"link\" style={{ color: \"red\" }}><DeleteOutlined /></span>\r\n                    </Popconfirm>\r\n\r\n                </Space>\r\n            ),\r\n        }\r\n    ]\r\n    return array\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Modal, Form, Input, DatePicker, Row, Col, Button, Select, Divider, message } from 'antd'\r\nimport { setEditQuarantine } from '../../../function/set'\r\n\r\nimport { ListSelect } from '../../../static/own-comp'\r\nimport { provinceData, districtData, communeData, villageData } from '../../../context/headerContext'\r\nimport { convertToDistrict, convertToCommune, convertToVillage } from '../../../function/fn'\r\nimport { useMutation } from '@apollo/client'\r\nimport { UPDATE_QUARANTINE_BY_ID } from '../../../graphql/quarantine'\r\n\r\nconst { Option } = Select\r\n\r\nexport default function EditQuarantine({ open, setOpen, data, quarantineId, setRefetch }) {\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const [province, setProvince] = useState(\"\")\r\n    const [district, setDistrict] = useState(\"\")\r\n    const [commune, setCommune] = useState(\"\")\r\n\r\n    const [updateQuarantineInfo, { loading }] = useMutation(UPDATE_QUARANTINE_BY_ID, {\r\n        onCompleted: () => {\r\n            setRefetch()\r\n            message.success(\"កែប្រែទិន្នន័យជោគជ័យ\")\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n\r\n        if (data !== undefined) {\r\n            form.setFieldsValue(setEditQuarantine(data))\r\n            setProvince(data.province)\r\n            setDistrict(data.district)\r\n            setCommune(data.commune)\r\n        }\r\n\r\n\r\n    }, [data])\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Success:', values);\r\n\r\n        updateQuarantineInfo({\r\n            variables: {\r\n                lat: values.lat,\r\n                capacity: parseInt(values.capacity),\r\n                createdAt: values.createdAt,\r\n                locationName: values.locationName,\r\n                long: values.long,\r\n                other: values.other,\r\n                tel: values.tel,\r\n                firstName: values.firstName,\r\n                lastName: values.lastName,\r\n                position: values.position,\r\n                others: values.others,\r\n                village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n                commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n                district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n                province: values.province === undefined ? \"\" : values.province,\r\n                id:quarantineId\r\n            }\r\n        })\r\n\r\n        // quarantineDataDispatch({type: 'EDIT_QUARANTINE', payload: {...values, id: data.id}})\r\n        // setData({...values, id: data.id})\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const setToGenderFn = (e) => {\r\n        form.setFieldsValue({\r\n            gender: e\r\n        });\r\n    };\r\n\r\n    const setToProviceFn = (e) => {\r\n        form.setFieldsValue({\r\n            province: e,\r\n            district: null,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setProvince(e)\r\n        setDistrict(\"\")\r\n        setCommune(\"\")\r\n    };\r\n\r\n\r\n    const setToDistrictFn = (e) => {\r\n        form.setFieldsValue({\r\n            district: e,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setDistrict(e)\r\n        setCommune(\"\")\r\n    };\r\n\r\n    const setToCommuneFn = (e) => {\r\n        form.setFieldsValue({\r\n            commune: e,\r\n            village: null,\r\n        });\r\n\r\n        setCommune(e)\r\n    };\r\n\r\n    const setToVillageFn = (e) => {\r\n        form.setFieldsValue({\r\n            village: e\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            title=\"កែប្រែមណ្ឌលចត្តាឡីស័ក\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n            destroyOnClose={false}\r\n            getContainer={false}\r\n            forceRender\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"editQuarantine\"\r\n                initialValues={setEditQuarantine(data)}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"locationName\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"ឈ្មោះមណ្ឌល\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"province\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <ListSelect type={1} data={provinceData} title=\"ខេត្ត/ក្រុង\" setValue={setToProviceFn} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {province === \"សៀមរាប\" ? (\r\n                        <>\r\n                            <Col xs={24} md={{ span: 11, offset: 0 }}>\r\n                                <Form.Item\r\n                                    name=\"district\"\r\n                                    rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                >\r\n                                    <ListSelect type={0} data={convertToDistrict(districtData)} title=\"ស្រុក/ខណ្ឌ\" setValue={setToDistrictFn} disabled={province !== \"សៀមរាប\" ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                                <Form.Item\r\n                                    name=\"commune\"\r\n                                    rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToCommune(district, communeData)} title=\"ឃុំ/សង្កាត់\" setValue={setToCommuneFn} disabled={district === \"\" || district === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 24, offset: 0 }}>\r\n                                <Form.Item\r\n                                    name=\"village\"\r\n                                    rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToVillage(commune, villageData)} title=\"ភូមិ\" setValue={setToVillageFn} disabled={commune === \"\" || commune === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </>\r\n                    ) : null}\r\n\r\n                    <Col xs={24} md={{ span: 24, offset: 0 }}>\r\n                        <Form.Item\r\n                            name=\"capacity\"\r\n                        >\r\n                            <Input type=\"number\" placeholder=\"អាចផ្ទុកបាន\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Form.Item\r\n                            name=\"other\"\r\n                        // rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"ចំណាំ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"long\"\r\n                            // rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input type=\"number\" placeholder=\"longtitude\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"lat\"\r\n                            // rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input type=\"number\" placeholder=\"latitude\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Divider>អ្នកទទួលខុសត្រូវ</Divider>\r\n                    <Col xs={24} md={{ span: 11, offset: 0 }}>\r\n                        <Form.Item\r\n                            name=\"firstName\"\r\n                            // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"នាម\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"lastName\"\r\n                            // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"គោត្តនាម\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 0 }}>\r\n                        <Form.Item\r\n                            name=\"position\"\r\n                            // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"តួនាទីការងារ\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"tel\"\r\n                            // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"លេខទូរស័ព្ទ\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 0 }}>\r\n                        <Form.Item\r\n                            name=\"others\"\r\n                        //rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"ផ្សេងៗ\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            កែប្រែទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { Form, Modal, Input, Row, Col, Button, Select,DatePicker, message } from 'antd'\r\nimport { QuarantineController } from '../../../context/quarantineContext'\r\nimport { ListSelect } from '../../../static/own-comp'\r\nimport { provinceData, districtData, communeData, villageData, genderData } from '../../../context/headerContext'\r\nimport { convertToDistrict, convertToCommune, convertToVillage } from '../../../function/fn'\r\nimport { useMutation, useQuery } from '@apollo/client'\r\nimport { CREATE_PERSON_QUARANTINE } from '../../../graphql/quarantine'\r\nimport { setAddSubQuarantine } from '../../../function/set'\r\nimport moment from 'moment'\r\n\r\nconst { Option } = Select\r\n\r\nexport default function AddSubQuarantine({ open, setOpen, quarantineId, peopleData, setRefetch }) {\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const [province, setProvince] = useState(\"\")\r\n    const [district, setDistrict] = useState(\"\")\r\n    const [commune, setCommune] = useState(\"\")\r\n\r\n    const [createQuarantine,{data}]=useMutation(CREATE_PERSON_QUARANTINE,{\r\n        onCompleted:({createQuarantine})=>{\r\n            setRefetch()\r\n            message.success(\"បញ្ចូលទិន្នន័យជោគជ័យ\")\r\n        }\r\n    })\r\n\r\n    const onFinish = (values) => {\r\n        createQuarantine({variables:{\r\n            in:values.in,\r\n            date_in:moment(values.date_in).format(),\r\n            date_out:moment(values.date_out).format(),\r\n            personalType:values.personalType,\r\n            personalInfo:values.personalInfo,\r\n            quarantineInfo:quarantineId,\r\n            others:values.others,\r\n        }})\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const setToGenderFn = (e) => {\r\n        form.setFieldsValue({\r\n            gender: e\r\n        });\r\n    };\r\n\r\n    const setToProviceFn = (e) => {\r\n        form.setFieldsValue({\r\n            province: e,\r\n            district: null,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setProvince(e)\r\n        setDistrict(\"\")\r\n        setCommune(\"\")\r\n    };\r\n\r\n\r\n    const setToDistrictFn = (e) => {\r\n        form.setFieldsValue({\r\n            district: e,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setDistrict(e)\r\n        setCommune(\"\")\r\n    };\r\n\r\n    const setToCommuneFn = (e) => {\r\n        form.setFieldsValue({\r\n            commune: e,\r\n            village: null,\r\n        });\r\n\r\n        setCommune(e)\r\n    };\r\n\r\n    const setToVillageFn = (e) => {\r\n        form.setFieldsValue({\r\n            village: e\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            title=\"បញ្ចូលអ្ន​កចត្តាឡីស័ក\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"addSubCase\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"personalInfo\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            {/* <Input placeholder=\"ឈ្មោះ\" /> */}\r\n                            <Select placeholder=\"អ្នកចត្តាឡីស័ក\" style={{ width: \"100%\" }} onChange={(e)=>console.log(e)}>\r\n                                {peopleData.map((people)=>(\r\n                                     <Option key={people?.id} value={people?.id}>{people?.lastName} {people?.firstName}</Option>\r\n                                ))}\r\n                               \r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"personalType\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n\r\n                            <Select placeholder=\"ប្រភេទ\" style={{ width: \"100%\" }}>\r\n                                <Option value=\"សហគមន៍\">សហគមន៍</Option>\r\n                                <Option value=\"តាមផ្លូងអាកាស\">តាមផ្លូងអាកាស</Option>\r\n                                <Option value=\"ពលករ\">ពលករ</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {/* <Col xs={24} md={{ span: 24}}>\r\n                        <Form.Item\r\n                            name=\"in\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n\r\n                            <Select placeholder=\"ចត្តាឡីស័ក\" style={{ width: \"100%\" }}>\r\n                                <Option value={true}>ចូល</Option>\r\n                                <Option value={false}>ចេញ</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col> */}\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"date_in\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <DatePicker placeholder=\"កាលបរិច្ឆេទចូល\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset:2 }}>\r\n                        <Form.Item\r\n                            name=\"date_out\"\r\n                            // rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <DatePicker placeholder=\"កាលបរិច្ឆេទចូល\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 24}}>\r\n                        <Form.Item\r\n                            name=\"others\"\r\n                            // rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n\r\n                            <Input placeholder=\"ផ្សេងៗ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useContext, useState, useEffect } from 'react'\r\nimport { Form, Modal, Input, Row, Col, Button, Select, DatePicker, message } from 'antd'\r\nimport { setEditSubQuarantine } from '../../../function/set'\r\nimport { useMutation } from '@apollo/client'\r\nimport { UPDATE_PEOPLE_BY_QUARANTINE } from '../../../graphql/quarantine'\r\nimport moment from 'moment'\r\nconst { Option } = Select\r\n\r\nexport default function EditSubQuarantine({ open, setOpen, data, quarantineId, peopleData, setRefetch }) {\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const [updateQuarantine,{loading}]=useMutation(UPDATE_PEOPLE_BY_QUARANTINE,{\r\n        onCompleted:()=>{\r\n            setRefetch()\r\n            message.success(\"កែប្រែទិន្នន័យជោគជ័យ\")\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        form.resetFields()\r\n        // setEditData(data)\r\n    }, [data, open])\r\n\r\n    const onFinish = (values) => {\r\n\r\n        updateQuarantine({\r\n            variables:{\r\n                in:values.in,\r\n                date_in:moment(values.date_in).format(),\r\n                date_out:moment(values.date_out).format(),\r\n                personalType:values.personalType,\r\n                // out_status: String,\r\n                personalInfo:values.personalInfo,\r\n                quarantineInfo:quarantineId,\r\n                others: values.others,\r\n                id:data.id\r\n            }\r\n        })\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            title=\"កែប្រែអ្នកចត្តាឡីស័ក\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"editSubQuarantine\"\r\n                initialValues={setEditSubQuarantine(data)}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"personalInfo\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            {/* <Input placeholder=\"ឈ្មោះ\" /> */}\r\n                            <Select placeholder=\"អ្នកចត្តាឡីស័ក\" style={{ width: \"100%\" }} onChange={(e) => console.log(e)}>\r\n                                {peopleData.map((people) => (\r\n                                    <Option key={people?.id} value={people?.id}>{people?.lastName} {people?.firstName}</Option>\r\n                                ))}\r\n\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"personalType\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n\r\n                            <Select placeholder=\"ប្រភេទ\" style={{ width: \"100%\" }}>\r\n                                <Option value=\"សហគមន៍\">សហគមន៍</Option>\r\n                                <Option value=\"តាមផ្លូងអាកាស\">តាមផ្លូងអាកាស</Option>\r\n                                <Option value=\"ពលករ\">ពលករ</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"date_in\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <DatePicker placeholder=\"កាលបរិច្ឆេទចូល\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"date_out\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <DatePicker placeholder=\"កាលបរិច្ឆេទចូល\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 24 }}>\r\n                        <Form.Item\r\n                            name=\"others\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n\r\n                            <Input placeholder=\"ផ្សេងៗ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import { gql } from '@apollo/client'\r\n\r\nexport const GET_ALL_PERSONINFO = gql`\r\nquery getPersonalInfoWithPagination($page:Int!,$limit:Int!,$keyword:String){\r\n    getPersonalInfoWithPagination(page:$page,limit:$limit,keyword:$keyword){\r\n        personalInfos{\r\n          id\r\n          firstName\r\n          lastName\r\n          age\r\n          gender\r\n          tel\r\n          nationality\r\n          occupation\r\n          idCard\r\n          profileImg\r\n          village\r\n          commune\r\n          district\r\n          interviewed\r\n          province\r\n          englishName\r\n          patientId\r\n          illness\r\n          relation\r\n          case{\r\n            id\r\n          }\r\n          direct\r\n          other\r\n          relapse\r\n          relapseAt\r\n          vaccinated\r\n          createdAt\r\n          updatedAt\r\n          currentState{\r\n            confirm\r\n            confirmedAt\r\n            death\r\n            deathAt\r\n            recovered\r\n            recoveredAt\r\n          }\r\n        }\r\n      paginator{\r\n        slNo\r\n        prev\r\n        next\r\n        perPage\r\n        totalPosts\r\n        totalPages\r\n        currentPage\r\n        hasPrevPage\r\n        hasNextPage\r\n        totalDocs\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_NEW_PERSON = gql`\r\nmutation createPersonalInfo(\r\n    $firstName:String,\r\n    $lastName:String,\r\n    $age:Int,\r\n    $gender:String,\r\n    $tel:String,\r\n    $nationality:String,\r\n    $occupation:String,\r\n    $idCard:String,\r\n    $village:String,\r\n    $commune:String,\r\n    $vaccinated:Int,\r\n    $district:String,\r\n    $province:String,\r\n    $case:ID!,\r\n    $direct:Boolean,\r\n    $other:String,\r\n    $interviewed:Boolean\r\n    $englishName:String\r\n    $patientId:String\r\n    $illness:String\r\n    $relation:String\r\n){\r\n    createPersonalInfo(newInfo:{\r\n            firstName:$firstName\r\n            lastName:$lastName\r\n            age:$age\r\n            gender:$gender\r\n            tel:$tel\r\n            nationality:$nationality\r\n            occupation:$occupation\r\n            idCard:$idCard\r\n            village:$village\r\n            commune:$commune\r\n            vaccinated:$vaccinated\r\n            district:$district\r\n            province:$province\r\n            case: $case\r\n            direct:$direct\r\n            other: $other\r\n            interviewed:$interviewed\r\n            englishName:$englishName\r\n            patientId:$patientId\r\n            illness:$illness\r\n            relation:$relation\r\n    }){\r\n      success\r\n      message\r\n    }\r\n  }\r\n`\r\n\r\nexport const GET_ALL_PERSONINFO_NO_LIMIT = gql`\r\nquery allPersonalInfos{\r\n  allPersonalInfos{\r\n    id\r\n    firstName\r\n    lastName\r\n    gender\r\n    nationality\r\n    occupation\r\n    village\r\n    commune\r\n    district\r\n    province\r\n    direct\r\n    currentState{\r\n      confirm\r\n      confirmedAt\r\n      recovered\r\n      recoveredAt\r\n      death\r\n      deathAt\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nexport const RECORD_SAMPLETEST = gql`\r\nmutation recordSampleTest(\r\n  $date:DateTime,\r\n  $times:Int,\r\n  $location:String,\r\n  $result:Boolean,\r\n  $symptom:String,\r\n  $other:String,\r\n  $reasonForTesting:String,\r\n  $symptomStart:DateTime,\r\n  $labFormCompletedBy:String,\r\n  $specimentType:String,\r\n  $laboratory:String,\r\n  $personalInfoId:ID!,\r\n){\r\n  recordSampleTest(sampleTest:{\r\n    date:$date\r\n    times:$times\r\n    location:$location\r\n    result:$result\r\n    symptom:$symptom\r\n    other:$other\r\n    reasonForTesting:$reasonForTesting\r\n    symptomStart:$symptomStart\r\n    labFormCompletedBy:$labFormCompletedBy\r\n    specimentType:$specimentType\r\n    laboratory:$laboratory\r\n  },personalInfoId:$personalInfoId){\r\n    message\r\n    success\r\n  }\r\n}\r\n`;\r\n\r\nexport const GET_PERSONALINFO_BY_ID = gql`\r\nquery getPersonalInfoById($id:ID!){\r\n  getPersonalInfoById(id:$id){\r\n    id\r\n\t\tfirstName\r\n    lastName\r\n    age\r\n    gender\r\n    tel\r\n    nationality\r\n    occupation\r\n    idCard\r\n    profileImg\r\n    village\r\n    commune\r\n    district\r\n    interviewed\r\n    province\r\n    englishName\r\n    patientId\r\n    illness\r\n    createdAt\r\n    relation\r\n    case{\r\n      id\r\n      caseName\r\n      village\r\n      commune\r\n      district\r\n      province\r\n      other\r\n      date\r\n      long\r\n      lat\r\n    }\r\n    direct\r\n    other\r\n    relapse\r\n    relapseAt\r\n    vaccinated\r\n    currentState{\r\n      confirm\r\n      confirmedAt\r\n      death\r\n      deathAt\r\n      recovered\r\n      recoveredAt\r\n    }\r\n    sampleTest{\r\n      id\r\n      date\r\n      times\r\n      location\r\n      result\r\n      symptom\r\n      other\r\n      reasonForTesting\r\n      symptomStart\r\n      labFormCompletedBy\r\n      specimentType\r\n      laboratory\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\n\r\nexport const DELETE_PERSONALINFO_BY_ID = gql`\r\nmutation deletePersonalInfo($id:ID!){\r\n  deletePersonalInfo(id:$id){\r\n    success\r\n    message\r\n  }\r\n}\r\n`;\r\n\r\nexport const GET_HOSPITAL_QUARANTINE_BY_PERSON = gql`\r\nquery getHospitalizationByPersonalInfo($personalId:ID!){\r\n  getHospitalizationByPersonalInfo(personalId:$personalId){\r\n    hospitalInfo{\r\n      id\r\n      date_in\r\n      date_out\r\n      others\r\n      hospitalInfo{\r\n        id\r\n        hospitalName\r\n        village\r\n        commune\r\n        district\r\n        province\r\n      }\r\n    }\r\n    quarantineInfo{\r\n      id\r\n      date_in\r\n      date_out\r\n      quarantineInfo{\r\n        id\r\n        locationName\r\n        village\r\n        commune\r\n        district\r\n        province\r\n      }\r\n      personalType\r\n      others\r\n\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\n\r\nexport const UPDATE_PERSON_BY_ID = gql`\r\nmutation updatePersonalInfo(\r\n    $firstName:String,\r\n    $interviewed:Boolean,\r\n    $lastName:String,\r\n    $age:Int,\r\n    $gender:String,\r\n    $other:String,\r\n    $tel:String,\r\n    $case:ID!,\r\n    $nationality:String,\r\n    $occupation:String,\r\n    $idCard:String,\r\n    $village:String,\r\n    $commune:String,\r\n    $district:String,\r\n    $province:String,\r\n    $vaccinated:Int,\r\n    $id:ID!\r\n    $englishName:String,\r\n    $patientId:String,\r\n    $relation:String\r\n    $illness:String\r\n){\r\n  updatePersonalInfo(updatedInfo:{\r\n    firstName:$firstName\r\n    interviewed:$interviewed\r\n    lastName:$lastName\r\n    age:$age\r\n    gender:$gender\r\n    other:$other\r\n    tel:$tel\r\n    case:$case\r\n    nationality:$nationality\r\n    occupation:$occupation\r\n    idCard:$idCard\r\n    village:$village\r\n    commune:$commune\r\n    district:$district\r\n    province:$province\r\n    vaccinated:$vaccinated\r\n    englishName:$englishName\r\n    patientId:$patientId\r\n    relation:$relation\r\n    illness:$illness\r\n  },id:$id){\r\n    success\r\n    message\r\n  }\r\n}\r\n`;\r\n\r\nexport const DELETE_SAMPLETEST = gql`\r\nmutation deleteSampleTest($sampleTestId:ID!,$personalInfoId:ID!){\r\n  deleteSampleTest(sampleTestId:$sampleTestId,personalInfoId:$personalInfoId){\r\n    success\r\n    message\r\n  }\r\n}\r\n\r\n`\r\n\r\nexport const UPDATE_CURRENTSTATE_BY_ID = gql`\r\nmutation updateCurrentState(\r\n  $personalInfoId:ID!,\r\n  $confirm: Boolean,\r\n  $confirmedAt: DateTime,\r\n  $recovered: Boolean,\r\n  $recoveredAt: DateTime,\r\n  $death: Boolean,\r\n  $deathAt: DateTime\r\n){\r\n  updateCurrentState(personalInfoId:$personalInfoId,updateValue:{\r\n    confirm:$confirm\r\n    confirmedAt:$confirmedAt\r\n    recovered:$recovered\r\n    recoveredAt:$recoveredAt\r\n    death:$death\r\n    deathAt:$deathAt\r\n  }){\r\n    success\r\n    message\r\n  }\r\n}\r\n`\r\n\r\n\r\nexport const GET_INTERVIEW = gql`\r\nquery getConfirmedPersonalInfoByInterviewWithPagination($interview: Boolean,$page:Int!,$limit:Int!,$keyword:String){\r\n  getConfirmedPersonalInfoByInterviewWithPagination(interview:$interview, page:$page,limit:$limit,keyword:$keyword){\r\n        personalInfos{\r\n          id\r\n          idCard\r\n          patientId\r\n          firstName\r\n          lastName\r\n          gender\r\n          age\r\n          nationality\r\n          village\r\n          commune\r\n          district\r\n          province\r\n          tel\r\n          other\r\n          interviewed\r\n          currentState{ \r\n            confirm\r\n          }\r\n        }\r\n      paginator{\r\n        slNo\r\n        prev\r\n        next\r\n        perPage\r\n        totalPosts\r\n        totalPages\r\n        currentPage\r\n        hasPrevPage\r\n        hasNextPage\r\n        totalDocs\r\n      }\r\n    }\r\n  }\r\n`;","import { Col, Row, Typography, Table, message } from 'antd'\r\nimport React, { useState, useContext, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport moment from 'moment'\r\nimport { subQuarantineCol } from './tableColumn/subQuarantineColumn'\r\nimport { PlusCircleOutlined, EditOutlined } from '@ant-design/icons';\r\nimport EditQuarantine from './modal/editQuarantine'\r\nimport AddSubQuarantine from './modal/addSubQuarantine'\r\nimport EditSubQuarantine from './modal/editSubQuarantine'\r\nimport { useMutation, useQuery } from '@apollo/client'\r\nimport { GET_ALL_PERSONINFO_NO_LIMIT} from '../../graphql/people'\r\nimport { GET_PERSON_BY_QUARANTINE } from '../../graphql/quarantine'\r\nimport { GET_QUARANTINE_BY_ID } from '../../graphql/quarantine'\r\nimport { DELETE_PERSON_BY_QUARANTINE } from '../../graphql/quarantine'\r\n\r\nconst {Title} = Typography\r\n\r\nexport default function SubQuarantine() {\r\n\r\n    const districtLatLong = [\r\n        {\r\n            district:\"ស្រុកក្រឡាញ់\",\r\n            lat:13.60472222544493,\r\n            long:103.45245485053685,\r\n        },\r\n        {\r\n            district:\"ស្រុកវ៉ារិន\",\r\n            lat:13.867238663711532,\r\n            long:103.87715707241854,\r\n        },\r\n        {\r\n            district:\"ស្រុកស្រិស្នំ\",\r\n            lat:13.852238272312373,\r\n            long: 103.53639730433542,\r\n        },\r\n        {\r\n            district:\"ស្រុកអង្គរជុំ\",\r\n            lat:13.713723851088394,\r\n            long:103.67219336284299,\r\n        },\r\n        {\r\n            district:\"ស្រុកបន្ទាយស្រី\",\r\n            lat:13.605041870228655,\r\n            long:103.97859822744759,\r\n        },\r\n        {\r\n            district:\"ស្រុកសូទ្រនិគម\",\r\n            lat:13.414442053292065,\r\n            long:104.10460200711728,\r\n        },\r\n        {\r\n            district:\"ស្រុកបាគង\",\r\n            lat:13.303005227138778,\r\n            long:103.9796463766434,\r\n        },\r\n        {\r\n            district:\"ស្រុកពួក\",\r\n            lat:13.440442720250852,\r\n            long:103.71973510206098,\r\n        },\r\n        {\r\n            district:\"ស្រុកជីក្រែង\",\r\n            lat:13.232399982258997,\r\n            long:104.33684532302983,\r\n        },\r\n        {\r\n            district:\"ស្រុកស្វាយលើ\",\r\n            lat:13.698615549661712,\r\n            long:104.21744370698126,\r\n        },\r\n        {\r\n            district:\"ស្រុកអង្គរធំ\",\r\n            lat:13.483410469370508,\r\n            long:103.87412317588966,\r\n        },\r\n        {\r\n            district:\"ស្រុកសៀមរាប\",\r\n            lat:13.332155324410378,\r\n            long:103.81891026025993,\r\n        },\r\n        \r\n    ]\r\n\r\n    let { id } = useParams();\r\n\r\n    const [peopleData, setPeopleData] = useState([])\r\n    const [updateSubData, setUpdateSubData] = useState({})\r\n\r\n    const [openEdit, setOpenEdit] = useState(false)\r\n    const [openAddSub, setOpenAddSub] = useState(false)\r\n    const [openEditSub, setOpenEditSub] = useState(false)\r\n    const [subQuarantineData, setSubQuarantineData] = useState([])\r\n    const [page, setPage] = useState(1)\r\n    const [limit, setLimit] = useState(10)\r\n    const [keyword, setKeyword] = useState(\"\")\r\n    const [quarantineData,setQuarantineData] = useState({})\r\n\r\n    const {data, refetch:refetchPerson} = useQuery(GET_ALL_PERSONINFO_NO_LIMIT,{\r\n        onCompleted:({allPersonalInfos})=>{\r\n            // console.log(allPersonalInfos)\r\n            setPeopleData(allPersonalInfos)\r\n        }\r\n    })\r\n\r\n    const {data:quarantine,loading, refetch:refetchQuarantine} = useQuery(GET_QUARANTINE_BY_ID,{\r\n        variables:{\r\n            id:id\r\n        },\r\n        onCompleted:({getQuarantineInfoById})=>{\r\n            // console.log(getQuarantineInfoById)\r\n            setQuarantineData(getQuarantineInfoById)\r\n        }\r\n    })\r\n\r\n    useEffect(()=>{\r\n        if(quarantine){\r\n            setQuarantineData(quarantine?.getQuarantineInfoById)\r\n        }\r\n    },[quarantine])\r\n\r\n    const {data:subQuarantine,refetch:refetchSub} = useQuery(GET_PERSON_BY_QUARANTINE,{\r\n        variables:{\r\n            page:page,\r\n            limit:limit,\r\n            keyword:keyword,\r\n            quarantineInfoId:id\r\n        },\r\n        onCompleted:({getQuarantineByQurantineIdWithPagination})=>{\r\n            // console.log(getQuarantineByQurantineIdWithPagination)\r\n            setSubQuarantineData(getQuarantineByQurantineIdWithPagination)\r\n        },\r\n        onError:({error})=>{\r\n            console.log(error)\r\n        }\r\n    })\r\n\r\n    useEffect(()=>{\r\n        if(subQuarantine){\r\n            setSubQuarantineData(subQuarantine?.getQuarantineByQurantineIdWithPagination)\r\n        }\r\n    }, [subQuarantine])\r\n\r\n    const [deleteQuarantine,{loading:deleteLoading}] = useMutation(DELETE_PERSON_BY_QUARANTINE,{\r\n        onCompleted:()=>{\r\n            refetchSub()\r\n            message.success(\"លុបទិន្នន័យជោគជ័យ\")\r\n        }\r\n    })\r\n\r\n    // console.log(headerData)\r\n    const handleDelete = (e) => {\r\n        //subQuarantineDataDispatch({type: \"DELETE_SUB_QUARANTINE\", payload: e})\r\n        deleteQuarantine({\r\n            variables:{\r\n                id:e\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleEditSubQuarantine = (e) => {\r\n        \r\n        setUpdateSubData(e)\r\n        setOpenEditSub(true)\r\n    }\r\n\r\n    const key = 'updatable';\r\n    const openMessage = () => {\r\n        message.loading({ content: 'Loading...', key });\r\n        setTimeout(() => {\r\n          message.success({ content: 'Loaded!', key, duration: 2 });\r\n        }, 1000);\r\n      };\r\n\r\n    return (\r\n        <>\r\n        {/* { loading ? message.loading(\"test\"): */}\r\n        <Row>\r\n            <EditQuarantine open={openEdit} setOpen={setOpenEdit} data={quarantineData} quarantineId={id} setRefetch={refetchQuarantine}/>\r\n            <AddSubQuarantine open={openAddSub} setOpen={setOpenAddSub} quarantineId={id} peopleData={peopleData} setRefetch={refetchSub} />\r\n            <EditSubQuarantine open={openEditSub} setOpen={setOpenEditSub} data={updateSubData} quarantineId={id} peopleData={peopleData} setRefetch={refetchSub} />\r\n            <Col\r\n                xs={24}\r\n            >\r\n                {/* <Title level={5}>ឈ្មោះករណី៖ \r\n                    <EditOutlined className=\"link\" onClick={() => setOpenEdit(true)}/>\r\n                </Title> */}\r\n            </Col>\r\n            <Col\r\n                xs={24}\r\n                md={11}\r\n                className=\"subCase-card\"\r\n            >\r\n                <p>ឈ្មោះមណ្ឌល៖ {quarantineData?.locationName} <EditOutlined className=\"link\" onClick={() => setOpenEdit(true)}/></p>\r\n                {/* <p>ទីតាំង៖ {quarantineData?.place}</p> */}\r\n                <p>អាចផ្ទុក៖ {quarantineData?.capacity}</p>\r\n                <p>អាសយដ្ឋាន៖ \r\n                    {quarantineData?.village !== \"ក្រៅសៀមរាប\" && quarantineData?.village + \",\"}\r\n                    {quarantineData?.commune !== \"ក្រៅសៀមរាប\" && quarantineData?.commune + \",\"}\r\n                    {quarantineData?.district !== \"ក្រៅសៀមរាប\" && quarantineData?.district + \",\"}\r\n                    {quarantineData?.province}\r\n                </p>\r\n                <p>អ្នកទទួលខុសត្រូវ៖ {quarantineData?.personInCharge?.lastName} {quarantineData?.personInCharge?.firstName}</p>\r\n                <p>លេខទូរស័ព្ទ៖ {quarantineData?.personInCharge?.tel}</p>\r\n                <p>ចំណាំ៖ {quarantineData?.other}</p>\r\n            </Col>\r\n            {/* <Col\r\n                xs={24}\r\n                md={{ span: 11, offset: 2 }}\r\n                className=\"subCase-card\"\r\n            >\r\n                <p>មណ្ឌលព្យាបាល៖ </p>\r\n                <EditOutlined className=\"link\" onClick={() => setOpenEdit(true)}/>\r\n                <p>ឈ្មោះមណ្ឌល៖​ </p>\r\n                <p>ទីតាំង៖ </p>\r\n                <p>កាលបរិច្ឆេទ​ចូល៖ </p>\r\n                <p>កាលបរិច្ឆេទចេញ៖ </p>\r\n            </Col> */}\r\n\r\n\r\n            <Col\r\n                xs={24}\r\n                style={{ marginTop: 20 }}\r\n            >\r\n                <Title level={5}>\r\n                    អ្នកធ្វើចត្តាឡីស័ក៖ \r\n\r\n                    <PlusCircleOutlined className=\"link\" onClick={() => setOpenAddSub(true)}/>\r\n                </Title>\r\n\r\n            </Col>\r\n            <Col\r\n                xs={24}\r\n                md={24}\r\n            >\r\n                <Table\r\n                    columns={subQuarantineCol({handleDelete, handleEditSubQuarantine,limit,page})}\r\n                    dataSource={subQuarantineData?.quarantines}\r\n                    rowKey={(record) => record.id}\r\n                    pagination={{\r\n                        total: subQuarantineData?.paginator?.totalDocs,\r\n                        // showSizeChanger: true,\r\n                        onChange:((page, pageSize) => {setPage(page);setLimit(pageSize)} )\r\n                    }}\r\n                    scroll={{ x: 240 }}\r\n                    sticky\r\n                />\r\n            </Col>\r\n        </Row>\r\n        {/* } */}\r\n        </>\r\n    )\r\n}\r\n","import { setPeople } from '../function/set'\r\n\r\nexport function peopleReducer(state, action) {\r\n    \r\n    let item = [...state]\r\n    let index = item.findIndex(e => e.id === action.payload)\r\n    let index1 = item.findIndex(e => e.id === action.payload.id)\r\n\r\n    switch (action.type) {\r\n        case 'ADD_PEOPLE':\r\n            item.push(setPeople(action.payload, item.length))\r\n            return item;\r\n        case 'EDIT_PEOPLE':\r\n            item[index1] = action.payload\r\n\r\n            return item;\r\n        case 'DELETE_PEOPLE':\r\n            item.splice(index, 1)\r\n\r\n            return item;\r\n        default:\r\n            throw new Error();\r\n    }\r\n}","import React, {useReducer, createContext} from 'react'\r\nimport { peopleReducer } from '../reducer/peopleReducer'\r\n\r\nexport const PeopleController = createContext()\r\n\r\nexport default function PeopleContext(props) {\r\n    const [peopleData, peopleDataDispatch] = useReducer(peopleReducer, [\r\n        {\r\n            id: \"1\",\r\n            idCard: \"123123123\",\r\n            name: \"ដាយ ឌឿន\",\r\n            gender: \"ប្រុស\",\r\n            age: 25,\r\n            nationality: \"ខ្មែរ\",\r\n            province: \"សៀមរាប\",\r\n            district: \"សៀមរាប\",\r\n            commune: \"ស្វាយដង្គំ\",\r\n            village: \"ល្វា\",\r\n            job: \"លក់ដូរ\",\r\n            tel: 10503375,\r\n            remark: \"មុខប្រជ្រុយ៣\",\r\n        },\r\n        {\r\n            id: \"2\",\r\n            idCard: \"123123123\",\r\n            name: \"ដាយ ឌឿន1\",\r\n            gender: \"ប្រុស\",\r\n            age: 25,\r\n            nationality: \"ខ្មែរ\",\r\n            province: \"សៀមរាប\",\r\n            district: \"សៀមរាប\",\r\n            commune: \"ស្វាយដង្គំ\",\r\n            village: \"ល្វា\",\r\n            job: \"លក់ដូរ\",\r\n            tel: 10503375,\r\n            remark: \"មុខប្រជ្រុយ៣\",\r\n        },\r\n    ])\r\n\r\n    return (\r\n        <PeopleController.Provider\r\n            value={{\r\n                peopleData,\r\n\r\n                peopleDataDispatch,\r\n            }}\r\n        >\r\n            {props.children}\r\n        </PeopleController.Provider>\r\n    )\r\n}\r\n","import { Space, Popconfirm } from 'antd'\r\nimport {\r\n    EyeOutlined,\r\n    DeleteOutlined\r\n} from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const peopleCol = ({handleDelete,limit,page}) => {\r\n    let no = ((page-1) * limit)\r\n    var array = [\r\n        {\r\n            title: 'ល.រ',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: 60,\r\n            render: (text, record, i) => (\r\n                <Space size=\"middle\">\r\n                    {no+= 1}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'អត្តសញ្ញាណប័ណ្ណ',\r\n            dataIndex: 'idCard',\r\n            key: 'idCard',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'ឈ្មោះ',\r\n            dataIndex: 'personalInfos',\r\n            key: 'personalInfos',\r\n            width: 200,\r\n            render: (text, record) => (\r\n                <span size=\"middle\">\r\n                    {\r\n                        record.lastName+\" \"+record.firstName\r\n                    }\r\n                </span>\r\n            ),\r\n        },\r\n        {\r\n            title: 'ភេទ',\r\n            dataIndex: 'gender',\r\n            key: 'gender',\r\n            width: 60,\r\n        },\r\n        {\r\n            title: 'អាយុ',\r\n            dataIndex: 'age',\r\n            key: 'age',\r\n            width: 60,\r\n        },\r\n        {\r\n            title: 'សញ្ជាតិ',\r\n            dataIndex: 'nationality',\r\n            key: 'nationality',\r\n            width: 70,\r\n        },\r\n        {\r\n            title: 'អាស័យដ្ឋាន',\r\n            dataIndex: 'address',\r\n            key: 'address',\r\n            width: 250,\r\n            render: (text, record) => (\r\n                <span>\r\n                    {(record.village !== \"ក្រៅសៀមរាប\") && record.village+\", \"}\r\n                    {record.commune !== \"ក្រៅសៀមរាប\" && record.commune+\", \"}\r\n                    {record.district !== \"ក្រៅសៀមរាប\" && record.district+\", \"}\r\n                    {record.province && record.province}\r\n                </span>\r\n            ),\r\n        },\r\n        {\r\n            title: 'មុខរបរ',\r\n            dataIndex: 'occupation',\r\n            key: 'occupation',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'ទូរស័ព្ទ',\r\n            dataIndex: 'tel',\r\n            key: 'tel',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'ចំណាំ',\r\n            dataIndex: 'other',\r\n            key: 'other',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'ការសម្ភាស',\r\n            dataIndex: 'interview',\r\n            key: 'interview',\r\n            width: 150,\r\n            render: (text, record) => (\r\n                <span>{record?.interviewed ? \"រួចរាល់\" : \"មិនទាន់រួចរាល់\"}</span>\r\n                )\r\n        },\r\n        {\r\n            key: 'action',\r\n            dataIndex: 'action',\r\n            fixed: 'right',\r\n            width: 80,\r\n            align: 'center',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    <Link className=\"link\" to={\"/subPeople/\" + record.id}><EyeOutlined /></Link>\r\n                    <Popconfirm\r\n                        title=\"តើអ្នកពិតចង់លុបមែនឬទេ?\"\r\n                        onConfirm={() => { handleDelete(record.id) }}\r\n                        okText=\"ចង់\"\r\n                        cancelText=\"មិនចង់\"\r\n                    >\r\n                        <span className=\"link\" style={{ color: \"red\" }}><DeleteOutlined /></span>\r\n                    </Popconfirm>\r\n\r\n                </Space>\r\n            ),\r\n        }\r\n    ]\r\n    return array\r\n}","import React, { useContext, useState, useEffect } from 'react'\r\nimport { Modal, Form, Input, Row, Col, Button, Select, Divider, DatePicker, message, Checkbox } from 'antd'\r\nimport { provinceData, districtData, communeData, villageData, genderData, nationalityData } from '../../../context/headerContext'\r\nimport { ListSelect } from '../../../static/own-comp'\r\nimport { convertToCommune, convertToDistrict, convertToVillage } from '../../../function/fn'\r\nimport { PeopleController } from '../../../context/peopleContext'\r\nimport { useQuery, useMutation } from '@apollo/client'\r\nimport { GET_ALL_CASES_NO_LIMIT } from '../../../graphql/case'\r\nimport { CREATE_NEW_PERSON } from '../../../graphql/people'\r\nimport { setAddPeople } from '../../../function/set'\r\nimport AddCase from '../../case/modal/addCase'\r\n\r\nconst { Option } = Select\r\n\r\nexport default function AddPeople({ open, setOpen,setRefetch }) {\r\n\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const [province, setProvince] = useState(\"\")\r\n    const [district, setDistrict] = useState(\"\")\r\n    const [commune, setCommune] = useState(\"\")\r\n    const [caseId, setCaseId] = useState(\"\")\r\n    const [caseData, setCaseData] = useState({})\r\n    const [allCases, setAllCases] = useState([])\r\n\r\n    const [openModal, setOpenModal] = useState(false)\r\n\r\n    const [createPersonalInfo, { loading: loadingCreate, error: errorCreate }] = useMutation(CREATE_NEW_PERSON, {\r\n        onCompleted: ({ createPersonalInfo }) => {\r\n            setRefetch()\r\n            message.success(\"បញ្ចូលទិន្នន័យជោគជ័យ\")\r\n        },\r\n        onError: (error) => {\r\n            console.log(error.message)\r\n        }\r\n    })\r\n\r\n    const { data, loading, error } = useQuery(GET_ALL_CASES_NO_LIMIT, {\r\n        onCompleted: ({ allCases }) => {\r\n            // console.log(allCases)\r\n            setAllCases(allCases)\r\n        }\r\n    })\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Success:', { ...setAddPeople(values), case: caseData.id, englishName: values.englishName, patientId: values.patientId, relation: values.relation, illness: values.illness });\r\n\r\n        if (caseId === 'new') {\r\n            createPersonalInfo({ variables: { ...setAddPeople(values), case: caseData.id } })\r\n        } else {\r\n            \r\n            createPersonalInfo({ variables: {...setAddPeople(values),englishName: values.englishName, patientId: values.patientId, relation: values.relation, illness: values.illness }})\r\n        }\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const setToGenderFn = (e) => {\r\n        form.setFieldsValue({\r\n            gender: e\r\n        });\r\n    };\r\n\r\n    const setToNationalityFn = (e) => {\r\n        form.setFieldsValue({\r\n            nationality: e\r\n        });\r\n    };\r\n\r\n    const setToProviceFn = (e) => {\r\n        form.setFieldsValue({\r\n            province: e,\r\n            district: null,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setProvince(e)\r\n        setDistrict(\"\")\r\n        setCommune(\"\")\r\n    };\r\n\r\n\r\n    const setToDistrictFn = (e) => {\r\n        form.setFieldsValue({\r\n            district: e,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setDistrict(e)\r\n        setCommune(\"\")\r\n    };\r\n\r\n    const setToCommuneFn = (e) => {\r\n        form.setFieldsValue({\r\n            commune: e,\r\n            village: null,\r\n        });\r\n\r\n        setCommune(e)\r\n    };\r\n\r\n    const setToVillageFn = (e) => {\r\n        form.setFieldsValue({\r\n            village: e\r\n        });\r\n    };\r\n\r\n    const setToCaseFn = (e) => {\r\n        form.setFieldsValue({\r\n            case: e\r\n        });\r\n        if (e === \"new\") {\r\n            setOpenModal(true)\r\n        }\r\n\r\n        setCaseId(e)\r\n    };\r\n\r\n    const callbackCase = (e) => {\r\n        if (e === \"\") {\r\n            setCaseId(e)\r\n            form.setFieldsValue({\r\n                case: null\r\n            })\r\n        } else {\r\n            setCaseData(e)\r\n            form.setFieldsValue({\r\n                caseName: e.caseName\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            title=\"បញ្ចូលប្រជាជនថ្មី\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <AddCase open={openModal} setOpen={setOpenModal} caseId={caseId} setCaseId={callbackCase} />\r\n            <Form\r\n                form={form}\r\n                name=\"addPeople\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"idCard\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"អត្តសញ្ញាណប័ណ្ណ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"patientId\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"អត្តលេខអ្នកជំងឺ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"lastName\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"គោត្តនាម\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"firstName\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"នាម\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 24 }}>\r\n                        <Form.Item\r\n                            name=\"englishName\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"ឈ្មោះជាភាសាឡាតាំង\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"gender\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n\r\n                            <ListSelect type={0} data={genderData} title=\"ភេទ\" setValue={setToGenderFn} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"age\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"អាយុ\" type=\"number\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"occupation\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"មុខរបរ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"tel\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"ទូរស័ព្ទ\" addonBefore=\"+855\" type=\"number\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"nationality\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <ListSelect type={0} data={nationalityData} title=\"សញ្ជាតិ\" setValue={setToNationalityFn} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"province\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <ListSelect type={1} data={provinceData} title=\"ខេត្ត/ក្រុង\" setValue={setToProviceFn} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {province === \"សៀមរាប\" ? (\r\n                        <>\r\n                            <Col xs={24} md={{ span: 11 }}>\r\n                                <Form.Item\r\n                                    name=\"district\"\r\n                                    rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                >\r\n                                    <ListSelect type={0} data={convertToDistrict(districtData)} title=\"ស្រុក/ខណ្ឌ\" setValue={setToDistrictFn} disabled={province !== \"សៀមរាប\" ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                                <Form.Item\r\n                                    name=\"commune\"\r\n                                    rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToCommune(district, communeData)} title=\"ឃុំ/សង្កាត់\" setValue={setToCommuneFn} disabled={district === \"\" || district === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 24 }}>\r\n                                <Form.Item\r\n                                    name=\"village\"\r\n                                    rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToVillage(commune, villageData)} title=\"ភូមិ\" setValue={setToVillageFn} disabled={commune === \"\" || commune === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </>\r\n                    ) : null}\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"relation\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"ត្រូវជា\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"vaccinated\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input type=\"number\" placeholder=\"ចំនួនចាក់វ៉ាក់សាំង\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"illness\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"ជំងឺប្រចាំកាយ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Divider>ពាក់ព័ន្ធករណី</Divider>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"case\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            {/* <Input type=\"number\" placeholder=\"ចំនួនចាក់វ៉ាក់សាំង\" /> */}\r\n\r\n                            <ListSelect type={4} data={allCases} title=\"ករណី\" setValue={setToCaseFn} disabled={caseId === \"new\" ? true : false} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {\r\n                        caseId === \"new\" ? (\r\n                            <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                                <Form.Item\r\n                                    name=\"caseName\"\r\n                                >\r\n                                    <Input disabled={true} style={{ backgroundColor: \"white\", color: \"black\" }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        ) : null\r\n                    }\r\n\r\n                    <Col xs={24} md={caseId === \"new\" ? { span: 24 } : { span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"direct\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Select placeholder=\"លក្ខណៈពាក់ព័ន្ធ\" style={{ width: \"100%\" }}>\r\n                                <Option value={true}>ផ្ទាល់</Option>\r\n                                <Option value={false}>ប្រយោល</Option>\r\n\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {/* <Divider>ស្ថានភាពបច្ចុប្បន្ន</Divider>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"status\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Select placeholder=\"ស្ថានភាព\" style={{ width: \"100%\" }}>\r\n                                <Option value=\"អវិជ្ជមាន\">អវិជ្ជមាន</Option>\r\n                                <Option value=\"វិជ្ជមាន\">វិជ្ជមាន</Option>\r\n\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11,offset:2 }}>\r\n                        <Form.Item\r\n                            name=\"date\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <DatePicker placeholder=\"កាលបរិច្ឆេទ\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"direct\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Select placeholder=\"លក្ខណៈពាក់ព័ន្ធ\" style={{ width: \"100%\" }}>\r\n                                <Option value={true}>ផ្ទាល់</Option>\r\n                                <Option value={false}>ប្រយោល</Option>\r\n\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span:11, offset:2 }}>\r\n                        <Form.Item\r\n                            name=\"otherOfStatus\"\r\n                            \r\n                        >\r\n                            <Input placeholder=\"ផ្សេងៗ\" />\r\n                        </Form.Item>\r\n                    </Col> */}\r\n\r\n\r\n\r\n                    <Col xs={24} md={{ span: 24 }}>\r\n                        <Form.Item\r\n                            name=\"other\"\r\n\r\n                        >\r\n                            <Input placeholder=\"ចំណាំ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n\r\n                    <Col xs={24}>\r\n                        <Form.Item\r\n                            name=\"interviewed\"\r\n                            valuePropName=\"checked\"\r\n                        >\r\n                            <Checkbox>សម្ភាសរួចរាល់</Checkbox>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import { gql } from '@apollo/client'\r\n\r\nexport const GET_ALL_HOSPITAL = gql`\r\n# Write your query or mutation here\r\nquery getHospitalInfoWithPagination($page:Int!,$limit:Int!,$keyword:String){\r\n  getHospitalInfoWithPagination(page:$page,limit:$limit,keyword:$keyword){\r\n    hospitalInfos{\r\n      id\r\n      hospitalName\r\n      village\r\n      commune\r\n      district\r\n      province\r\n      long\r\n      lat\r\n      createdAt\r\n      updatedAt\r\n      other\r\n      personInCharge{\r\n        firstName\r\n        lastName\r\n        position\r\n        others\r\n        tel\r\n      }\r\n    }\r\n    paginator{\r\n      slNo\r\n      prev\r\n      next\r\n      perPage\r\n      totalPosts\r\n      totalPages\r\n      currentPage\r\n      hasPrevPage\r\n      hasNextPage\r\n      totalDocs\r\n    }\r\n    \r\n  }\r\n}\r\n`;\r\n\r\nexport const CREATE_HOSPITALINFO = gql`\r\nmutation createHospitalInfo(\r\n    $hospitalName:String,\r\n    $village:String,\r\n    $commune:String,\r\n    $district:String,\r\n    $province:String,\r\n    $long:Float,\r\n    $lat:Float,\r\n    $other:String,\r\n    $firstName:String,\r\n    $lastName:String,\r\n    $position:String,\r\n    $others:String,\r\n    $tel:String,\r\n){\r\n    createHospitalInfo(newHospitalInfo:{\r\n      hospitalName:$hospitalName\r\n      village:$village\r\n      commune:$commune\r\n      district:$district\r\n      province:$province\r\n      long:$long\r\n      lat:$lat\r\n      other:$other\r\n      personInCharge:{\r\n        firstName:$firstName\r\n        lastName:$lastName\r\n        position:$position\r\n        others:$others\r\n        tel:$tel\r\n      }\r\n    }){\r\n      success\r\n      message\r\n      hospitalInfos{\r\n        id\r\n        hospitalName\r\n        village\r\n        commune\r\n        district\r\n        province\r\n        long\r\n        lat\r\n        other\r\n      \r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DELETE_HOSPITALINFO_BY_ID = gql`\r\nmutation deleteHospitalInfo($id:ID!){\r\n    deleteHospitalInfo(id:$id){\r\n      success\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_NEW_HOSPITALIZATION = gql`\r\nmutation createHospitalization(\r\n    $date_in:DateTime\r\n    $date_out:DateTime\r\n    $personalInfo:ID!\r\n    $hospitalInfo:ID!\r\n    $others:String\r\n    \r\n){\r\n  createHospitalization(newHospitalization:{\r\n    date_in:$date_in\r\n    date_out:$date_out\r\n    personalInfo:$personalInfo\r\n    hospitalInfo:$hospitalInfo\r\n    others:$others\r\n    \r\n  }){\r\n    success\r\n    message\r\n  }\r\n}\r\n`;\r\n\r\n\r\n\r\n\r\nexport const GET_PERSON_BY_HOSPITALINFO = gql`\r\nquery getQuarantineByHospitalIdIdWithPagination($page:Int!,$limit:Int!,$keyword:String,$hospitalId:ID!){\r\n  getQuarantineByHospitalIdIdWithPagination(page:$page,limit:$limit,keyword:$keyword,hospitalId:$hospitalId){\r\n    hospitalizations{\r\n      id\r\n      date_in\r\n      date_out\r\n      personalInfo{\r\n        id\r\n        firstName\r\n        lastName\r\n        village\r\n        commune\r\n        district\r\n        province\r\n        direct\r\n        currentState{\r\n          confirm\r\n          death\r\n          recovered\r\n        }\r\n      }\r\n      others\r\n    }\r\n    paginator{\r\n      slNo\r\n      prev\r\n      next\r\n      perPage\r\n      totalPosts\r\n      totalPages\r\n      currentPage\r\n      hasPrevPage\r\n      hasNextPage\r\n      totalDocs\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nexport const GET_HOSPITALINFO_BY_ID = gql`\r\nquery getHospitalInfoById($id:ID!){\r\n\tgetHospitalInfoById(id:$id){\r\n   \tid\r\n    hospitalName\r\n    village\r\n    commune\r\n    district\r\n    province\r\n    long\r\n    lat\r\n    other\r\n    personInCharge{\r\n      firstName\r\n      lastName\r\n      position\r\n      others\r\n      tel\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nexport const UPDATE_HOSPITALINFO_BY_ID = gql`\r\nmutation updateHospitalInfo(\r\n    $hospitalName:String\r\n    $village:String\r\n    $commune:String\r\n    $district:String\r\n    $province:String\r\n    $long:Float\r\n    $lat:Float\r\n    $other:String\r\n    $firstName:String\r\n    $lastName:String\r\n    $position:String\r\n    $others:String\r\n    $tel:String\r\n    $id:ID!\r\n){\r\n  updateHospitalInfo(updatedHospitalInfo:{\r\n    hospitalName:$hospitalName\r\n    village:$village\r\n    commune:$commune\r\n    district:$district\r\n    province:$province\r\n    long:$long\r\n    lat:$lat\r\n    other:$other\r\n    personInCharge:{\r\n      firstName:$firstName\r\n      lastName:$lastName\r\n      position:$position\r\n      others:$others\r\n      tel:$tel\r\n    }\r\n  },id:$id){\r\n    success\r\n    message\r\n  }\r\n}\r\n`;\r\n\r\nexport const UPDATE_PERSON_BY_HOSPITALINFO = gql`\r\nmutation updateHospitalization(\r\n    $date_in:DateTime,\r\n    $date_out:DateTime,\r\n    $personalInfo:ID!,\r\n    $hospitalInfo:ID!,\r\n    $others:String,\r\n    $id:ID!\r\n){\r\n\tupdateHospitalization(updatedHospitalization:{\r\n    date_in:$date_in\r\n    date_out:$date_out\r\n    personalInfo:$personalInfo\r\n    hospitalInfo:$hospitalInfo\r\n    others:$others\r\n  },id:$id){\r\n    success\r\n    message\r\n  }\r\n}\r\n`;\r\n\r\nexport const DELETE_PERSON_BY_HOSPITAL = gql`\r\nmutation deleteHospitalization($id:ID!){\r\n  deleteHospitalization(id:$id){\r\n    success\r\n    message\r\n  }\r\n}\r\n`;\r\n\r\nexport const ALL_HOSPIAL_INFO = gql`\r\n  query  allHospitalInfos{\r\n    allHospitalInfos{\r\n      id\r\n      hospitalName\r\n      village\r\n      commune\r\n      district\r\n      province\r\n      long\r\n      lat\r\n      other\r\n      createdAt\r\n      updatedAt\r\n      personInCharge{\r\n        firstName\r\n        lastName\r\n        position\r\n        tel\r\n      }\r\n    }\r\n  }\r\n`","import React, {useContext, useState} from 'react'\r\nimport { Row, Col, Button, Input, Table, message } from 'antd'\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { PeopleController } from '../context/peopleContext';\r\nimport { peopleCol } from '../component/people/tableColumn/peopleColumn';\r\nimport AddPeople from '../component/people/modal/addPeople';\r\nimport { useQuery,useMutation } from '@apollo/client';\r\nimport { DELETE_PERSONALINFO_BY_ID, GET_ALL_PERSONINFO } from '../graphql/people';\r\nimport { DELETE_HOSPITALINFO_BY_ID } from '../graphql/hospital';\r\n\r\nexport default function People() {\r\n\r\n    const [openAdd, setOpenAdd] = useState(false)\r\n    const [page, setPage] = useState(1)\r\n    const [limit, setLimit] = useState(10)\r\n    const [keyword, setKeyword] = useState(\"\")\r\n    // const [peopleData, setPeopleData] = useState([])\r\n\r\n    const {data,loading,error,refetch} = useQuery(GET_ALL_PERSONINFO,{\r\n        variables:{\r\n            page:page,\r\n            limit:limit,\r\n            keyword:keyword,\r\n        },\r\n        onCompleted:({getPersonalInfoWithPagination})=>{\r\n            console.log(getPersonalInfoWithPagination)\r\n            // setPeopleData(getPersonalInfoWithPagination)\r\n        }\r\n    })\r\n\r\n    const getPersonalInfoWithPagination = data?.getPersonalInfoWithPagination\r\n\r\n    const [deletePersonalInfo,{loading:deleteLoading}] = useMutation(DELETE_PERSONALINFO_BY_ID,{\r\n        onCompleted:()=>{\r\n            refetch()\r\n            message.success(\"លុបទិន្នន័យជោគជ័យ\")\r\n        }\r\n    })\r\n\r\n    const handleDelete = (e) => {\r\n        deletePersonalInfo({\r\n            variables:{\r\n                id:e\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <AddPeople open={openAdd} setOpen={setOpenAdd} setRefetch={refetch} />\r\n            <Col\r\n                xs={8}\r\n                md={18}\r\n            >\r\n                <Button\r\n                    type=\"primary\"\r\n                    onClick={() => setOpenAdd(true)}\r\n                >\r\n                    បញ្ចូលប្រជាជន\r\n                    <PlusOutlined />\r\n                </Button>\r\n            </Col>\r\n            <Col\r\n                xs={16}\r\n                md={6}\r\n            >\r\n                <Input.Search\r\n                    onChange={(e)=>setKeyword(e.target.value)}\r\n                    placeholder=\"ស្វែងរក...\"\r\n                />\r\n            </Col>\r\n            <Col\r\n                xs={24}\r\n                style={{ marginTop: 20 }}\r\n            >\r\n                <Table\r\n                    className=\"table-go-list\"\r\n                    columns={peopleCol({handleDelete,limit,page})}\r\n                    dataSource={getPersonalInfoWithPagination?.personalInfos}\r\n                    rowKey={record => record.id}\r\n                    pagination={{\r\n                        total: getPersonalInfoWithPagination?.paginator?.totalDocs,\r\n                        //pageSizeOptions:[\"10\", \"20\"],\r\n                        // showSizeChanger: true,\r\n                        current: getPersonalInfoWithPagination?.paginator?.currentPage,\r\n                        onChange: ((page, pageSize) => { setPage(page); setLimit(pageSize) })\r\n                    }}\r\n                    scroll={{ x: 1000 }} \r\n                    sticky \r\n                />\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n","import { Space, Popconfirm } from 'antd'\r\nimport {\r\n    EyeOutlined,\r\n    DeleteOutlined\r\n} from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nexport const testCol = ({handleSampleTestDelete}) => {\r\n    var array = [\r\n        {\r\n            title: 'ល.រ',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: 30,\r\n            render: (text, record, i) => (\r\n                <Space size=\"middle\">\r\n                    {i += 1}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'កាលបរិច្ឆេទ',\r\n            dataIndex: 'date',\r\n            key: 'date',\r\n            width: 80,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {moment(record.date).format(\"ថ្ងែDD ខែMM ឆ្នាំYYYY\")}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'លើកទី',\r\n            dataIndex: 'times',\r\n            key: 'times',\r\n            width: 40,\r\n        },\r\n        {\r\n            title: 'ទីតាំង',\r\n            dataIndex: 'location',\r\n            key: 'location',\r\n            width: 50,\r\n        },\r\n        {\r\n            title: 'លទ្ធផល',\r\n            dataIndex: 'sampleTest',\r\n            key: 'sampleTest',\r\n            width: 60,\r\n            render:(text,record)=>(\r\n                <Space size=\"middle\">\r\n                    { record?.result ? \"វិជ្ជមាន\":\"អវិជ្ជមាន\" }\r\n                    {/* {console.log(record?.result )} */}\r\n                </Space>\r\n            )\r\n        },\r\n        {\r\n            title: 'អាការ',\r\n            dataIndex: 'symptom',\r\n            key: 'symptom',\r\n            width: 50,\r\n        },\r\n        {\r\n            title: 'ផ្សេងៗ',\r\n            dataIndex: 'other',\r\n            key: 'other',\r\n            width: 100,\r\n        },\r\n        {\r\n            key: 'action',\r\n            dataIndex: 'action',\r\n            fixed: 'right',\r\n            width: 30,\r\n            align: 'center',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    <Popconfirm\r\n                        title=\"តើអ្នកពិតចង់លុបមែនឬទេ?\"\r\n                        onConfirm={() => { handleSampleTestDelete(record.id) }}\r\n                        okText=\"ចង់\"\r\n                        cancelText=\"មិនចង់\"\r\n                    >\r\n                        <span className=\"link\" style={{ color: \"red\" }}><DeleteOutlined /></span>\r\n                    </Popconfirm>\r\n\r\n                </Space>\r\n            ),\r\n        }\r\n    ]\r\n\r\n    return array\r\n}","import { Space, Popconfirm } from 'antd'\r\nimport {\r\n    EyeOutlined,\r\n    DeleteOutlined\r\n} from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const relatedCol = ({handleRelatedDelete}) => {\r\n    var array = [\r\n        {\r\n            title: 'ល.រ',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: 20,\r\n            render: (text, record, i) => (\r\n                <span size=\"middle\">\r\n                    {i += 1}\r\n                </span>\r\n            ),\r\n        },\r\n        {\r\n            title: 'ឈ្មោះ',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n            width: 80,\r\n            render: (text, record) => (\r\n                <span size=\"middle\">\r\n                    {record?.lastName+\" \" +record?.firstName}\r\n                </span>\r\n            ),\r\n        },\r\n        {\r\n            title: 'ភេទ',\r\n            dataIndex: 'gender',\r\n            key: 'gender',\r\n            width: 30,\r\n        },\r\n        {\r\n            title: 'អាស័យដ្ឆាន',\r\n            dataIndex: 'address',\r\n            key: 'address',\r\n            width:100,\r\n            render: (text, record) => (\r\n            <span>\r\n                    {(record.village !== \"ក្រៅសៀមរាប\") && record.village+\", \"}\r\n                    {record.commune !== \"ក្រៅសៀមរាប\" && record.commune+\", \"}\r\n                    {record.district !== \"ក្រៅសៀមរាប\" && record.district+\", \"}\r\n                    {record.province && record.province}\r\n                </span>\r\n            )\r\n        },\r\n        {\r\n            title: 'ស្ថានភាព',\r\n            dataIndex: 'status',\r\n            key: 'status',\r\n            width: 50,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {record?.currentState.confirm ? \"វិជ្ជមាន\" : \"អវិជ្ជមាន\"}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'លក្ខណៈពាក់ព័ន្ធ',\r\n            dataIndex: 'direct',\r\n            key: 'direct',\r\n            width:50,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {record?.direct? \"ផ្ទាល់\" : \"ប្រយោល\"}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            key: 'action',\r\n            dataIndex: 'action',\r\n            fixed: 'right',\r\n            width: 20,\r\n            align: 'center',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    <Link className=\"link\" to={\"/subPeople/\" + record.id}><EyeOutlined /></Link>\r\n                    <Popconfirm\r\n                        title=\"តើអ្នកពិតចង់លុបមែនឬទេ?\"\r\n                        onConfirm={() => { handleRelatedDelete(record.id) }}\r\n                        okText=\"ចង់\"\r\n                        cancelText=\"មិនចង់\"\r\n                    >\r\n                        <span className=\"link\" style={{ color: \"red\" }}><DeleteOutlined /></span>\r\n                    </Popconfirm>\r\n\r\n                </Space>\r\n            ),\r\n        }\r\n    ]\r\n\r\n    return array\r\n}","import React, { useContext, useState } from 'react'\r\nimport { Modal, Form, Input, Row, Col, Button, Select, Divider, DatePicker, message, Checkbox } from 'antd'\r\nimport { provinceData, districtData, communeData, villageData, genderData } from '../../../context/headerContext'\r\nimport { ListSelect } from '../../../static/own-comp'\r\nimport { convertToCommune, convertToDistrict, convertToVillage } from '../../../function/fn'\r\nimport { PeopleController } from '../../../context/peopleContext'\r\nimport { useQuery, useMutation } from '@apollo/client'\r\nimport { GET_ALL_CASES_NO_LIMIT } from '../../../graphql/case'\r\nimport { CREATE_NEW_PERSON } from '../../../graphql/people'\r\nimport { setAddPeople } from '../../../function/set'\r\n\r\nconst { Option } = Select\r\n\r\nexport default function AddPeopleRelated({ open, setOpen, caseId, setRefetch }) {\r\n\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const [province, setProvince] = useState(\"\")\r\n    const [district, setDistrict] = useState(\"\")\r\n    const [commune, setCommune] = useState(\"\")\r\n    const [allCases, setAllCases] = useState([])\r\n\r\n    const [createPersonalInfo, { loading: loadingCreate, error: errorCreate }] = useMutation(CREATE_NEW_PERSON, {\r\n        onCompleted: ({ createPersonalInfo }) => {\r\n            setRefetch()\r\n            message.success(\"បញ្ចូលទិន្នន័យជោគជ័យ\")\r\n            \r\n        },\r\n        onError: (error) => {\r\n            console.log(error.message)\r\n        }\r\n    })\r\n\r\n    const { data, loading, error } = useQuery(GET_ALL_CASES_NO_LIMIT, {\r\n        onCompleted: ({ allCases }) => {\r\n            // console.log(allCases)\r\n            setAllCases(allCases)\r\n\r\n        }\r\n    })\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Success:', setAddPeople(values));\r\n\r\n        createPersonalInfo({ variables: { ...setAddPeople(values), case: caseId,englishName: values.englishName, patientId: values.patientId, relation: values.relation, illness: values.illness  } })\r\n\r\n        setOpen(false)\r\n        // form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const setToGenderFn = (e) => {\r\n        form.setFieldsValue({\r\n            gender: e\r\n        });\r\n    };\r\n\r\n    const setToProviceFn = (e) => {\r\n        form.setFieldsValue({\r\n            province: e,\r\n            district: null,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setProvince(e)\r\n        setDistrict(\"\")\r\n        setCommune(\"\")\r\n    };\r\n\r\n\r\n    const setToDistrictFn = (e) => {\r\n        form.setFieldsValue({\r\n            district: e,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setDistrict(e)\r\n        setCommune(\"\")\r\n    };\r\n\r\n    const setToCommuneFn = (e) => {\r\n        form.setFieldsValue({\r\n            commune: e,\r\n            village: null,\r\n        });\r\n\r\n        setCommune(e)\r\n    };\r\n\r\n    const setToVillageFn = (e) => {\r\n        form.setFieldsValue({\r\n            village: e\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            title=\"បញ្ចូលអ្នកពាក់ព័ន្ធថ្មី\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"addPeople\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span:11 }}>\r\n                        <Form.Item\r\n                            name=\"idCard\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"អត្តសញ្ញាណប័ណ្ណ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"patientId\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"អត្តលេខអ្នកជំងឺ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"lastName\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"គោត្តនាម\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"firstName\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"នាម\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"gender\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n\r\n                            <ListSelect type={0} data={genderData} title=\"ភេទ\" setValue={setToGenderFn} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"age\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"អាយុ\" type=\"number\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"occupation\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"មុខរបរ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"tel\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"ទូរស័ព្ទ\" addonBefore=\"+855\" type=\"number\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"nationality\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"សញ្ជាតិ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"province\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <ListSelect type={1} data={provinceData} title=\"ខេត្ត/ក្រុង\" setValue={setToProviceFn} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {province === \"សៀមរាប\" ? (\r\n                        <>\r\n                            <Col xs={24} md={{ span: 11 }}>\r\n                                <Form.Item\r\n                                    name=\"district\"\r\n                                    rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                >\r\n                                    <ListSelect type={0} data={convertToDistrict(districtData)} title=\"ស្រុក/ខណ្ឌ\" setValue={setToDistrictFn} disabled={province !== \"សៀមរាប\" ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                                <Form.Item\r\n                                    name=\"commune\"\r\n                                    rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToCommune(district, communeData)} title=\"ឃុំ/សង្កាត់\" setValue={setToCommuneFn} disabled={district === \"\" || district === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 24 }}>\r\n                                <Form.Item\r\n                                    name=\"village\"\r\n                                    rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToVillage(commune, villageData)} title=\"ភូមិ\" setValue={setToVillageFn} disabled={commune === \"\" || commune === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </>\r\n                    ) : null}\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"relation\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"ត្រូវជា\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset:2 }}>\r\n                        <Form.Item\r\n                            name=\"vaccinated\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input type=\"number\" placeholder=\"ចំនួនចាក់វ៉ាក់សាំង\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"illness\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"ជំងឺប្រចាំកាយ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Divider>ពាក់ព័ន្ធករណី</Divider>\r\n                    {/* <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"case\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Select placeholder=\"ករណី\" style={{ width: \"100%\" }} onChange={(e)=> console.log(e)}>\r\n                                {\r\n                                    allCases.map((c)=>(\r\n                                        <Option value={c.id}>{c.caseName}</Option>\r\n                                    ))\r\n                                }\r\n\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col> */}\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 0 }}>\r\n                        <Form.Item\r\n                            name=\"direct\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Select placeholder=\"លក្ខណៈពាក់ព័ន្ធ\" style={{ width: \"100%\" }}>\r\n                                <Option value={true}>ផ្ទាល់</Option>\r\n                                <Option value={false}>ប្រយោល</Option>\r\n\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {/* <Divider>ស្ថានភាពបច្ចុប្បន្ន</Divider>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"status\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Select placeholder=\"ស្ថានភាព\" style={{ width: \"100%\" }}>\r\n                                <Option value=\"អវិជ្ជមាន\">អវិជ្ជមាន</Option>\r\n                                <Option value=\"វិជ្ជមាន\">វិជ្ជមាន</Option>\r\n\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11,offset:2 }}>\r\n                        <Form.Item\r\n                            name=\"date\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <DatePicker placeholder=\"កាលបរិច្ឆេទ\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"direct\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Select placeholder=\"លក្ខណៈពាក់ព័ន្ធ\" style={{ width: \"100%\" }}>\r\n                                <Option value={true}>ផ្ទាល់</Option>\r\n                                <Option value={false}>ប្រយោល</Option>\r\n\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span:11, offset:2 }}>\r\n                        <Form.Item\r\n                            name=\"otherOfStatus\"\r\n                            \r\n                        >\r\n                            <Input placeholder=\"ផ្សេងៗ\" />\r\n                        </Form.Item>\r\n                    </Col> */}\r\n\r\n\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"other\"\r\n\r\n                        >\r\n                            <Input placeholder=\"ចំណាំ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n\r\n                    <Col xs={24}>\r\n                        <Form.Item\r\n                            name=\"confirm\"\r\n                            valuePropName=\"checked\"\r\n                        >\r\n                            <Checkbox>សម្ភាសរួចរាល់</Checkbox>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { Modal, Form, Input, Row, Col, Button, Select, DatePicker,message } from 'antd'\r\nimport { provinceData, districtData, communeData, villageData, genderData } from '../../../context/headerContext'\r\nimport { ListSelect } from '../../../static/own-comp'\r\nimport { convertToCommune, convertToDistrict, convertToVillage } from '../../../function/fn'\r\nimport { PeopleController } from '../../../context/peopleContext'\r\nimport { useMutation,useQuery } from '@apollo/client';\r\nimport { RECORD_SAMPLETEST } from '../../../graphql/people';\r\nimport moment from 'moment'\r\n\r\nconst {Option} = Select\r\n\r\nexport default function AddPeopleTest({ open, setOpen, peopleID, setRefetch }) {\r\n    //const { peopleDataDispatch } = useContext(PeopleController)\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const [recordSampleTest,{loading}] = useMutation(RECORD_SAMPLETEST,{\r\n        onCompleted:()=>{\r\n            message.success(\"បញ្ចូលទិន្នន័យជោគជ័យ\")\r\n        }\r\n    })\r\n\r\n    // console.log(peopleID)\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Success:', values);\r\n\r\n        //peopleDataDispatch({ type: 'ADD_PEOPLE', payload: values })\r\n\r\n        recordSampleTest({\r\n            variables:{\r\n                date:moment(values.date).format(),\r\n                times: parseInt(values.times),\r\n                location:values.location,\r\n                result:values.result,\r\n                symptom:values.symptom,\r\n                other:values.other,\r\n                personalInfoId:peopleID,\r\n                labFormCompletedBy: values.labFormCompletedBy,\r\n                laboratory:values.laboratory,\r\n                reasonForTesting:values.reasonForTesting,\r\n                symptomStart:moment(values.symptomStart).format(),\r\n            }\r\n        })\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            title=\"បញ្ចូលការធ្វើតេស្ត\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"addPeopleTest\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"date\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <DatePicker placeholder=\"កាលបវិច្ឆេទការធ្វើតេស្ត\" style={{width:\"100%\"}}/>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"location\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"ទីតាំង\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"reasonForTesting\"\r\n                            // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            {/* <Input placeholder=\"លទ្ធផល\" /> */}\r\n                            <Select placeholder=\"បំណងធ្វើតេស្ត\" style={{ width: \"100%\" }}>\r\n                                <Option value=\"សង្ស័យ\">សង្ស័យ</Option>\r\n                                <Option value=\"រលាកសួត\">រលាកសួត</Option>\r\n                                <Option value=\"បុគ្គលិកពេទ្យ\">បុគ្គលិកពេទ្យ</Option>\r\n                                <Option value=\"ពលករ\">ពលករ</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset:2 }}>\r\n                        <Form.Item\r\n                            name=\"symptomStart\"\r\n                            // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <DatePicker placeholder=\"កាលបរិច្ឆេទរោគសញ្ញា\" style={{width:\"100%\"}}/>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"specimentType\"\r\n                            // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            {/* <Input placeholder=\"លទ្ធផល\" /> */}\r\n                            <Select placeholder=\"វត្ថុវិភាគ\" style={{ width: \"100%\" }}>\r\n                                <Option value=\"ច្រមុះ\">ច្រមុះ</Option>\r\n                                <Option value=\"បំពង់ក\">បំពង់ក</Option>\r\n                                <Option value=\"ផ្សេងទៀត\">ផ្សេងទៀត</Option>\r\n                                \r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset:2 }}>\r\n                        <Form.Item\r\n                            name=\"laboratory\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                             <Select placeholder=\"មន្ទីពិសោធន៍\" style={{ width: \"100%\" }}>\r\n                                <Option value=\"IPC\">IPC</Option>\r\n                                <Option value=\"NIPH\">NIPH</Option>\r\n                                <Option value=\"PKML\">PKML</Option>\r\n                                <Option value=\"MKB\">MKB</Option>\r\n                                <Option value=\"BTB\">BTB</Option>\r\n                                <Option value=\"TKV\">TKV</Option>\r\n                                <Option value=\"SRH\">SRH</Option>\r\n                                <Option value=\"NBTC\">NBTC</Option>\r\n                                <Option value=\"SHV\">SHV</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"result\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            {/* <Input placeholder=\"លទ្ធផល\" /> */}\r\n                            <Select placeholder=\"លទ្ធផល\" style={{ width: \"100%\" }}>\r\n                                <Option value={true}>វិជ្ជមាន</Option>\r\n                                <Option value={false}>អវិជ្ជមាន</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"times\"\r\n                            // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input type=\"number\" placeholder=\"លើក\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 24}}>\r\n                        <Form.Item\r\n                            name=\"symptom\"\r\n                            // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"អាការ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n\r\n                    <Col xs={24} md={{ span: 24 }}>\r\n                        <Form.Item\r\n                            name=\"other\"\r\n                        \r\n                        >\r\n                            <Input placeholder=\"ចំណាំ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11}}>\r\n                        <Form.Item\r\n                            name=\"labFormCompletedBy\"\r\n                            // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"បំពេញទំរង់ដោយ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useContext,useState,useEffect } from 'react'\r\nimport { Modal, Form, Input, Row, Col, Button,Select, message,Divider} from 'antd';\r\nimport { HospitalController } from '../../../context/hospitalContext'\r\nimport { ListSelect } from '../../../static/own-comp'\r\nimport { provinceData, districtData, communeData, villageData } from '../../../context/headerContext'\r\nimport { convertToDistrict, convertToCommune, convertToVillage } from '../../../function/fn'\r\nimport { useMutation } from '@apollo/client';\r\nimport { CREATE_HOSPITALINFO } from '../../../graphql/hospital';\r\nimport { setAddHospital } from '../../../function/set';\r\n\r\nconst { Option } = Select;\r\n\r\nexport default function AddHospital({ open, setOpen, hospitalId, setHospitalId, setRefetch }) {\r\n    //const { hospitalDataDispatch } = useContext(HospitalController)\r\n\r\n    let [form] = Form.useForm() \r\n\r\n    const [province, setProvince] = useState(\"\")\r\n    const [district, setDistrict] = useState(\"\")\r\n    const [commune, setCommune] = useState(\"\")\r\n\r\n    const [createHospitalInfo,{loading,error}] = useMutation(CREATE_HOSPITALINFO,{\r\n        onCompleted:({createHospitalInfo})=>{\r\n            setRefetch()\r\n            message.success(\"បញ្ចូលទិន្នន័យជោគជ័យ\")\r\n            if (hospitalId === \"new\") {\r\n                setHospitalId(createHospitalInfo.hospitalInfos)\r\n            }else{\r\n                setRefetch()\r\n            }\r\n        },\r\n        onError:(error)=>{\r\n            console.log(error.message)\r\n        }\r\n    })\r\n\r\n    // useEffect(() => {\r\n    //     // form.setFieldsValue(\r\n    //     //     setEditSubCase(data)\r\n    //     // )\r\n    //     setProvince(data?.province)\r\n    //     setDistrict(data?.district)\r\n    //     setCommune(data?.commune)\r\n    // }, [data])\r\n\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Success:', values);\r\n\r\n        //hospitalDataDispatch({ type: 'ADD_HOSPITAL', payload: values })\r\n        createHospitalInfo({variables:setAddHospital(values)})\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const setToGenderFn = (e) => {\r\n        form.setFieldsValue({\r\n            gender: e\r\n        });\r\n    };\r\n\r\n    const setToProviceFn = (e) => {\r\n        form.setFieldsValue({\r\n            province: e,\r\n            district: null,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setProvince(e)\r\n        setDistrict(\"\")\r\n        setCommune(\"\")\r\n    };\r\n\r\n\r\n    const setToDistrictFn = (e) => {\r\n        form.setFieldsValue({\r\n            district: e,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setDistrict(e)\r\n        setCommune(\"\")\r\n    };\r\n\r\n    const setToCommuneFn = (e) => {\r\n        form.setFieldsValue({\r\n            commune: e,\r\n            village: null,\r\n        });\r\n\r\n        setCommune(e)\r\n    };\r\n\r\n    const setToVillageFn = (e) => {\r\n        form.setFieldsValue({\r\n            village: e\r\n        });\r\n    };\r\n\r\n    const setPeopleHospitalFn = () => {\r\n        setOpen(false)\r\n        setHospitalId(\"\")\r\n        // console.log(locationId)\r\n    }\r\n\r\n\r\n    return (\r\n        <Modal\r\n            title=\"បញ្ចូលមន្ទីរពេទ្យថ្មី\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => hospitalId === \"new\" ? setPeopleHospitalFn() : setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"addHospital\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"hospitalName\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"ឈ្មោះមណ្ឌល\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2  }}>\r\n                        <Form.Item\r\n                            name=\"province\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <ListSelect type={1} data={provinceData} title=\"ខេត្ត/ក្រុង\" setValue={setToProviceFn} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {province === \"សៀមរាប\" ? (\r\n                        <>\r\n                            <Col xs={24} md={{ span: 11}}>\r\n                                <Form.Item\r\n                                    name=\"district\"\r\n                                    rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                >\r\n                                    <ListSelect type={0} data={convertToDistrict(districtData)} title=\"ស្រុក/ខណ្ឌ\" setValue={setToDistrictFn} disabled={province !== \"សៀមរាប\" ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 11, offset:2 }}>\r\n                                <Form.Item\r\n                                    name=\"commune\"\r\n                                    rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToCommune(district, communeData)} title=\"ឃុំ/សង្កាត់\" setValue={setToCommuneFn} disabled={district === \"\" || district === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24}>\r\n                                <Form.Item\r\n                                    name=\"village\"\r\n                                    rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToVillage(commune, villageData)} title=\"ភូមិ\" setValue={setToVillageFn} disabled={commune === \"\" || commune === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </>\r\n                    ) : null}\r\n\r\n                    <Col xs={24}>\r\n                        <Form.Item\r\n                            name=\"other\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"ចំណាំ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"long\"\r\n                            // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input type=\"number\" placeholder=\"longtitude\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 , offset:2}}>\r\n                        <Form.Item\r\n                            name=\"lat\"\r\n                            // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input type=\"number\" placeholder=\"latitude\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Divider>អ្នកទទួលខុសត្រូវ</Divider>\r\n                    <Col xs={24} md={{ span: 11, offset: 0 }}>\r\n                        <Form.Item\r\n                            name=\"firstName\"\r\n                            // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"នាម\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"lastName\"\r\n                            // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"គោត្តនាម\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 0 }}>\r\n                        <Form.Item\r\n                            name=\"position\"\r\n                            // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"តួនាទីការងារ\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"tel\"\r\n                            // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"លេខទូរស័ព្ទ\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 0 }}>\r\n                        <Form.Item\r\n                            name=\"others\"\r\n                            //rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"ផ្សេងៗ\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { Form, Modal, Input, Row, Col, Button, Select, message, DatePicker } from 'antd'\r\nimport { HospitalController } from '../../../context/hospitalContext'\r\nimport { ListSelect } from '../../../static/own-comp'\r\nimport { provinceData, districtData, communeData, villageData, genderData } from '../../../context/headerContext'\r\nimport { convertToDistrict, convertToCommune, convertToVillage, convertHospitalToSelect } from '../../../function/fn'\r\nimport { useMutation, useQuery } from '@apollo/client'\r\nimport { CREATE_NEW_HOSPITALIZATION } from '../../../graphql/hospital'\r\nimport { ALL_HOSPIAL_INFO } from '../../../graphql/hospital'\r\nimport AddHospital from '../../hospital/modal/addHospital'\r\nimport moment from 'moment'\r\nimport {setPeopleHospital} from '../../../function/set'\r\n\r\nconst { Option } = Select\r\n\r\nexport default function AddPeopleHospital({ open, setOpen, peopleId }) {\r\n\r\n    let [form] = Form.useForm()\r\n    \r\n    const [hospitalId, setHospitalId] = useState(\"\")\r\n    const [hospital, setHospital] = useState({})\r\n    const [openModal, setOpenModal] = useState(false)\r\n\r\n    const [createHospitalization, { loading }] = useMutation(CREATE_NEW_HOSPITALIZATION, {\r\n        onCompleted: () => {\r\n            message.success(\"បញ្ចូលទិន្នន័យជោគជ័យ\")\r\n        }\r\n    })\r\n\r\n    const { data, loading: loadingHospital, error } = useQuery(ALL_HOSPIAL_INFO, {\r\n        onCompleted: ({ allHospitalInfos }) => {\r\n\r\n        }\r\n    })\r\n\r\n    const allHospitalInfos = data?.allHospitalInfos\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Success:', values);\r\n        console.log(hospital)\r\n        console.log(hospitalId)\r\n\r\n        if(hospitalId === 'new'){\r\n            createHospitalization({\r\n                variables:{...setPeopleHospital(values), personalInfo: peopleId, hospitalInfo: hospital.id}\r\n            })\r\n        }else {\r\n            createHospitalization({\r\n                variables:{...setPeopleHospital(values), personalInfo: peopleId}\r\n            })\r\n        }\r\n\r\n        // //subHospitalDataDispatch({ type: 'ADD_SUB_HOSPITAL', payload: {...values, hospitalId: hospitalId} })\r\n        // createHospitalization({\r\n        //     variables: {\r\n        //         in: values.in,\r\n        //         date_in: moment(values.date_in).format(),\r\n        //         date_out: moment(values.date_out).format(),\r\n        //         personalInfo: values.personalInfo,\r\n        //         hospitalInfo: hospitalId,\r\n        //         others: values.others,\r\n        //         // date:moment(values.date).format(),\r\n        //         // times:values.times,\r\n        //         // location:values.location,\r\n        //         // result:values.result,\r\n        //         // symptom:values.symptom,\r\n        //         // other:values.other\r\n        //     }\r\n        // })\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const setToPeopleHospitalFn = (e) => {\r\n        console.log(e)\r\n        form.setFieldsValue({\r\n            hospitalInfo: e\r\n        });\r\n        if (e === \"new\") {\r\n            setOpenModal(true)\r\n        }\r\n\r\n        setHospitalId(e)\r\n    };\r\n\r\n    const callbackLocation = (e) => {\r\n        // console.log(\"test\",e)\r\n        if(e === \"\"){\r\n            setHospitalId(e)\r\n            form.setFieldsValue({\r\n                hospitalName: null\r\n            })\r\n        }else {\r\n            setHospital(e)\r\n            form.setFieldsValue({\r\n                hospitalName: e.hospitalName\r\n            })\r\n        }\r\n    }\r\n\r\n    console.log(allHospitalInfos)\r\n\r\n    return (\r\n        <Modal\r\n            title=\"បញ្ចូលធ្វើតេស្ត\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <AddHospital open={openModal} setOpen={setOpenModal} hospitalId={hospitalId} setHospitalId={callbackLocation} />\r\n            <Form\r\n                form={form}\r\n                name=\"addSubHospital\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"hospitalInfo\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <ListSelect type={6} data={convertHospitalToSelect(allHospitalInfos)} title=\"មណ្ឌលព្យាបាល\" setValue={setToPeopleHospitalFn} disabled={hospitalId === \"new\" ? true : false} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    {\r\n                        hospitalId === \"new\" ? (\r\n                            <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                                <Form.Item\r\n                                    name=\"hospitalName\"\r\n                                >\r\n                                    <Input disabled={true} style={{ backgroundColor: \"white\", color: \"black\" }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        ) : null\r\n                    }\r\n\r\n                    {/* <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"personalType\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n\r\n                            <Select placeholder=\"ប្រភេទ\" style={{ width: \"100%\" }}>\r\n                                <Option value=\"សហគមន៍\">សហគមន៍</Option>\r\n                                <Option value=\"តាមផ្លូងអាកាស\">តាមផ្លូងអាកាស</Option>\r\n                                <Option value=\"ពលករ\">ពលករ</Option>  \r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col> */}\r\n\r\n                    {/* <Col xs={24} md={{ span: 11,offset:2}}>\r\n                        <Form.Item\r\n                            name=\"in\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n\r\n                            <Select placeholder=\"តេស្ត\" style={{ width: \"100%\" }}>\r\n                                <Option value={true}>ចូល</Option>\r\n                                <Option value={false}>ចេញ</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col> */}\r\n\r\n                    <Col xs={24} md={hospitalId === \"new\" ? { span: 11, offset: 0 } : {span: 11, offset: 2}}>\r\n                        <Form.Item\r\n                            name=\"date_in\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <DatePicker placeholder=\"កាលបរិច្ឆេទចូល\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={hospitalId === \"new\" ? { span: 11, offset: 2 } : {span: 24}}>\r\n                        <Form.Item\r\n                            name=\"date_out\"\r\n                            // rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <DatePicker placeholder=\"កាលបរិច្ឆេទចេញ\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 24 }}>\r\n                        <Form.Item\r\n                            name=\"others\"\r\n                        //rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n\r\n                            <Input placeholder=\"ផ្សេងៗ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { Modal, Form, Input, Row, Col, Button, Select, DatePicker } from 'antd'\r\nimport { provinceData, districtData, communeData, villageData, genderData } from '../../../context/headerContext'\r\nimport { ListSelect } from '../../../static/own-comp'\r\nimport { convertToCommune, convertToDistrict, convertToVillage } from '../../../function/fn'\r\nimport { PeopleController } from '../../../context/peopleContext'\r\n\r\nexport default function AddPeopleStatus({ open, setOpen }) {\r\n    const { peopleDataDispatch } = useContext(PeopleController)\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Success:', values);\r\n\r\n        peopleDataDispatch({ type: 'ADD_PEOPLE', payload: values })\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            title=\"បញ្ចូលស្ថានភាពបច្ចុប្បន្ន\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"addPeopleStatus\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"date\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <DatePicker placeholder=\"កាលបវិច្ឆេទ\" style={{width:\"100%\"}}/>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"status\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"ស្ថានភាព\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 24 }}>\r\n                        <Form.Item\r\n                            name=\"remark\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"ផ្សេងៗ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { Form, Modal, Input, Row, Col, Button, Select, DatePicker, message } from 'antd'\r\nimport { QuarantineController } from '../../../context/quarantineContext'\r\nimport { ListSelect } from '../../../static/own-comp'\r\nimport { provinceData, districtData, communeData, villageData, genderData } from '../../../context/headerContext'\r\nimport { convertToDistrict, convertToCommune, convertToVillage, convertQurantineToSelect } from '../../../function/fn'\r\nimport { useMutation, useQuery } from '@apollo/client'\r\nimport { CREATE_PERSON_QUARANTINE } from '../../../graphql/quarantine'\r\nimport { setAddSubQuarantine } from '../../../function/set'\r\nimport { ALL_QUARANTINEINFO } from '../../../graphql/quarantine'\r\nimport moment from 'moment'\r\nimport AddQuarantine from '../../quarantine/modal/addQuarantine'\r\n\r\nconst { Option } = Select\r\n\r\nexport default function AddPeopleQuarantine({ open, setOpen, peopleId }) {\r\n    const { subQuarantineDataDispatch } = useContext(QuarantineController)\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const [province, setProvince] = useState(\"\")\r\n    const [district, setDistrict] = useState(\"\")\r\n    const [commune, setCommune] = useState(\"\")\r\n\r\n    const [quarantineId, setQuarantineId] = useState(\"\")\r\n    const [quarantine, setQuarantine] = useState({})\r\n    const [openModal, setOpenModal] = useState(false)\r\n\r\n    const [createQuarantine, { data }] = useMutation(CREATE_PERSON_QUARANTINE, {\r\n        onCompleted: ({ createQuarantine }) => {\r\n            message.success(\"បញ្ចូលទិន្នន័យជោគជ័យ\")\r\n        }\r\n    })\r\n\r\n    const { data: quarantineInfo, loading: loadingQuarantine, error } = useQuery(ALL_QUARANTINEINFO, {\r\n        onCompleted: ({ allQuarantineInfos }) => {\r\n\r\n        }\r\n    })\r\n\r\n    const allQuarantineInfos = quarantineInfo?.allQuarantineInfos\r\n    console.log(allQuarantineInfos)\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Success:', setAddSubQuarantine(values));\r\n        console.log(quarantine)\r\n        console.log(quarantineId)\r\n\r\n        if (quarantineId === 'new') {\r\n            createQuarantine({\r\n                variables: { ...setAddSubQuarantine(values), personalInfo: peopleId, quarantineInfo: quarantine.id }\r\n            })\r\n        } else {\r\n            createQuarantine({\r\n                variables: { ...setAddSubQuarantine(values), personalInfo: peopleId }\r\n            })\r\n        }\r\n\r\n        // createQuarantine({\r\n        //     variables: {\r\n        //         in: values.in,\r\n        //         date_in: moment(values.date_in).format(),\r\n        //         date_out: moment(values.date_out).format(),\r\n        //         personalType: values.personalType,\r\n        //         personalInfo: values.personalInfo,\r\n        //         quarantineInfo: quarantineId,\r\n        //         others: values.others,\r\n        //     }\r\n        // })\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const setToGenderFn = (e) => {\r\n        form.setFieldsValue({\r\n            gender: e\r\n        });\r\n    };\r\n\r\n    const setToProviceFn = (e) => {\r\n        form.setFieldsValue({\r\n            province: e,\r\n            district: null,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setProvince(e)\r\n        setDistrict(\"\")\r\n        setCommune(\"\")\r\n    };\r\n\r\n\r\n    const setToDistrictFn = (e) => {\r\n        form.setFieldsValue({\r\n            district: e,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setDistrict(e)\r\n        setCommune(\"\")\r\n    };\r\n\r\n    const setToCommuneFn = (e) => {\r\n        form.setFieldsValue({\r\n            commune: e,\r\n            village: null,\r\n        });\r\n\r\n        setCommune(e)\r\n    };\r\n\r\n    const setToVillageFn = (e) => {\r\n        form.setFieldsValue({\r\n            village: e\r\n        });\r\n    };\r\n\r\n    const setToQuarantineFn = (e) => {\r\n        console.log(e)\r\n        form.setFieldsValue({\r\n            quarantineInfo: e\r\n        });\r\n        if (e === \"new\") {\r\n            setOpenModal(true)\r\n        }\r\n\r\n        setQuarantineId(e)\r\n    };\r\n\r\n    const callbackLocation = (e) => {\r\n        // console.log(\"test\",e)\r\n        if (e === \"\") {\r\n            setQuarantineId(e)\r\n            form.setFieldsValue({\r\n                quarantineInfo: null\r\n            })\r\n        } else {\r\n            setQuarantine(e)\r\n            form.setFieldsValue({\r\n                quarantineName: e.locationName\r\n            })\r\n        }\r\n\r\n        console.log(e)\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            title=\"បញ្ចូលអ្ន​កចត្តាឡីស័ក\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <AddQuarantine open={openModal} setOpen={setOpenModal} quarantineId={quarantineId} setQuarantineId={callbackLocation} />\r\n            <Form\r\n                form={form}\r\n                name=\"addSubCase\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"quarantineInfo\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <ListSelect type={6} data={convertQurantineToSelect(allQuarantineInfos)} title=\"មណ្ឌលព្យាបាល\" setValue={setToQuarantineFn} disabled={quarantineId === \"new\" ? true : false} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {\r\n                        quarantineId === \"new\" ? (\r\n                            <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                                <Form.Item\r\n                                    name=\"quarantineName\"\r\n                                >\r\n                                    <Input disabled={true} style={{ backgroundColor: \"white\", color: \"black\" }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        ) : null\r\n                    }\r\n\r\n                    <Col xs={24} md={quarantineId === \"new\" ? { span: 24 } : { span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"personalType\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n\r\n                            <Select placeholder=\"ប្រភេទ\" style={{ width: \"100%\" }}>\r\n                                <Option value=\"សហគមន៍\">សហគមន៍</Option>\r\n                                <Option value=\"តាមផ្លូងអាកាស\">តាមផ្លូងអាកាស</Option>\r\n                                <Option value=\"ពលករ\">ពលករ</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {/* <Col xs={24} md={{ span: 24}}>\r\n                        <Form.Item\r\n                            name=\"in\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n\r\n                            <Select placeholder=\"ចត្តាឡីស័ក\" style={{ width: \"100%\" }}>\r\n                                <Option value={true}>ចូល</Option>\r\n                                <Option value={false}>ចេញ</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col> */}\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 0 }}>\r\n                        <Form.Item\r\n                            name=\"date_in\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <DatePicker placeholder=\"កាលបរិច្ឆេទចូល\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"date_out\"\r\n                        // rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <DatePicker placeholder=\"កាលបរិច្ឆេទចេញ\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 24 }}>\r\n                        <Form.Item\r\n                            name=\"others\"\r\n                        // rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n\r\n                            <Input placeholder=\"ផ្សេងៗ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { Modal, Form, Input, Row, Col, Button, Select } from 'antd'\r\nimport { provinceData, districtData, communeData, villageData, genderData } from '../../../context/headerContext'\r\nimport { ListSelect } from '../../../static/own-comp'\r\nimport { convertToCommune, convertToDistrict, convertToVillage } from '../../../function/fn'\r\nimport { PeopleController } from '../../../context/peopleContext'\r\n\r\nexport default function AddPeopleHistory({ open, setOpen }) {\r\n    const { peopleDataDispatch } = useContext(PeopleController)\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Success:', values);\r\n\r\n        peopleDataDispatch({ type: 'ADD_PEOPLE', payload: values })\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const DateHolder = [\"កាលបរិច្ឆេទចូល\", \"កាលបរិច្ឆេទចេញ\"]\r\n\r\n    return (\r\n        <Modal\r\n            title=\"បញ្ចូលប្រវត្តិដំណើរករណី\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"addPeopleHistory\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"caseName\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"ឈ្មោះករណី\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"place\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"ទីតាំង\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} md={{ span: 24}}>\r\n                        <Form.Item\r\n                            name=\"ទំនាក់ទំនង\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"ទំនាក់ទំនង\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import { gql } from '@apollo/client'\r\n\r\nexport const GET_ALL_LOCATION = gql`\r\nquery{\r\n    allAffectedLocations{\r\n      id\r\n      affectedLocationName\r\n      village\r\n      commune\r\n      district\r\n      province\r\n      other\r\n      open\r\n      openAt\r\n      closeAt\r\n      long\r\n      lat\r\n      coorporate\r\n      infected\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_NEW_LOCATION = gql`\r\nmutation createAffectedLocation(\r\n  $affectedLocationName:String,\r\n  $village:String,\r\n  $commune:String,\r\n  $district:String,\r\n  $province:String,\r\n  $other:String,\r\n  $long:Float,\r\n  $lat:Float,\r\n){\r\n  createAffectedLocation(newAffectedLocation:{\r\n\t\taffectedLocationName:$affectedLocationName\r\n    village:$village\r\n    commune:$commune\r\n    district:$district\r\n    province:$province\r\n    other:$other\r\n    long:$long\r\n    lat:$lat\r\n  }){\r\n    message\r\n    success\r\n    affectedLocation{\r\n      id\r\n      affectedLocationName\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nexport const GET_AFFECTED_LOCATION_PAGINATION = gql`\r\nquery getAffectedLocationWithPagination($page:Int!,$limit:Int!,$keyword:String){\r\n  getAffectedLocationWithPagination(page:$page,limit:$limit,keyword:$keyword){\r\n    affectedLocations{\r\n      id\r\n      affectedLocationName\r\n      village\r\n      commune\r\n      district\r\n      province\r\n      other\r\n      open\r\n      openAt\r\n      closeAt\r\n      long\r\n      lat\r\n      coorporate\r\n      infected\r\n\r\n    }\r\n    paginator{\r\n      slNo\r\n\t\t\tprev\r\n      next\r\n      perPage\r\n      totalPosts\r\n      totalPages\r\n      currentPage\r\n      hasPrevPage\r\n      hasNextPage\r\n      totalDocs\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\n\r\nexport const DELETE_AFFECTEDLOCATION_BY_ID = gql`\r\nmutation deleteAffectedLocation($id:ID!){\r\n  deleteAffectedLocation(id:$id){\r\n    success\r\n    message\r\n  }\r\n}\r\n\r\n`\r\n\r\nexport const UPDATE_AFFECTEDLOCATION_BY_ID = gql`\r\nmutation updateAffectedLocation(\r\n  $id:ID!,\r\n  $affectedLocationName: String,\r\n  $village: String,\r\n  $commune: String,\r\n  $district: String,\r\n  $province: String,\r\n  $other: String,\r\n  $openAt: DateTime,\r\n  $closeAt: DateTime,\r\n  $long: Float,\r\n  $lat: Float,\r\n  ){\r\n  updateAffectedLocation(id:$id, updatedAffectedLocation:{\r\naffectedLocationName: $affectedLocationName\r\nvillage: $village\r\ncommune: $commune\r\ndistrict: $district\r\nprovince: $province\r\nother: $other\r\nopenAt: $openAt\r\ncloseAt: $closeAt\r\nlong: $long\r\nlat: $lat\r\n  }){\r\n    success\r\n    message\r\n  }\r\n}`\r\n","import React, { useContext, useState } from 'react'\r\nimport { Modal, Form, Input, DatePicker, Row, Col, Button, message } from 'antd'\r\nimport { CaseController } from '../../../context/caseContext'\r\nimport { provinceData, districtData, communeData, villageData, genderData } from '../../../context/headerContext'\r\nimport { ListSelect } from '../../../static/own-comp'\r\nimport { convertToCommune, convertToDistrict, convertToVillage } from '../../../function/fn'\r\nimport { CREATE_NEW_LOCATION } from '../../../graphql/location'\r\nimport { GET_ALL_CASES_NO_LIMIT } from '../../../graphql/case'\r\nimport { GET_ALL_PERSONINFO_NO_LIMIT } from '../../../graphql/people'\r\nimport { useMutation, useQuery } from '@apollo/client'\r\nimport moment from 'moment'\r\n\r\nexport default function AddLocation({ open, setOpen, setRefetch,  locationId, setLocationId }) {\r\n\r\n\r\n    const [province, setProvince] = useState(\"\")\r\n    const [district, setDistrict] = useState(\"\")\r\n    const [commune, setCommune] = useState(\"\")\r\n    const [allCases, setAllCases] = useState([])\r\n    const [peopleData, setPeopleData] = useState([])\r\n\r\n    console.log(locationId)\r\n\r\n    //const { caseDataDispatch } = useContext(CaseController)\r\n    const [createAffectedLocation, { loading: createLoading }] = useMutation(CREATE_NEW_LOCATION, {\r\n        onCompleted: ({ createAffectedLocation }) => {\r\n            message.success(\"បញ្ចូលទិន្នន័យជោគជ័យ\")\r\n            console.log(createAffectedLocation)\r\n            \r\n            if (locationId === \"new\") {\r\n                setLocationId(createAffectedLocation.affectedLocation)\r\n            }else{\r\n                setRefetch()\r\n            }\r\n        },\r\n        onError: (error) => {\r\n            console.log(error.message)\r\n        }\r\n    })\r\n\r\n    const { data, loading } = useQuery(GET_ALL_CASES_NO_LIMIT, {\r\n        onCompleted: ({ allCases }) => {\r\n            console.log(allCases)\r\n            setAllCases(allCases)\r\n        }\r\n    })\r\n\r\n    const { data: people } = useQuery(GET_ALL_PERSONINFO_NO_LIMIT, {\r\n        onCompleted: ({ allPersonalInfos }) => {\r\n            // console.log(allPersonalInfos)\r\n            setPeopleData(allPersonalInfos)\r\n        }\r\n    })\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Success:', values);\r\n        createAffectedLocation({\r\n            variables: {\r\n                affectedLocationName: values.affectedLocationName,\r\n                village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n                commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n                district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n                province: values.province === undefined ? \"\" : values.province,\r\n                other: values.other,\r\n                long: parseFloat(values.long),\r\n                lat: parseFloat(values.lat),\r\n            }\r\n        })\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const setToProviceFn = (e) => {\r\n        form.setFieldsValue({\r\n            province: e,\r\n            district: null,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setProvince(e)\r\n        setDistrict(\"\")\r\n        setCommune(\"\")\r\n    };\r\n\r\n\r\n    const setToDistrictFn = (e) => {\r\n        form.setFieldsValue({\r\n            district: e,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setDistrict(e)\r\n        setCommune(\"\")\r\n    };\r\n\r\n    const setToCommuneFn = (e) => {\r\n        form.setFieldsValue({\r\n            commune: e,\r\n            village: null,\r\n        });\r\n\r\n        setCommune(e)\r\n    };\r\n\r\n    const setToVillageFn = (e) => {\r\n        form.setFieldsValue({\r\n            village: e\r\n        });\r\n    };\r\n\r\n    const setToCaseFn = (e) => {\r\n        form.setFieldsValue({\r\n            case: e\r\n        });\r\n    };\r\n\r\n    const setToPeopleFn = (e) => {\r\n        form.setFieldsValue({\r\n            personalInfo: e\r\n        });\r\n    };\r\n\r\n    const setPeopleLocationFn = () => {\r\n        setOpen(false)\r\n        setLocationId(\"\")\r\n        console.log(locationId)\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            title=\"បញ្ចូលទីតាំង\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => locationId === \"new\" ? setPeopleLocationFn() : setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"addCase\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"affectedLocationName\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"ទីតាំង\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n\r\n\r\n                    {/* <Select placeholder=\"លទ្ធផល\" style={{ width: \"100%\" }}>\r\n                        <Option value={true}>វិជ្ជមាន</Option>\r\n                        <Option value={false}>អវិជ្ជមាន</Option>\r\n                    </Select> */}\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"province\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <ListSelect type={1} data={provinceData} title=\"ខេត្ត/ក្រុង\" setValue={setToProviceFn} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {province === \"សៀមរាប\" ? (\r\n                        <>\r\n                            <Col xs={24} md={{ span: 11 }}>\r\n                                <Form.Item\r\n                                    name=\"district\"\r\n                                    rules={[{ required: true, message: 'Please input your username!' }]}\r\n                                >\r\n                                    <ListSelect type={0} data={convertToDistrict(districtData)} title=\"ស្រុក/ខណ្ឌ\" setValue={setToDistrictFn} disabled={province !== \"សៀមរាប\" ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                                <Form.Item\r\n                                    name=\"commune\"\r\n                                    rules={[{ required: true, message: 'Please input your username!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToCommune(district, communeData)} title=\"ឃុំ/សង្កាត់\" setValue={setToCommuneFn} disabled={district === \"\" || district === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 24 }}>\r\n                                <Form.Item\r\n                                    name=\"village\"\r\n                                    rules={[{ required: true, message: 'Please input your username!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToVillage(commune, villageData)} title=\"ភូមិ\" setValue={setToVillageFn} disabled={commune === \"\" || commune === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </>\r\n                    ) : null}\r\n\r\n                    <Col xs={24}>\r\n                        <Form.Item\r\n                            name=\"other\"\r\n                        >\r\n                            <Input placeholder=\"ចំណាំ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"long\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input type=\"number\" placeholder=\"longtitude\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"lat\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input type=\"number\" placeholder=\"latitude\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import {gql} from '@apollo/client'\r\n\r\nexport const CREATE_NEW_HISTORYLOCATION = gql`\r\nmutation createHistoryLocation(\r\n    $case:ID!\r\n    $personalInfo:ID!\r\n    $date:DateTime\r\n    $affectedLocationId:ID!\r\n    $type:String\r\n    $other:String\r\n){\r\n    createHistoryLocation(newHistoryLocation:{\r\n      case:$case\r\n      personalInfo:$personalInfo\r\n      date:$date\r\n      affectedLocationId:$affectedLocationId\r\n      type:$type\r\n      other:$other\r\n    }){\r\n      message\r\n      success\r\n    }\r\n  }\r\n`\r\n\r\nexport const GET_HISTORYLOCATION_BY_PERSON = gql`\r\nquery getHistoryLocationByPersonalInfoId($personalId:ID!){\r\n\tgetHistoryLocationByPersonalInfoId(personalId:$personalId){\r\n    affectedLocationId{\r\n      id\r\n      affectedLocationName\r\n    }\r\n    case{\r\n      id\r\n    }\r\n    personalInfo{\r\n      id\r\n    }\r\n    date\r\n    type\r\n  }\r\n}\r\n`","import React, { useContext, useState } from 'react'\r\nimport { Modal, Form, Input, DatePicker, Row, Col, Button, message } from 'antd'\r\nimport { CaseController } from '../../../context/caseContext'\r\nimport { provinceData, districtData, communeData, villageData, genderData } from '../../../context/headerContext'\r\nimport { ListSelect } from '../../../static/own-comp'\r\nimport { convertToCommune, convertToDistrict, convertToVillage } from '../../../function/fn'\r\nimport { setPeopleLocation } from '../../../function/set'\r\nimport { CREATE_NEW_LOCATION} from '../../../graphql/location'\r\nimport { GET_ALL_CASES_NO_LIMIT } from '../../../graphql/case'\r\nimport { GET_ALL_LOCATION} from '../../../graphql/location'\r\nimport { useMutation,useQuery } from '@apollo/client'\r\nimport AddLocation from '../../location/modal/addLocation'\r\nimport { CREATE_NEW_HISTORYLOCATION } from '../../../graphql/historylocation'\r\nimport moment from 'moment'\r\n\r\nexport default function AddPeopleLocation({ open, setOpen, setRefetch, caseId, peopleId }) {\r\n\r\n    \r\n    const [province, setProvince] = useState(\"\")\r\n    const [district, setDistrict] = useState(\"\")\r\n    const [commune, setCommune] = useState(\"\")\r\n    const [locationData, setLocationData] = useState([])\r\n    const [locationId, setLocationId] = useState(\"\")\r\n    const [location, setLocation] = useState({})\r\n    const [openModal, setOpenModal] = useState(false)\r\n\r\n    //const { caseDataDispatch } = useContext(CaseController)\r\n    const [createHistoryLocation, { loading:createLoading}] = useMutation(CREATE_NEW_HISTORYLOCATION, {\r\n        onCompleted: ({ createCase }) => {\r\n            setRefetch()\r\n            message.success(\"បញ្ចូលទិន្នន័យជោគជ័យ\")\r\n        },\r\n        onError: (error) => {\r\n            console.log(error.message)\r\n        }\r\n    })\r\n\r\n    const {data, loading,error} = useQuery(GET_ALL_LOCATION,{\r\n        onCompleted:({allAffectedLocations})=>{\r\n        console.log(allAffectedLocations)\r\n        setLocationData(allAffectedLocations)\r\n    }})\r\n\r\n    // console.log(locationData)\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Success:', {...values, case: caseId, personalInfo: peopleId});\r\n        // console.log(location)\r\n\r\n        if(locationId === 'new'){\r\n            createHistoryLocation({\r\n                variables:{...setPeopleLocation(values), case: caseId, personalInfo: peopleId, affectedLocationId: location.id}\r\n            })\r\n        }else {\r\n            createHistoryLocation({\r\n                variables:{...setPeopleLocation(values), case: caseId, personalInfo: peopleId, affectedLocationId:values.affectedLocationId}\r\n            })\r\n        }\r\n\r\n        \r\n\r\n        // createCase({\r\n        //     variables: {\r\n        //         caseName: values.caseName,\r\n        //         village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n        //         commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n        //         district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n        //         province: values.province === undefined ? \"ក្រៅសៀមរាប\" : values.province,\r\n        //         date: moment(values.date).format(),\r\n        //         lat: parseFloat(values.lat),\r\n        //         long: parseFloat(values.long),\r\n        //         other: values.other,\r\n        //     }\r\n        // })\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const setToProviceFn = (e) => {\r\n        form.setFieldsValue({\r\n            province: e,\r\n            district: null,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setProvince(e)\r\n        setDistrict(\"\")\r\n        setCommune(\"\")\r\n    };\r\n\r\n\r\n    const setToDistrictFn = (e) => {\r\n        form.setFieldsValue({\r\n            district: e,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setDistrict(e)\r\n        setCommune(\"\")\r\n    };\r\n\r\n    const setToCommuneFn = (e) => {\r\n        form.setFieldsValue({\r\n            commune: e,\r\n            village: null,\r\n        });\r\n\r\n        setCommune(e)\r\n    };\r\n\r\n    const setToVillageFn = (e) => {\r\n        form.setFieldsValue({\r\n            village: e\r\n        });\r\n    };\r\n\r\n    const setToCaseFn = (e) => {\r\n        form.setFieldsValue({\r\n            case: e\r\n        });\r\n    };\r\n\r\n    const setToPeopleFn = (e) => {\r\n        form.setFieldsValue({\r\n            personalInfo: e\r\n        });\r\n    };\r\n\r\n    const setLocationTypeFn = (e) => {\r\n        form.setFieldsValue({\r\n            type: e\r\n        });\r\n    };\r\n\r\n    const setToLocationFn = (e) => {\r\n        form.setFieldsValue({\r\n            affectedLocationId: e\r\n        });\r\n        if (e === \"new\") {\r\n            setOpenModal(true)\r\n        }\r\n\r\n        setLocationId(e)\r\n    };\r\n\r\n    const callbackLocation = (e) => {\r\n        // console.log(\"test\",e)\r\n        if(e === \"\"){\r\n            setLocationId(e)\r\n            form.setFieldsValue({\r\n                affectedLocationId: null\r\n            })\r\n        }else {\r\n            setLocation(e)\r\n            form.setFieldsValue({\r\n                affectedLocationName: e.affectedLocationName\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            title=\"បញ្ចូលទីតាំង\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <AddLocation open={openModal} setOpen={setOpenModal} locationId={locationId} setLocationId={callbackLocation} />\r\n            <Form\r\n                form={form}\r\n                name=\"addCase\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{span: 11, offset: 0}}>\r\n                        <Form.Item\r\n                            name=\"affectedLocationId\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            {/* <Input placeholder=\"ទីតាំង\" /> */}\r\n                            <ListSelect type={5} data={locationData} title=\"ទីតាំង\" setValue={setToLocationFn} disabled={locationId === \"new\" ? true : false} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {\r\n                        locationId === \"new\" ? (\r\n                            <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                                <Form.Item\r\n                                    name=\"affectedLocationName\"\r\n                                >\r\n                                    <Input disabled={true} style={{backgroundColor: \"white\", color: \"black\"}} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        ) : null\r\n                    }\r\n                    \r\n                    <Col xs={24} md={locationId === \"new\" ? {span: 11, offset: 0} : {span: 11, offset: 2}}>\r\n                        <Form.Item\r\n                            name=\"type\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            {/* <Input placeholder=\"ទីតាំង\" /> */}\r\n                            <ListSelect type={1} data={[\r\n                                {title: \"ផ្ទាល់\"},\r\n                                {title: \"ឆ្លងកាត់\"}\r\n                            ]} title=\"ប្រភេទ\" setValue={setLocationTypeFn}/>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={locationId === \"new\" ? {span: 11, offset: 2} : {span: 24}}>\r\n                        <Form.Item\r\n                            name=\"date\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <DatePicker placeholder=\"កាលបរិច្ឆេទចូល\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n\r\n                    <Col xs={24}>\r\n                        <Form.Item\r\n                            name=\"other\"\r\n                        >\r\n                            <Input placeholder=\"ចំណាំ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    \r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useContext, useState, useEffect } from 'react'\r\nimport { Modal, Form, Input, Row, Col, Button, Select, Divider, DatePicker, message, Checkbox } from 'antd'\r\nimport { provinceData, districtData, communeData, villageData, genderData, nationalityData } from '../../../context/headerContext'\r\nimport { ListSelect } from '../../../static/own-comp'\r\nimport { convertToCommune, convertToDistrict, convertToVillage } from '../../../function/fn'\r\nimport { useQuery, useMutation } from '@apollo/client'\r\nimport { GET_ALL_CASES_NO_LIMIT } from '../../../graphql/case'\r\nimport { CREATE_NEW_PERSON } from '../../../graphql/people'\r\nimport { UPDATE_PERSON_BY_ID } from '../../../graphql/people'\r\nimport { setEditPeople } from '../../../function/set'\r\nimport AddCase from '../../case/modal/addCase'\r\n\r\nconst { Option } = Select\r\n\r\nexport default function EditPeople({ open, setOpen, personId, personalData, setRefetch }) {\r\n\r\n    // console.log(personalData)\r\n    let [form] = Form.useForm()\r\n\r\n    const [province, setProvince] = useState(\"\")\r\n    const [district, setDistrict] = useState(\"\")\r\n    const [commune, setCommune] = useState(\"\")\r\n    const [caseId, setCaseId] = useState(\"\")\r\n    const [caseData, setCaseData] = useState({})\r\n    const [allCases, setAllCases] = useState([])\r\n\r\n    const [openModal, setOpenModal] = useState(false)\r\n\r\n    const [updatePersonalInfo, { loading: loadingCreate, error: errorCreate }] = useMutation(UPDATE_PERSON_BY_ID, {\r\n        onCompleted: ({ createPersonalInfo }) => {\r\n            setRefetch()\r\n            message.success(\"កែប្រែទិន្នន័យជោគជ័យ\")\r\n        },\r\n        onError: (error) => {\r\n            console.log(error.message)\r\n        }\r\n    })\r\n\r\n    const { data, loading, error } = useQuery(GET_ALL_CASES_NO_LIMIT, {\r\n        onCompleted: ({ allCases }) => {\r\n            // console.log(allCases)\r\n            setAllCases(allCases)\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        form.resetFields()\r\n        if (personalData !== undefined) {\r\n\r\n            // form.setFieldsValue(setEditCase(personalData))\r\n            setProvince(personalData?.province)\r\n            setDistrict(personalData?.district)\r\n            setCommune(personalData?.commune)\r\n        }\r\n\r\n    }, [personalData, open])\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Success:', { ...setEditPeople(values), case: caseData.id,englishName: values.englishName, patientId: values.patientId, relation: values.relation, illness: values.illness});\r\n        // illness: values.illness\r\n        updatePersonalInfo({\r\n            variables: {\r\n                firstName: values.firstName,\r\n                lastName: values.lastName,\r\n                age: parseInt(values.age),\r\n                gender: values.gender,\r\n                tel: values.tel,\r\n                nationality: values.nationality,\r\n                occupation: values.occupation,\r\n                idCard: values.idCard,\r\n                village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n                commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n                district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n                province: values.province === undefined ? \"\" : values.province,\r\n                case: personalData?.case?.id,\r\n                other: values.other,\r\n                vaccinated: parseInt(values.vaccinated),\r\n                interviewed: values.interviewed,\r\n                id: personId,\r\n                englishName: values.englishName,\r\n                patientId: values.patientId,\r\n                relation: values.relation,\r\n                illness: values.illness\r\n            }\r\n        })\r\n\r\n        // if(caseId === 'new'){\r\n        //     createPersonalInfo({ variables: {...setAddPeople(values), case: caseData.id} })\r\n        // }else {\r\n\r\n        // createPersonalInfo({ variables: setAddPeople(values) })\r\n        // }\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const setToGenderFn = (e) => {\r\n        form.setFieldsValue({\r\n            gender: e\r\n        });\r\n    };\r\n\r\n    const setToNationalityFn = (e) => {\r\n        form.setFieldsValue({\r\n            nationality: e\r\n        });\r\n    };\r\n\r\n    const setToProviceFn = (e) => {\r\n        form.setFieldsValue({\r\n            province: e,\r\n            district: null,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setProvince(e)\r\n        setDistrict(\"\")\r\n        setCommune(\"\")\r\n    };\r\n\r\n\r\n    const setToDistrictFn = (e) => {\r\n        form.setFieldsValue({\r\n            district: e,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setDistrict(e)\r\n        setCommune(\"\")\r\n    };\r\n\r\n    const setToCommuneFn = (e) => {\r\n        form.setFieldsValue({\r\n            commune: e,\r\n            village: null,\r\n        });\r\n\r\n        setCommune(e)\r\n    };\r\n\r\n    const setToVillageFn = (e) => {\r\n        form.setFieldsValue({\r\n            village: e\r\n        });\r\n    };\r\n\r\n    const setToCaseFn = (e) => {\r\n        form.setFieldsValue({\r\n            case: e\r\n        });\r\n        if (e === \"new\") {\r\n            setOpenModal(true)\r\n        }\r\n\r\n        setCaseId(e)\r\n    };\r\n\r\n    const callbackCase = (e) => {\r\n        if (e === \"\") {\r\n            setCaseId(e)\r\n            form.setFieldsValue({\r\n                case: null\r\n            })\r\n        } else {\r\n            setCaseData(e)\r\n            form.setFieldsValue({\r\n                caseName: e.caseName\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            title=\"កែប្រែប្រជាជន\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n\r\n        >\r\n            {/* <AddCase open={openModal} setOpen={setOpenModal} caseId={caseId}  /> */}\r\n            <Form\r\n                form={form}\r\n                name=\"addPeople\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n                initialValues={personalData}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"idCard\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"អត្តសញ្ញាណប័ណ្ណ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"patientId\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"អត្តលេខអ្នកជំងឺ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"lastName\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"គោត្តនាម\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"firstName\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"នាម\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 24 }}>\r\n                        <Form.Item\r\n                            name=\"englishName\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"ឈ្មោះជាភាសាឡាតាំង\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"gender\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n\r\n                            <ListSelect type={0} data={genderData} title=\"ភេទ\" setValue={setToGenderFn} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"age\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"អាយុ\" type=\"number\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"occupation\"\r\n                            // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"មុខរបរ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"tel\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"ទូរស័ព្ទ\" addonBefore=\"+855\" type=\"number\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"nationality\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <ListSelect type={0} data={nationalityData} title=\"សញ្ជាតិ\" setValue={setToNationalityFn} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"province\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <ListSelect type={1} data={provinceData} title=\"ខេត្ត/ក្រុង\" setValue={setToProviceFn} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {province === \"សៀមរាប\" ? (\r\n                        <>\r\n                            <Col xs={24} md={{ span: 11 }}>\r\n                                <Form.Item\r\n                                    name=\"district\"\r\n                                    rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                >\r\n                                    <ListSelect type={0} data={convertToDistrict(districtData)} title=\"ស្រុក/ខណ្ឌ\" setValue={setToDistrictFn} disabled={province !== \"សៀមរាប\" ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                                <Form.Item\r\n                                    name=\"commune\"\r\n                                    rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToCommune(district, communeData)} title=\"ឃុំ/សង្កាត់\" setValue={setToCommuneFn} disabled={district === \"\" || district === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 24 }}>\r\n                                <Form.Item\r\n                                    name=\"village\"\r\n                                    rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToVillage(commune, villageData)} title=\"ភូមិ\" setValue={setToVillageFn} disabled={commune === \"\" || commune === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </>\r\n                    ) : null}\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"relation\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"ត្រូវជា\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 24 }}>\r\n                        <Form.Item\r\n                            name=\"vaccinated\"\r\n                            // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input type=\"number\" placeholder=\"ចំនួនចាក់វ៉ាក់សាំង\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"illness\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"ជំងឺបច្ចុប្បន្ន\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n\r\n                    <Col xs={24} md={{ span: 24 }}>\r\n                        <Form.Item\r\n                            name=\"other\"\r\n\r\n                        >\r\n                            <Input placeholder=\"ចំណាំ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n\r\n                    <Col xs={24}>\r\n                        <Form.Item\r\n                            name=\"interviewed\"\r\n                            valuePropName=\"checked\"\r\n                        >\r\n                            <Checkbox>សម្ភាសរួចរាល់</Checkbox>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Modal, Form, Row, Col, Button, Upload, message } from 'antd'\r\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport ImgCrop from 'antd-img-crop';\r\n\r\nfunction getBase64(img, callback) {\r\n    const reader = new FileReader();\r\n    reader.addEventListener('load', () => callback(reader.result));\r\n    reader.readAsDataURL(img);\r\n}\r\n\r\nfunction beforeUpload(file) {\r\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n    if (!isJpgOrPng) {\r\n        message.error('You can only upload JPG/PNG file!');\r\n    }\r\n    const isLt2M = file.size / 1024 / 1024 < 2;\r\n    if (!isLt2M) {\r\n        message.error('Image must smaller than 2MB!');\r\n    }\r\n    return isJpgOrPng && isLt2M;\r\n}\r\n\r\nexport default function UploadPic({ open, setOpen }) {\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Success:', values);\r\n        console.log(fileList)\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const onChange = ({ fileList: newFileList }) => {\r\n        setFileList(newFileList);\r\n        console.log(newFileList)\r\n      };\r\n\r\n    const onPreview = async file => {\r\n        let src = file.url;\r\n        if (!src) {\r\n          src = await new Promise(resolve => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file.originFileObj);\r\n            reader.onload = () => resolve(reader.result);\r\n          });\r\n        }\r\n        const image = new Image();\r\n        image.src = src;\r\n        const imgWindow = window.open(src);\r\n        imgWindow.document.write(image.outerHTML);\r\n      };\r\n\r\n    return (\r\n        <Modal\r\n            title=\"បញ្ចូលរូបភាព\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"uploadPic\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col\r\n                        xs={24}\r\n                    >\r\n                        <ImgCrop rotate>\r\n                            <Upload\r\n                                action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                                listType=\"picture-card\"\r\n                                fileList={fileList}\r\n                                onChange={onChange}\r\n                                onPreview={onPreview}\r\n                                maxCount={1}\r\n                            >\r\n                                {fileList.length < 5 && '+ Upload'}\r\n                            </Upload>\r\n                        </ImgCrop>\r\n                    </Col>\r\n\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { Form, Modal, Input, Row, Col, Button, Select, DatePicker, message } from 'antd'\r\nimport { QuarantineController } from '../../../context/quarantineContext'\r\nimport { ListSelect } from '../../../static/own-comp'\r\nimport { provinceData, districtData, communeData, villageData, genderData } from '../../../context/headerContext'\r\nimport { convertToDistrict, convertToCommune, convertToVillage, convertQurantineToSelect } from '../../../function/fn'\r\nimport { useMutation, useQuery } from '@apollo/client'\r\nimport { CREATE_PERSON_QUARANTINE } from '../../../graphql/quarantine'\r\nimport { setAddSubQuarantine } from '../../../function/set'\r\nimport { ALL_QUARANTINEINFO } from '../../../graphql/quarantine'\r\nimport moment from 'moment'\r\nimport AddQuarantine from '../../quarantine/modal/addQuarantine'\r\nimport { UPDATE_CURRENTSTATE_BY_ID } from '../../../graphql/people'\r\n\r\nconst { Option } = Select\r\n\r\nexport default function EditCurrentState({ open, setOpen, peopleId, setRefetch, currentStateData}) {\r\n    const { subQuarantineDataDispatch } = useContext(QuarantineController)\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const [province, setProvince] = useState(\"\")\r\n    const [district, setDistrict] = useState(\"\")\r\n    const [commune, setCommune] = useState(\"\")\r\n\r\n    const [quarantineId, setQuarantineId] = useState(\"\")\r\n    const [quarantine, setQuarantine] = useState({})\r\n    const [openModal, setOpenModal] = useState(false)\r\n    const [dateKey, setDateKey] = useState(\"\")\r\n\r\n    const [updateCurrentState, { data }] = useMutation(UPDATE_CURRENTSTATE_BY_ID, {\r\n        onCompleted: ({ updateCurrentState }) => {\r\n            setRefetch()\r\n            message.success(\"កែប្រែទិន្នន័យជោគជ័យ\")\r\n        }\r\n    })\r\n\r\n    const { data: quarantineInfo, loading: loadingQuarantine, error } = useQuery(ALL_QUARANTINEINFO, {\r\n        onCompleted: ({ allQuarantineInfos }) => {\r\n\r\n        }\r\n    })\r\n\r\n    const allQuarantineInfos = quarantineInfo?.allQuarantineInfos\r\n    console.log(allQuarantineInfos)\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Success:', values);\r\n        let newObj = {...currentStateData,personalInfoId: peopleId}\r\n        switch(values.currentState){\r\n            case 'វិជ្ជមាន':\r\n                newObj = {...newObj,confirm: true, confirmedAt:moment(values.date)}\r\n                break;\r\n            case 'ជាសះស្បើយ':\r\n                newObj = {...newObj,recovered: true, recoveredAt: moment(values.date)}\r\n                break;\r\n            case 'ស្លាប់':\r\n                newObj = {...newObj,death: true, deathAt:moment(values.date)}\r\n                break;\r\n            default:\r\n                newObj = {...newObj,confirm: false, confirmedAt:moment(values.date)}\r\n                break;\r\n        }\r\n\r\n        console.log(newObj)\r\n\r\n        updateCurrentState({\r\n            variables:newObj\r\n        })\r\n\r\n        // if (quarantineId === 'new') {\r\n        //     createQuarantine({\r\n        //         variables: { ...setAddSubQuarantine(values), personalInfo: peopleId, quarantineInfo: quarantine.id }\r\n        //     })\r\n        // } else {\r\n        //     createQuarantine({\r\n        //         variables: { ...setAddSubQuarantine(values), personalInfo: peopleId }\r\n        //     })\r\n        // }\r\n\r\n        // createQuarantine({\r\n        //     variables: {\r\n        //         in: values.in,\r\n        //         date_in: moment(values.date_in).format(),\r\n        //         date_out: moment(values.date_out).format(),\r\n        //         personalType: values.personalType,\r\n        //         personalInfo: values.personalInfo,\r\n        //         quarantineInfo: quarantineId,\r\n        //         others: values.others,\r\n        //     }\r\n        // })\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const setToGenderFn = (e) => {\r\n        form.setFieldsValue({\r\n            gender: e\r\n        });\r\n    };\r\n\r\n    const setToProviceFn = (e) => {\r\n        form.setFieldsValue({\r\n            province: e,\r\n            district: null,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setProvince(e)\r\n        setDistrict(\"\")\r\n        setCommune(\"\")\r\n    };\r\n\r\n\r\n    const setToDistrictFn = (e) => {\r\n        form.setFieldsValue({\r\n            district: e,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setDistrict(e)\r\n        setCommune(\"\")\r\n    };\r\n\r\n    const setToCommuneFn = (e) => {\r\n        form.setFieldsValue({\r\n            commune: e,\r\n            village: null,\r\n        });\r\n\r\n        setCommune(e)\r\n    };\r\n\r\n    const setToVillageFn = (e) => {\r\n        form.setFieldsValue({\r\n            village: e\r\n        });\r\n    };\r\n\r\n    const setToQuarantineFn = (e) => {\r\n        console.log(e)\r\n        form.setFieldsValue({\r\n            quarantineInfo: e\r\n        });\r\n        if (e === \"new\") {\r\n            setOpenModal(true)\r\n        }\r\n\r\n        setQuarantineId(e)\r\n    };\r\n\r\n    const callbackLocation = (e) => {\r\n        // console.log(\"test\",e)\r\n        if (e === \"\") {\r\n            setQuarantineId(e)\r\n            form.setFieldsValue({\r\n                quarantineInfo: null\r\n            })\r\n        } else {\r\n            setQuarantine(e)\r\n            form.setFieldsValue({\r\n                quarantineName: e.locationName\r\n            })\r\n        }\r\n\r\n        console.log(e)\r\n    }\r\n\r\n    const handleStateChange=e=>{\r\n        console.log(e)\r\n        switch(e){\r\n            case 'វិជ្ជមាន':\r\n                setDateKey(\"confirmedAt\")\r\n                break;\r\n            case 'ជាសះស្បើយ':\r\n                setDateKey(\"recoveredAt\")\r\n                break;\r\n            case 'ស្លាប់':\r\n                setDateKey(\"deathAt\")\r\n                break;\r\n            default:\r\n                setDateKey(\"\")\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            title=\"កែប្រស្ថានភាពបច្ចុប្បន្ន\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            {/* <AddQuarantine open={openModal} setOpen={setOpenModal} quarantineId={quarantineId} setQuarantineId={callbackLocation} /> */}\r\n            <Form\r\n                form={form}\r\n                name=\"addSubCase\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"currentState\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                            \r\n                        >\r\n                           <Select onChange={(e)=> handleStateChange(e)} placeholder=\"ស្ថានភាព\" style={{ width: \"100%\" }}>\r\n                                {/* <Option value=\"អវិជ្ជមាន\">អវិជ្ជមាន</Option> */}\r\n                                <Option value=\"វិជ្ជមាន\">វិជ្ជមាន</Option>\r\n                                <Option value=\"ជាសះស្បើយ\">ជាសះស្បើយ</Option>\r\n                                <Option value=\"ស្លាប់\">ស្លាប់</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"date\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <DatePicker placeholder=\"កាលបរិច្ឆេទចូល\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                    >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import { Col, Image, message, Row, Table, Typography, Timeline } from 'antd'\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { CameraOutlined, PlusCircleOutlined, CheckOutlined, CloseOutlined, EditOutlined } from '@ant-design/icons';\r\nimport { PeopleController } from '../../context/peopleContext'\r\nimport { statusCol } from './tableColumn/statusColumn'\r\nimport { testCol } from './tableColumn/testColumn'\r\nimport { relatedCol } from './tableColumn/relatedColumn'\r\nimport AddPeopleRelated from './modal/addPeopleRelated'\r\nimport AddPeopleTest from './modal/addPeopleTest'\r\nimport AddPeopleHospital from './modal/addPeopleHospital'\r\nimport AddPeopleStatus from './modal/addPeopleStatus'\r\nimport AddPeopleQuarantine from './modal/addPeopleQuarantine'\r\nimport AddPeopleHistory from './modal/addPeopleHistory'\r\nimport AddPeopleLocation from './modal/addPeopleLocation'\r\nimport EditPeople from './modal/editPeople'\r\nimport UploadPic from './modal/uploadPic'\r\nimport { useMutation, useQuery } from '@apollo/client';\r\nimport { GET_PERSONALINFO_BY_ID } from '../../graphql/people';\r\nimport { GET_HOSPITAL_QUARANTINE_BY_PERSON } from '../../graphql/people';\r\nimport { GET_PERSON_BY_CASE } from '../../graphql/case';\r\nimport { GET_HISTORYLOCATION_BY_PERSON } from '../../graphql/historylocation';\r\nimport { DELETE_SAMPLETEST } from '../../graphql/people';\r\nimport { DELETE_PERSONALINFO_BY_ID } from '../../graphql/people';\r\nimport moment from 'moment';\r\nimport EditCurrentState from './modal/editCurrentState';\r\n\r\nconst { Title } = Typography\r\n\r\nexport default function SubPeople() {\r\n    //const { peopleData } = useContext(PeopleController)\r\n    const { id } = useParams()\r\n\r\n    const [personalData, setPersonalData] = useState({})\r\n    const [openAddPeopleRelated, setOpenAddPeopleRelated] = useState(false)\r\n    const [openAddPeopleTest, setOpenAddPeopleTest] = useState(false)\r\n    const [openAddPeopleHospital, setOpenAddPeopleHospital] = useState(false)\r\n    const [openAddPeopleStatus, setOpenAddPeopleStatus] = useState(false)\r\n    const [openAddPeopleQuarantine, setOpenAddPeopleQuarantine] = useState(false)\r\n    const [openAddPeopleHistory, setOpenAddPeopleHistory] = useState(false)\r\n    const [openAddPeopleLocation, setOpenAddPeopleLocation] = useState(false)\r\n    const [openUploadPic, setOpenUploadPic] = useState(false)\r\n    const [openEdit, setOpenEdit] = useState(false)\r\n    const [subCaseData, setSubCaseData] = useState([])\r\n    const [subCasePagination, setSubCasePagination] = useState({})\r\n    const [openEditCurrentState,setOpenEditCurrentState] = useState(false)\r\n\r\n    const [quarantineData, setQuarantineData] = useState({})\r\n    const [hospitalData, setHospitalData] = useState({})\r\n\r\n    const [page, setPage] = useState(1)\r\n    const [limit, setLimit] = useState(100)\r\n    const [keyword, setKeyword] = useState(\"\")\r\n\r\n    const { data, refetch: refetchPerson } = useQuery(GET_PERSONALINFO_BY_ID, {\r\n        variables: {\r\n            id: id\r\n        },\r\n        onCompleted: ({ getPersonalInfoById }) => {\r\n            // console.log(getPersonalInfoById)\r\n            // setPersonalData(getPersonalInfoById)\r\n        }\r\n    })\r\n\r\n    const getPersonalInfoById = data?.getPersonalInfoById\r\n\r\n    const { data: hospital_quarantine, refetch: refetchHospital } = useQuery(GET_HOSPITAL_QUARANTINE_BY_PERSON, {\r\n        variables: {\r\n            personalId: id\r\n        },\r\n        onCompleted: ({ getHospitalizationByPersonalInfo }) => {\r\n            console.log(getHospitalizationByPersonalInfo)\r\n            setQuarantineData(getHospitalizationByPersonalInfo?.quarantineInfo)\r\n            setHospitalData(getHospitalizationByPersonalInfo?.hospitalInfo)\r\n        },\r\n        fetchPolicy: 'network-only'\r\n    })\r\n\r\n    const getHospitalizationByPersonalInfo = hospital_quarantine?.getHospitalizationByPersonalInfo\r\n\r\n    const { data: caseData, refetch } = useQuery(GET_PERSON_BY_CASE, {\r\n        variables: {\r\n            page: page,\r\n            limit: limit,\r\n            keyword: keyword,\r\n            caseId: getPersonalInfoById?.case?.id\r\n        },\r\n        onCompleted: ({ getPersonalInfoByCaseWithPagination }) => {\r\n\r\n            // console.log(getPersonalInfoByCaseWithPagination, \"dataCase\")\r\n\r\n\r\n        },\r\n        fetchPolicy: 'network-only'\r\n    })\r\n\r\n    const getPersonalInfoByCaseWithPagination = caseData?.getPersonalInfoByCaseWithPagination\r\n\r\n    useEffect(() => {\r\n\r\n        if (caseData) {\r\n            let item = [...getPersonalInfoByCaseWithPagination?.personalInfos]\r\n            let index = item.findIndex(e => e.id === id)\r\n            item.splice(index, 1)\r\n            setSubCaseData(item)\r\n            setSubCasePagination(getPersonalInfoByCaseWithPagination?.paginator)\r\n        }\r\n\r\n    }, [caseData])\r\n\r\n\r\n    const { data: historylocation, refetch: refetchHistoryLocation } = useQuery(GET_HISTORYLOCATION_BY_PERSON, {\r\n        variables: {\r\n            personalId: id\r\n        },\r\n        onCompleted: ({ getHistoryLocationByPersonalInfoId }) => {\r\n            console.log(getHistoryLocationByPersonalInfoId)\r\n            // setQuarantineData(getHospitalizationByPersonalInfo?.quarantineInfo)\r\n            // setHospitalData(getHospitalizationByPersonalInfo?.hospitalInfo)\r\n        },\r\n        fetchPolicy: 'network-only'\r\n    })\r\n\r\n    const getHistoryLocationByPersonalInfoId = historylocation?.getHistoryLocationByPersonalInfoId\r\n\r\n    const [deleteSampleTest, { loading: deleteLoading }] = useMutation(DELETE_SAMPLETEST, {\r\n        onCompleted: () => {\r\n            refetchPerson()\r\n            message.success(\"លុបទិន្នន័យជោគជ័យ\")\r\n        }\r\n    })\r\n\r\n    const [deletePersonalInfo, { loading: deleteRelated }] = useMutation(DELETE_PERSONALINFO_BY_ID, {\r\n        onCompleted: () => {\r\n            refetch()\r\n            message.success(\"លុបទិន្នន័យជោគជ័យ\")\r\n        }\r\n    })\r\n\r\n    const handleRelatedDelete = (e) => {\r\n\r\n        deletePersonalInfo({\r\n            variables: {\r\n                id: e\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleSampleTestDelete = (e) => {\r\n\r\n        deleteSampleTest({\r\n            variables: {\r\n                sampleTestId: e,\r\n                personalInfoId: id\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <AddPeopleRelated open={openAddPeopleRelated} setOpen={setOpenAddPeopleRelated} caseId={getPersonalInfoById?.case?.id} setRefetch={refetch} />\r\n            <AddPeopleTest open={openAddPeopleTest} setOpen={setOpenAddPeopleTest} peopleID={id} />\r\n            <AddPeopleHospital open={openAddPeopleHospital} setOpen={setOpenAddPeopleHospital} peopleId={id} />\r\n            <AddPeopleStatus open={openAddPeopleStatus} setOpen={setOpenAddPeopleStatus} />\r\n            <AddPeopleQuarantine open={openAddPeopleQuarantine} setOpen={setOpenAddPeopleQuarantine} peopleId={id} />\r\n            <AddPeopleHistory open={openAddPeopleHistory} setOpen={setOpenAddPeopleHistory} />\r\n            <AddPeopleLocation open={openAddPeopleLocation} setOpen={setOpenAddPeopleLocation} setRefetch={refetchHistoryLocation} caseId={getPersonalInfoById?.case?.id} peopleId={id} />\r\n            <UploadPic open={openUploadPic} setOpen={setOpenUploadPic} />\r\n            <EditPeople open={openEdit} setOpen={setOpenEdit} personId={id} setRefetch={refetchPerson} personalData={getPersonalInfoById} />\r\n            <EditCurrentState open={openEditCurrentState} setOpen={setOpenEditCurrentState} peopleId={id} setRefetch={refetchPerson} currentStateData={getPersonalInfoById?.currentState} />\r\n            <Col\r\n                xs={24} md={24}\r\n                className=\"subPeople-card\"\r\n            >\r\n                <Row\r\n                    style={{\r\n                        border: \"1px solid #d9d9d9\",\r\n                        padding: \"20px 20px 20px 20px\",\r\n\r\n                    }}\r\n                >\r\n                    <Col\r\n                        xs={24} md={4}\r\n                        style={{\r\n                            position: \"relative\",\r\n                            // padding: 20,\r\n                        }}\r\n\r\n                    >\r\n                        <Image\r\n                            width={\"100%\"}\r\n                            src=\"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\"\r\n                        />\r\n                        <span className=\"btnCamera\" onClick={() => setOpenUploadPic(true)}>\r\n                            <CameraOutlined style={{ color: '#FFFF' }} />\r\n                        </span>\r\n                    </Col>\r\n                    <Col\r\n                        xs={24} md={10}\r\n                    >\r\n\r\n                        <table style={{ marginLeft: 30 }} className=\"tbl-subPeople\">\r\n                            <tr>\r\n                                <td width=\"150\"><Title level={5}>ឈ្មោះ</Title></td>\r\n                                <td><Title level={5}>៖&emsp;</Title></td>\r\n                                <td><Title level={5}>{getPersonalInfoById?.lastName} {getPersonalInfoById?.firstName} <EditOutlined className=\"link\" onClick={() => setOpenEdit(true)} /></Title></td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <td>ឈ្មោះជាភាសាឡាតាំង</td>\r\n                                <td> ៖&emsp;</td>\r\n                                <td>{getPersonalInfoById?.englishName}</td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <td>អត្តលេខអ្នកជំងឺ</td>\r\n                                <td> ៖&emsp;</td>\r\n                                <td>{getPersonalInfoById?.patientId}</td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <td>ភេទ</td>\r\n                                <td> ៖&emsp;</td>\r\n                                <td>{getPersonalInfoById?.gender}</td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <td>សញ្ជាតិ</td>\r\n                                <td> ៖&emsp;</td>\r\n                                <td>{getPersonalInfoById?.nationality}</td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <td>លេខអត្តសញ្ញាណប័ណ្ឌ</td>\r\n                                <td> ៖&emsp;</td>\r\n                                <td>{getPersonalInfoById?.idCard}</td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <td>លេខទូរស័ព្ទ</td>\r\n                                <td> ៖&emsp;</td>\r\n                                <td>{getPersonalInfoById?.tel}</td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <td>មុខរបរ</td>\r\n                                <td> ៖&emsp;</td>\r\n                                <td>{getPersonalInfoById?.occupation}</td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <td>អាស័យដ្ឋាន</td>\r\n                                <td> ៖&emsp;</td>\r\n                                <td> {getPersonalInfoById?.village !== \"ក្រៅសៀមរាប\" && \"ភូមិ\" + getPersonalInfoById?.village + \",\"}\r\n                                    {getPersonalInfoById?.commune !== \"ក្រៅសៀមរាប\" && \"ឃុំ\" + getPersonalInfoById?.commune + \",\"}\r\n                                    {getPersonalInfoById?.district !== \"ក្រៅសៀមរាប\" && \"ស្រុក\" + getPersonalInfoById?.district + \",\"}\r\n                                    {\"ខេត្ត\" + getPersonalInfoById?.province}</td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <td>ចំនួនចាក់វ៉ាក់សាំង</td>\r\n                                <td> ៖&emsp;</td>\r\n                                <td>{getPersonalInfoById?.vaccinated} លើក</td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <td>ការសម្ភាស</td>\r\n                                <td> ៖&emsp;</td>\r\n                                <td>{getPersonalInfoById?.interviewed ? \"រួចរាល់\" : \"មិនទាន់រូចរាល់\"}</td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <td>ត្រូវជា</td>\r\n                                <td> ៖&emsp;</td>\r\n                                <td>{getPersonalInfoById?.relation}</td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <td>ជំងឺប្រចាំកាយ</td>\r\n                                <td> ៖&emsp;</td>\r\n                                <td>{getPersonalInfoById?.illness}</td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <td>ស្ថានភាពបច្ចុប្បន្ន</td>\r\n                                <td> ៖&emsp;</td>\r\n                                <td></td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <td>ចំណាំ</td>\r\n                                <td> ៖&emsp;</td>\r\n                                <td>{getPersonalInfoById?.other}</td>\r\n                            </tr>\r\n                        </table>\r\n                    </Col>\r\n                    <Col\r\n                        xs={24} md={{ span: 6 }}\r\n\r\n                    >\r\n                        <Row>\r\n                            <Col xs={24}\r\n                                style={{ paddingBottom: 20 }}\r\n                            >\r\n\r\n                                <table style={{ marginLeft: 30 }} className=\"tbl-subPeople\">\r\n                                    <tr>\r\n                                        <td width=\"150\"><Title level={5}>\r\n                                            ការធ្វើចត្តាឡីស័ក\r\n                                            <span className=\"link\" onClick={() => setOpenAddPeopleQuarantine(true)}> <PlusCircleOutlined /></span>\r\n                                        </Title></td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                    </tr>\r\n\r\n                                    <tr>\r\n                                        <td>កាលបរិច្ឆេទចាប់ផ្ដើម</td>\r\n                                        <td> ៖&emsp;</td>\r\n                                        <td>{hospitalData?.date_in !== undefined && moment(hospitalData?.date_in).format(\"ថ្ងៃDD ខែMM ឆ្នាំYYYY\")}</td>\r\n                                    </tr>\r\n\r\n                                    <tr>\r\n                                        <td>កាលបរិច្ឆេទចេញ</td>\r\n                                        <td> ៖&emsp;</td>\r\n                                        <td>{hospitalData?.date_out !== null && moment(hospitalData?.date_out).format(\"ថ្ងៃDD ខែMM ឆ្នាំYYYY\")}</td>\r\n                                    </tr>\r\n\r\n                                    <tr>\r\n                                        <td>ទីតាំង</td>\r\n                                        <td> ៖&emsp;</td>\r\n                                        <td>{quarantineData?.quarantineInfo?.locationName}</td>\r\n                                    </tr>\r\n\r\n                                    <tr>\r\n                                        <td>អាស័យដ្ឋាន</td>\r\n                                        <td> ៖&emsp;</td>\r\n                                        <td>\r\n                                            {(quarantineData?.quarantineInfo?.village !== \"ក្រៅសៀមរាប\" && quarantineData?.quarantineInfo?.village !== undefined) && \"ភូមិ\" + quarantineData?.quarantineInfo?.village + \",\"}\r\n                                            {(quarantineData?.quarantineInfo?.commune !== \"ក្រៅសៀមរាប\" && quarantineData?.quarantineInfo?.commune !== undefined) && \"ឃុំ\" + quarantineData?.quarantineInfo?.commune + \",\"}\r\n                                            {(quarantineData?.quarantineInfo?.district !== \"ក្រៅសៀមរាប\" && quarantineData?.quarantineInfo?.district !== undefined) && \"ស្រុក\" + quarantineData?.quarantineInfo?.district + \",\"}\r\n                                            {quarantineData?.quarantineInfo?.province !== undefined && quarantineData?.quarantineInfo?.province}\r\n                                        </td>\r\n                                    </tr>\r\n                                </table>\r\n                            </Col>\r\n                            <Col xs={24}>\r\n\r\n                                <table style={{ marginLeft: 30 }} className=\"tbl-subPeople\">\r\n                                    <tr>\r\n                                        <td width=\"150\"><Title level={5}>\r\n                                            ស្ថានភាពបច្ចុប្បន្ន\r\n                                            <span className=\"link\" onClick={() => setOpenEditCurrentState(true)}> <PlusCircleOutlined /></span>\r\n                                        </Title></td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                    </tr>\r\n\r\n                                    <tr>\r\n                                        <td>អវិជ្ជមាន</td>\r\n                                        <td> ៖&emsp;</td>\r\n                                        <td> &emsp;</td>\r\n                                        <td>{getPersonalInfoById?.createdAt !== undefined && moment(getPersonalInfoById?.createdAt).format(\"ថ្ងៃDD ខែMM ឆ្នាំYYYY\")}</td>\r\n                                    </tr>\r\n\r\n                                    <tr>\r\n                                        <td>វិជ្ជមាន</td>\r\n                                        <td> ៖&emsp;</td>\r\n                                        <td> {getPersonalInfoById?.currentState?.confirm ? \"វិជ្ជមាន\":\"\"}&emsp;</td>\r\n                                        <td>{getPersonalInfoById?.currentState?.confirmedAt !== null && moment(getPersonalInfoById?.currentState?.confirmedAt).format(\"ថ្ងៃDD ខែMM ឆ្នាំYYYY\")}</td>\r\n                                    </tr>\r\n\r\n                                    <tr>\r\n                                        <td>ជាសះស្បើយ</td>\r\n                                        <td> ៖&emsp;</td>\r\n                                        <td> {getPersonalInfoById?.currentState?.recovered ? \"ជាសះស្បើយ\":\"\"}&emsp;</td>\r\n                                        <td>{getPersonalInfoById?.currentState?.recoveredAt !== null && moment(getPersonalInfoById?.currentState?.recoveredAt).format(\"ថ្ងៃDD ខែMM ឆ្នាំYYYY\")}</td>\r\n                                    </tr>\r\n\r\n                                    <tr>\r\n                                        <td>ស្លាប់</td>\r\n                                        <td> ៖&emsp;</td>\r\n                                        <td> {getPersonalInfoById?.currentState?.death ? \"ស្លាប់\":\"\"}&emsp;</td>\r\n                                        <td>{getPersonalInfoById?.currentState?.deathAt !== null && moment(getPersonalInfoById?.currentState?.deathAt).format(\"ថ្ងៃDD ខែMM ឆ្នាំYYYY\")}</td>\r\n                                    </tr>\r\n                                </table>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n\r\n            {/* <Col\r\n                xs={24} md={{ span: 7 }}\r\n                style={{\r\n                    border: \"1px solid #d9d9d9\",\r\n                    padding: \"20px 60px 20px 60px\",\r\n                    marginTop: 20\r\n                }}\r\n                className=\"subPeople-card\"\r\n            >\r\n\r\n                <Row>\r\n                    <Col\r\n                        xs={24}\r\n                        style={{ paddingBottom: 20 }}\r\n                    >\r\n                        <table className=\"tbl-subPeople1\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th colSpan={2}><Title level={5}>ស្ថានភាពបច្ចុប្បន្ន <span className=\"link\" onClick={() => setOpenAddPeopleStatus(true)}><PlusCircleOutlined /></span></Title></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td >{moment().format(\"ថ្ងៃDD ខែMM ឆ្នាំYYYY\")}</td>\r\n                                    <td>អវិជ្ជមាន</td>\r\n                                    <td>\r\n                                        <span style={{ border: \"1px solid green\", padding: \"\"}}>\r\n                                        {personalData?.currentState?.confirm ? <CloseOutlined style={{ color: \"red\" }} /> : <CheckOutlined style={{ color: \"green\" }} />}\r\n                                        </span>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td > {personalData?.currentState?.confirm ? <CheckOutlined style={{ color: \"green\" }} /> : <CloseOutlined style={{ color: \"red\" }} />} វិជ្ជមាន</td>\r\n                                    <td>{moment().format(\"ថ្ងៃDD ខែMM ឆ្នាំYYYY\")}</td>\r\n                                    <td>{moment().format(\"ថ្ងៃDD ខែMM ឆ្នាំYYYY\")}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td> {personalData?.currentState?.recovered ? <CheckOutlined style={{ color: \"green\" }} /> : <CloseOutlined style={{ color: \"red\" }} />} ជាសះស្បើយ</td>\r\n                                    <td>{moment().format(\"ថ្ងៃDD ខែMM ឆ្នាំYYYY\")}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td> {personalData?.currentState?.death ? <CheckOutlined style={{ color: \"green\" }} /> : <CloseOutlined style={{ color: \"red\" }} />} ស្លាប់</td>\r\n                                    <td>{moment().format(\"ថ្ងៃDD ខែMM ឆ្នាំYYYY\")}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </Col>\r\n                </Row>\r\n            </Col> */}\r\n            <Col\r\n                xs={24} md={{ span: 11, offset: 0 }}\r\n                style={{\r\n                    border: \"1px solid #d9d9d9\",\r\n                    padding: \"20px 60px 20px 60px\",\r\n                    marginTop: 20,\r\n                }}\r\n                className=\"subPeople-card\"\r\n            >\r\n                <Row>\r\n                    <Col\r\n                        xs={24}\r\n                        style={{ paddingBottom: 20 }}\r\n                    >\r\n                        <table className=\"tbl-subPeople\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th colSpan={3}><Title level={5}>ប្រវត្តិដំណើរករណី</Title></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td width=\"150\">ឈ្មោះករណី</td>\r\n                                    <td> ៖&emsp;</td>\r\n                                    <td>{getPersonalInfoById?.case?.caseName !== undefined && getPersonalInfoById?.case?.caseName}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td width=\"150\">ទីតាំងករណី</td>\r\n                                    <td> ៖&emsp;</td>\r\n                                    <td>\r\n                                        {(getPersonalInfoById?.case?.village !== \"ក្រៅសៀមរាប\" && getPersonalInfoById?.case?.village !== undefined) && \"ភូមិ\" + getPersonalInfoById?.case?.village + \",\"}\r\n                                        {(getPersonalInfoById?.case?.commune !== \"ក្រៅសៀមរាប\" && getPersonalInfoById?.case?.commune !== undefined) && \"ឃុំ\" + getPersonalInfoById?.case?.commune + \",\"}\r\n                                        {(getPersonalInfoById?.case?.district !== \"ក្រៅសៀមរាប\" && getPersonalInfoById?.case?.district !== undefined) && \"ស្រុក\" + getPersonalInfoById?.case?.district + \",\"}\r\n                                        {getPersonalInfoById?.case?.province !== undefined && \"ខេត្ត\" + getPersonalInfoById?.case?.province}\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td width=\"150\">ទំនាក់ទំនង</td>\r\n                                    <td> ៖&emsp;</td>\r\n                                    <td>{getPersonalInfoById?.direct ? \"ផ្ទាល់\" : \"ប្រយោល\"}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </Col>\r\n                    <Col\r\n                        xs={24}\r\n                    >\r\n                        <table className=\"tbl-subPeople\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th colSpan={2}>\r\n                                        <Title level={5}>\r\n                                            មណ្ឌលព្យាបាល\r\n                                            <span className=\"link\" onClick={() => setOpenAddPeopleHospital(true)}> <PlusCircleOutlined /></span>\r\n                                        </Title>\r\n                                    </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td width=\"150\">ឈ្មោះមណ្ឌល</td>\r\n                                    <td> ៖&emsp;{getHospitalizationByPersonalInfo?.hospitalInfo?.hospitalInfo?.hospitalName}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td width=\"150\">អាស័យដ្ឋាន</td>\r\n                                    <td> ៖&emsp;\r\n                                        {(getHospitalizationByPersonalInfo?.hospitalInfo?.hospitalInfo?.village !== \"ក្រៅសៀមរាប\" && getHospitalizationByPersonalInfo?.hospitalInfo?.hospitalInfo?.village !== undefined) && \"ភូមិ\" + getHospitalizationByPersonalInfo?.hospitalInfo?.hospitalInfo?.village + \",\"}\r\n                                        {(getHospitalizationByPersonalInfo?.hospitalInfo?.hospitalInfo?.commune !== \"ក្រៅសៀមរាប\" && getHospitalizationByPersonalInfo?.hospitalInfo?.hospitalInfo?.commune !== undefined) && \"ឃុំ\" + getHospitalizationByPersonalInfo?.hospitalInfo?.hospitalInfo?.commune + \",\"}\r\n                                        {(getHospitalizationByPersonalInfo?.hospitalInfo?.hospitalInfo?.district !== \"ក្រៅសៀមរាប\" && getHospitalizationByPersonalInfo?.hospitalInfo?.hospitalInfo?.district !== undefined) && \"ស្រុក\" + getHospitalizationByPersonalInfo?.hospitalInfo?.hospitalInfo?.district + \",\"}\r\n                                        {getHospitalizationByPersonalInfo?.hospitalInfo?.hospitalInfo?.province !== undefined && \"ខេត្ត\" + getHospitalizationByPersonalInfo?.hospitalInfo?.hospitalInfo?.province}\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td width=\"150\">កាលបរិច្ឆេទចូល</td>\r\n                                    <td> ៖&emsp;{getHospitalizationByPersonalInfo?.hospitalInfo?.date_in !== null && moment(hospitalData?.date_in).format(\"ថ្ងៃDD ខែMM ឆ្នាំYYYY\")}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td width=\"150\">កាលបរិចេ្ឆទចេញ</td>\r\n                                    <td> ៖&emsp;{getHospitalizationByPersonalInfo?.hospitalInfo?.date_out !== null && moment(hospitalData?.date_out).format(\"ថ្ងៃDD ខែMM ឆ្នាំYYYY\")}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n            <Col\r\n                xs={24} md={{ span: 12, offset: 1 }}\r\n                style={{\r\n                    border: \"1px solid #d9d9d9\",\r\n                    padding: \"20px 60px 20px 60px\",\r\n                    marginTop: 20,\r\n                }}\r\n                className=\"subPeople-card\"\r\n            >\r\n                <Title level={5} style={{ marginBottom: 20 }}>\r\n                    ទីតាំង <span className=\"link\" onClick={() => setOpenAddPeopleLocation(true)}><PlusCircleOutlined /></span>\r\n                </Title>\r\n                <Timeline mode=\"right\">\r\n                    {getHistoryLocationByPersonalInfoId?.map(location => (\r\n                        <Timeline.Item label={moment(location.date).format(\"ថ្ងៃDD ខែMM ឆ្នាំYYYY\")} color={location.type === \"ផ្ទាល់\" ? \"red\" : \"green\"}>{location.affectedLocationId.affectedLocationName}</Timeline.Item>\r\n                    ))}\r\n\r\n                    {/* <Timeline.Item label=\"2015-09-01 09:12:11\" color=\"green\">Solve initial network problems</Timeline.Item>\r\n                    <Timeline.Item color=\"green\">Technical testing</Timeline.Item>\r\n                    <Timeline.Item label=\"2015-09-01 09:12:11\" color=\"green\">Network problems being solved</Timeline.Item> */}\r\n                </Timeline>\r\n            </Col>\r\n            <Col\r\n                xs={24} md={{ span: 11 }}\r\n                style={{ paddingTop: 14, marginTop: 20 }}\r\n            >\r\n                <Title level={5}>ការធ្វើតេស្ត <span className=\"link\" onClick={() => setOpenAddPeopleTest(true)} ><PlusCircleOutlined /></span></Title>\r\n                <Table\r\n                    className=\"table-personal\"\r\n                    columns={testCol({ handleSampleTestDelete })}\r\n                    dataSource={getPersonalInfoById?.sampleTest}\r\n                    rowKey={record => record.id}\r\n                    pagination={false}\r\n                    scroll={{ x: 800, y: 300 }}\r\n                    sticky\r\n                />\r\n            </Col>\r\n            <Col\r\n                xs={24} md={{ span: 12, offset: 1 }}\r\n                style={{ paddingTop: 14, marginTop: 20 }}\r\n            >\r\n                <Title level={5}>\r\n                    អ្នកពាក់ព័ន្ធ <span className=\"link\" onClick={() => setOpenAddPeopleRelated(true)}><PlusCircleOutlined /></span>\r\n                </Title>\r\n                <Table\r\n                    className=\"table-personal\"\r\n                    columns={relatedCol({ handleRelatedDelete })}\r\n                    dataSource={subCaseData}\r\n                    rowKey={record => record.id}\r\n                    pagination={false}\r\n                    // pagination={{\r\n                    //     total: subCasePagination?.totalDocs,\r\n                    //     // showSizeChanger: true,\r\n                    //     onChange: ((page, pageSize) => { setPage(page); setLimit(pageSize) })\r\n                    // }}\r\n                    scroll={{ x: 1000, y: 300 }}\r\n                    sticky\r\n                />\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Space, Tooltip, Popconfirm } from 'antd'\r\nimport {\r\n    EditOutlined,\r\n    DeleteOutlined\r\n} from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport const hospitalCol = ({handleDelete,limit,page}) => {\r\n    let no = ((page-1) * limit)\r\n    var array = [\r\n        {\r\n            title: 'ល.រ',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: 50,\r\n            render: (text, record, i) => (\r\n                <Space size=\"middle\">\r\n                    {no += 1}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'ឈ្មោះមណ្ឌល',\r\n            dataIndex: 'hospitalName',\r\n            key: 'hospitalName',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'អាសយដ្ឋាន  ',\r\n            dataIndex: 'address',\r\n            key: 'address',\r\n            width: 120,\r\n            render: (text, record) => (\r\n                // <Tooltip placement=\"top\" title={record.village + \",\" + record.commune + \",\" + record.district + \",\" + record.province}>\r\n                    <Space size=\"middle\">\r\n                        {(record.village !== \"ក្រៅសៀមរាប\") && record.village}\r\n                        {record.commune !== \"ក្រៅសៀមរាប\" && record.commune}\r\n                        {record.district !== \"ក្រៅសៀមរាប\" && record.district}\r\n                        {record.province && record.province}\r\n                    </Space>\r\n                // </Tooltip>\r\n            ),\r\n            \r\n        },\r\n        {\r\n            title: 'អ្នកទទួលខុសត្រូវ',\r\n            dataIndex: 'PersonInCharge',\r\n            key: 'PersonInCharge',\r\n            width: 100,\r\n            render: (text, record) => (\r\n                <span size=\"middle\">\r\n                    {\r\n                        // getFullNamePersonInCharge(record.personInCharge)\r\n                        record.personInCharge.lastName+\" \"+record.personInCharge.firstName\r\n                        // console.log(record.personInCharge)\r\n                    }\r\n                </span>\r\n            ),\r\n        },\r\n        {\r\n            title: 'លេខទូរស័ព្ទ',\r\n            dataIndex: 'tel',\r\n            key: 'tel',\r\n            width: 100,\r\n            render: (text, record) => (\r\n                <span size=\"middle\">\r\n                    {\r\n                        // getFullNamePersonInCharge(record.personInCharge)\r\n                        record.personInCharge.tel\r\n                        // console.log(record.personInCharge)\r\n                    }\r\n                </span>\r\n            ),\r\n        },\r\n        {\r\n            title: 'ចំណាំ',\r\n            dataIndex: 'other',\r\n            key: 'other',\r\n            width: 100,\r\n        },\r\n    \r\n        {\r\n            key: 'action',\r\n            dataIndex: 'action',\r\n            fixed: 'right',\r\n            width: 50,\r\n            align: 'center',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    <Link className=\"link\" to={\"/subHospital/\"+record.id}><EditOutlined /></Link>\r\n                    <Popconfirm\r\n                        title=\"តើអ្នកពិតចង់លុបមែនឬទេ?\"\r\n                        onConfirm={() => { handleDelete(record.id) }}\r\n                        okText=\"ចង់\"\r\n                        cancelText=\"មិនចង់\"\r\n                    >\r\n                        <span className=\"link\" style={{ color: \"red\" }}><DeleteOutlined /></span>\r\n                    </Popconfirm>\r\n\r\n                </Space>\r\n            ),\r\n        }\r\n    ]\r\n    return array\r\n}","import React, {useContext, useState, useEffect} from 'react'\r\nimport { Row, Col, Button, Input, Table,message } from 'antd'\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { hospitalCol } from '../component/hospital/tableColumn/hospitalColumn'\r\nimport AddHospital from '../component/hospital/modal/addHospital';\r\nimport { useQuery,useMutation } from '@apollo/client';\r\nimport { GET_ALL_HOSPITAL } from '../graphql/hospital';\r\nimport { DELETE_HOSPITALINFO_BY_ID } from '../graphql/hospital';\r\n\r\nexport default function Hospital() {\r\n\r\n    const [hospitalData, setHospitalData] = useState([])\r\n\r\n    const [openAdd, setOpenAdd] = useState(false)\r\n    const [page, setPage] = useState(1)\r\n    const [limit, setLimit] = useState(10)\r\n    const [keyword, setKeyword] = useState(\"\")\r\n\r\n    const {data,loading,error,refetch} = useQuery(GET_ALL_HOSPITAL,{\r\n        variables:{\r\n            page: page,\r\n            limit: limit,\r\n            keyword: keyword,\r\n        },\r\n        onCompleted:({getHospitalInfoWithPagination})=>{\r\n            \r\n            setHospitalData(getHospitalInfoWithPagination)\r\n        }\r\n    })\r\n\r\n    useEffect(()=>{\r\n        if(data){\r\n            setHospitalData(data?.getHospitalInfoWithPagination)\r\n        }\r\n    }, [data])\r\n\r\n    const [deleteHospitalInfo, { loading: deleteLoading, error: deleteError }] = useMutation(DELETE_HOSPITALINFO_BY_ID, {     \r\n        onCompleted: () => {\r\n            refetch()\r\n            message.success(\"ទិន្នន័យត្រូវបានលុប\")\r\n        },\r\n\r\n    })\r\n\r\n    useEffect(() => {\r\n        refetch()\r\n    }, [page, limit, keyword])\r\n\r\n\r\n    const handleDelete = (e) => {\r\n        //hospitalDataDispatch({type: \"DELETE_HOSPITAL\", payload: e})\r\n        deleteHospitalInfo({variables:{\r\n            id:e\r\n        }})\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <AddHospital open={openAdd} setOpen={setOpenAdd} setRefetch={refetch}/>\r\n            {/* <EditUser open={openEdit} setOpen={setOpenEdit} user={userEdit} /> */}\r\n            <Col\r\n                xs={8}\r\n                md={18}\r\n            >\r\n                <Button\r\n                    type=\"primary\"\r\n                    onClick={() => setOpenAdd(true)}\r\n                >\r\n                    បញ្ចូលមន្ទីរពេទ្យ\r\n                    <PlusOutlined />\r\n                </Button>\r\n            </Col>\r\n            <Col\r\n                xs={16}\r\n                md={6}\r\n            >\r\n                <Input.Search\r\n                    onChange={(e)=>setKeyword(e.target.value)}\r\n                    placeholder=\"ស្វែងរក...\"\r\n                />\r\n            </Col>\r\n            <Col\r\n                xs={24}\r\n                style={{ marginTop: 20 }}\r\n            >\r\n                <Table\r\n                // caseCol({handleDelete})\r\n                    className=\"table-go-list\"\r\n                    columns={hospitalCol({handleDelete,limit,page})}\r\n                    dataSource={hospitalData?.hospitalInfos}\r\n                    rowKey={record => record.id}\r\n                    pagination={{\r\n                        total: hospitalData?.paginator?.totalDocs,\r\n                        //pageSizeOptions:[\"10\", \"20\"],\r\n                        // showSizeChanger: true,\r\n                        current: hospitalData?.paginator?.currentPage,\r\n                        onChange: ((page, pageSize) => { setPage(page); setLimit(pageSize) })\r\n                    }}\r\n                    scroll={{ x: 1500 }} \r\n                    sticky \r\n                />\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n","import { Space, Popconfirm } from 'antd'\r\nimport {\r\n    EditOutlined,\r\n    DeleteOutlined,\r\n    EyeOutlined\r\n\r\n} from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nexport const subHospitalCol = ({handleDelete, handleEditSubHospital}) => {\r\n    var array = [\r\n        {\r\n            title: 'ល.រ',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: 20,\r\n            render: (text, record, i) => (\r\n                <Space size=\"middle\">\r\n                    {i += 1}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'ឈ្មោះ',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n            width: 40,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {record?.personalInfo?.lastName} {record?.personalInfo?.firstName}\r\n                </Space>\r\n            ),\r\n        },\r\n\r\n        {\r\n            title: 'កាលបរិច្ឆេទចូល',\r\n            dataIndex: 'date_in',\r\n            key: 'date_in',\r\n            width: 30,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {moment(record?.date_in).format(\"ថ្ងែDD ខែMM ឆ្នាំYYYY\")}\r\n                </Space>\r\n            ),\r\n        },\r\n\r\n        {\r\n            title: 'កាលបរិច្ឆេទចេញ',\r\n            dataIndex: 'date_out',\r\n            key: 'date_out',\r\n            width: 30,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {record?.date_out === null || record?.date_out === undefined ? \"គ្មាន\": moment(record?.date_out).format(\"ថ្ងែDD ខែMM ឆ្នាំYYYY\")}\r\n                </Space>\r\n            ),\r\n        },\r\n      \r\n        {\r\n            title: 'អាសយដ្ឋាន',\r\n            dataIndex: 'address',\r\n            key: 'address',\r\n            width: 70,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {(record?.personalInfo?.village !== \"ក្រៅសៀមរាប\") && record?.personalInfo?.village}\r\n                    {record?.personalInfo?.commune !== \"ក្រៅសៀមរាប\" && record?.personalInfo?.commune}\r\n                    {record?.personalInfo?.district !== \"ក្រៅសៀមរាប\" && record?.personalInfo?.district}\r\n                    {record?.personalInfo?.province && record?.personalInfo?.province}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'ស្ថានភាព',\r\n            dataIndex: 'status',\r\n            key: 'status',\r\n            width: 30,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {record?.personalInfo?.currentState?.confirm ? \"វិជ្ជមាន\" : \"អវិជ្ជមាន\"}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'លក្ខណៈពាក់ព័ន្ធ',\r\n            dataIndex: 'relatedInfo',\r\n            key: 'relatedInfo',\r\n            width: 30,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {record?.personalInfo?.direct ? \"ផ្ទាល់\":\"ប្រយោល\"}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            key: 'action',\r\n            dataIndex: 'action',\r\n            fixed: 'right',\r\n            width: 30,\r\n            align: 'center',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    <Link className=\"link\" to={\"/subPeople/\" + record?.personalInfo?.id}><EyeOutlined /></Link>\r\n                    <span className=\"link\" onClick={() => handleEditSubHospital(record)}><EditOutlined /></span>\r\n                    <Popconfirm\r\n                        title=\"តើអ្នកពិតចង់លុបមែនឬទេ?\"\r\n                        onConfirm={() => {handleDelete(record.id) }}\r\n                        okText=\"ចង់\"\r\n                        cancelText=\"មិនចង់\"\r\n                    >\r\n                        <span className=\"link\" style={{ color: \"red\" }}><DeleteOutlined /></span>\r\n                    </Popconfirm>\r\n\r\n                </Space>\r\n            ),\r\n        }\r\n    ]\r\n    return array\r\n}","import React, {useContext, useEffect, useState} from 'react'\r\nimport { Modal, Form, Input, DatePicker, Row, Col, Button ,Select,Divider,message} from 'antd'\r\nimport {HospitalController} from '../../../context/hospitalContext'\r\nimport {setEditHospital} from '../../../function/set'\r\n\r\nimport { ListSelect } from '../../../static/own-comp'\r\nimport { provinceData, districtData, communeData, villageData } from '../../../context/headerContext'\r\nimport { convertToDistrict, convertToCommune, convertToVillage } from '../../../function/fn'\r\nimport { useMutation } from '@apollo/client'\r\nimport { UPDATE_HOSPITALINFO_BY_ID } from '../../../graphql/hospital'\r\n\r\nconst { Option } = Select\r\n\r\nexport default function EditHospital({ open, setOpen, data, hospitalId,setRefetch }) {\r\n    const {hospitalDataDispatch} = useContext(HospitalController)\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const [province, setProvince] = useState(\"\")\r\n    const [district, setDistrict] = useState(\"\")\r\n    const [commune, setCommune] = useState(\"\")\r\n\r\n    const [updateHospitalInfo,{loading}] = useMutation(UPDATE_HOSPITALINFO_BY_ID,{\r\n        onCompleted:()=>{\r\n            setRefetch()\r\n            message.success(\"កែប្រែទិន្នន័យជោគជ័យ\")\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        \r\n        if (data !== undefined){\r\n            form.setFieldsValue(setEditHospital(data))\r\n            setProvince(data.province)\r\n            setDistrict(data.district)\r\n            setCommune(data.commune)\r\n        }\r\n\r\n        \r\n    }, [data])\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Success:', values);\r\n\r\n        updateHospitalInfo({\r\n            variables:{\r\n                lat: values.lat,\r\n                hospitalName: values.hospitalName,\r\n                long: values.long,\r\n                other: values.other,\r\n                tel: values.tel,\r\n                firstName: values.firstName,\r\n                lastName: values.lastName,\r\n                position: values.position,\r\n                others: values.others,\r\n                village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n                commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n                district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n                province: values.province === undefined ? \"\" : values.province,\r\n                id:hospitalId\r\n            }\r\n        })\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const setToGenderFn = (e) => {\r\n        form.setFieldsValue({\r\n            gender: e\r\n        });\r\n    };\r\n\r\n    const setToProviceFn = (e) => {\r\n        form.setFieldsValue({\r\n            province: e,\r\n            district: null,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setProvince(e)\r\n        setDistrict(\"\")\r\n        setCommune(\"\")\r\n    };\r\n\r\n\r\n    const setToDistrictFn = (e) => {\r\n        form.setFieldsValue({\r\n            district: e,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setDistrict(e)\r\n        setCommune(\"\")\r\n    };\r\n\r\n    const setToCommuneFn = (e) => {\r\n        form.setFieldsValue({\r\n            commune: e,\r\n            village: null,\r\n        });\r\n\r\n        setCommune(e)\r\n    };\r\n\r\n    const setToVillageFn = (e) => {\r\n        form.setFieldsValue({\r\n            village: e\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            title=\"កែប្រែមន្ទីរពេទ្យ\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n            destroyOnClose={false} \r\n            getContainer={false}\r\n            forceRender\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"editHospital\"\r\n                initialValues={setEditHospital(data)}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"hospitalName\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"ឈ្មោះមណ្ឌល\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"province\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <ListSelect type={1} data={provinceData} title=\"ខេត្ត/ក្រុង\" setValue={setToProviceFn} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {province === \"សៀមរាប\" ? (\r\n                        <>\r\n                            <Col xs={24} md={{ span: 11, offset: 0 }}>\r\n                                <Form.Item\r\n                                    name=\"district\"\r\n                                    rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                >\r\n                                    <ListSelect type={0} data={convertToDistrict(districtData)} title=\"ស្រុក/ខណ្ឌ\" setValue={setToDistrictFn} disabled={province !== \"សៀមរាប\" ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                                <Form.Item\r\n                                    name=\"commune\"\r\n                                    rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToCommune(district, communeData)} title=\"ឃុំ/សង្កាត់\" setValue={setToCommuneFn} disabled={district === \"\" || district === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 24, offset: 0 }}>\r\n                                <Form.Item\r\n                                    name=\"village\"\r\n                                    rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToVillage(commune, villageData)} title=\"ភូមិ\" setValue={setToVillageFn} disabled={commune === \"\" || commune === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </>\r\n                    ) : null}\r\n\r\n                    {/* <Col xs={24} md={{ span: 24, offset: 0 }}>\r\n                        <Form.Item\r\n                            name=\"capacity\"\r\n                        >\r\n                            <Input type=\"number\" placeholder=\"អាចផ្ទុកបាន\" />\r\n                        </Form.Item>\r\n                    </Col> */}\r\n\r\n                    <Col xs={24}>\r\n                        <Form.Item\r\n                            name=\"other\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"ចំណាំ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"long\"\r\n                            // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input type=\"number\" placeholder=\"longtitude\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"lat\"\r\n                            // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input type=\"number\" placeholder=\"latitude\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Divider>អ្នកទទួលខុសត្រូវ</Divider>\r\n                    <Col xs={24} md={{ span: 11, offset: 0 }}>\r\n                        <Form.Item\r\n                            name=\"firstName\"\r\n                            // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"នាម\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"lastName\"\r\n                            // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"គោត្តនាម\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 0 }}>\r\n                        <Form.Item\r\n                            name=\"position\"\r\n                            // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"តួនាទីការងារ\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"tel\"\r\n                            // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"លេខទូរស័ព្ទ\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 0 }}>\r\n                        <Form.Item\r\n                            name=\"others\"\r\n                        //rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <Input placeholder=\"ផ្សេងៗ\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            កែប្រែទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { Form, Modal, Input, Row, Col, Button, Select, message, DatePicker } from 'antd'\r\nimport { ListSelect } from '../../../static/own-comp'\r\nimport { provinceData, districtData, communeData, villageData, genderData } from '../../../context/headerContext'\r\nimport { convertToDistrict, convertToCommune, convertToVillage } from '../../../function/fn'\r\nimport { useMutation } from '@apollo/client'\r\nimport { CREATE_NEW_HOSPITALIZATION } from '../../../graphql/hospital'\r\nimport moment from 'moment'\r\n\r\nconst { Option } = Select\r\n\r\nexport default function AddSubHospital({ open, setOpen, hospitalId, peopleData, setRefetch }) {\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const [createHospitalization, { loading }] = useMutation(CREATE_NEW_HOSPITALIZATION, {\r\n        onCompleted: () => {\r\n            setRefetch()\r\n            message.success(\"បញ្ចូលទិន្នន័យជោគជ័យ\")\r\n        }\r\n    })\r\n\r\n    const onFinish = (values) => {\r\n\r\n        createHospitalization({\r\n            variables: {\r\n                // in: values.in,\r\n                date_in: moment(values.date_in).format(),\r\n                date_out: values.date_out === undefined || values.date_out === null ? null : moment(values.date_out).format(),\r\n                personalInfo: values.personalInfo,\r\n                hospitalInfo: hospitalId,\r\n                others: values.others,\r\n                // date:moment(values.date).format(),\r\n                // times:values.times,\r\n                // location:values.location,\r\n                // result:values.result,\r\n                // symptom:values.symptom,\r\n                // other:values.other\r\n            }\r\n        })\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const setToPeopleFn = (e) => {\r\n        form.setFieldsValue({\r\n            personalInfo: e\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            title=\"បញ្ចូលធ្វើតេស្ត\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"addSubHospital\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"personalInfo\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <ListSelect type={2} data={peopleData} title=\"អ្នកធ្វើតេស្ត\" setValue={setToPeopleFn} />\r\n                            {/* <Select placeholder=\"អ្នកធ្វើតេស្ត\" style={{ width: \"100%\" }} onChange={(e)=>console.log(e)}>\r\n                                {peopleData.map((people)=>(\r\n                                     <Option key={people?.id} value={people?.id}>{people?.lastName} {people?.firstName}</Option>\r\n                                ))}\r\n                               \r\n                            </Select> */}\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {/* <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"personalType\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n\r\n                            <Select placeholder=\"ប្រភេទ\" style={{ width: \"100%\" }}>\r\n                                <Option value=\"សហគមន៍\">សហគមន៍</Option>\r\n                                <Option value=\"តាមផ្លូងអាកាស\">តាមផ្លូងអាកាស</Option>\r\n                                <Option value=\"ពលករ\">ពលករ</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col> */}\r\n\r\n                    {/* <Col xs={24} md={{ span: 11,offset:2}}>\r\n                        <Form.Item\r\n                            name=\"in\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n\r\n                            <Select placeholder=\"តេស្ត\" style={{ width: \"100%\" }}>\r\n                                <Option value={true}>ចូល</Option>\r\n                                <Option value={false}>ចេញ</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col> */}\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"date_in\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <DatePicker placeholder=\"កាលបរិច្ឆេទចូល\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 24, offset: 0 }}>\r\n                        <Form.Item\r\n                            name=\"date_out\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <DatePicker placeholder=\"កាលបរិច្ឆេទចេញ\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 24 }}>\r\n                        <Form.Item\r\n                            name=\"others\"\r\n                        //rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n\r\n                            <Input placeholder=\"ផ្សេងៗ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Modal, Input, Row, Col, Button, DatePicker, message } from 'antd'\r\nimport { ListSelect } from '../../../static/own-comp'\r\nimport { setEditSubHospital } from '../../../function/set'\r\nimport { useMutation } from '@apollo/client'\r\nimport { UPDATE_PERSON_BY_HOSPITALINFO } from '../../../graphql/hospital'\r\nimport moment from 'moment'\r\n\r\nexport default function EditSubHospital({ open, setOpen, data, hospitalId, peopleData, setRefetch }) {\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const [updateHospitalization, { loading }] = useMutation(UPDATE_PERSON_BY_HOSPITALINFO, {\r\n        onCompleted: () => {\r\n            setRefetch()\r\n            message.success(\"កែប្រែទិន្នន័យជោគជ័យ\")\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        form.setFieldsValue(setEditSubHospital(data))\r\n    }, [data])\r\n\r\n    const onFinish = (values) => {\r\n        // console.log('Success:', values,data.id);\r\n        updateHospitalization({\r\n            variables: {\r\n                in: values.in,\r\n                date_in: moment(values.date_in).format(),\r\n                date_out: values.date_out === undefined || values.date_out === null  ? null : moment(values.date_out).format(),\r\n                // out_status:String,\r\n                personalInfo: values.personalInfo,\r\n                hospitalInfo: hospitalId,\r\n                others: values.others,\r\n                id: data.id\r\n            }\r\n        })\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const setToPeopleFn = (e) => {\r\n        form.setFieldsValue({\r\n            personalInfo: e\r\n        });\r\n    };\r\n\r\n\r\n    return (\r\n        <Modal\r\n            title=\"កែប្រែអ្នកជំងឺ\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"editSubHospital\"\r\n                // initialValues={setEditSubHospital(data)}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"personalInfo\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <ListSelect type={2} data={peopleData} title=\"អ្នកធ្វើតេស្ត\" setValue={setToPeopleFn} />\r\n                            {/* <Select placeholder=\"អ្នកចត្តាឡីស័ក\" style={{ width: \"100%\" }} onChange={(e) => console.log(e)}>\r\n                                {peopleData.map((people) => (\r\n                                    <Option key={people?.id} value={people?.id}>{people?.lastName} {people?.firstName}</Option>\r\n                                ))}\r\n\r\n                            </Select> */}\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"date_in\"\r\n                            rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <DatePicker placeholder=\"កាលបរិច្ឆេទចូល\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 24 }}>\r\n                        <Form.Item\r\n                            name=\"date_out\"\r\n                        // rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                        >\r\n                            <DatePicker placeholder=\"កាលបរិច្ឆេទចេញ\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 24 }}>\r\n                        <Form.Item\r\n                            name=\"others\"\r\n                        >\r\n\r\n                            <Input placeholder=\"ផ្សេងៗ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            កែប្រែទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import { Col, Row, Typography, Table, message, List, Avatar } from 'antd'\r\nimport React, { useState, useContext, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { HospitalController } from '../../context/hospitalContext'\r\nimport moment from 'moment'\r\nimport { subHospitalCol } from './tableColumn/subHospitalColumn'\r\nimport { PlusCircleOutlined, EditOutlined } from '@ant-design/icons';\r\nimport EditHospital from './modal/editHospital'\r\nimport AddSubHospital from './modal/addSubHospital'\r\nimport EditSubHospital from './modal/editSubHospital'\r\nimport { useMutation, useQuery } from '@apollo/client'\r\nimport { GET_ALL_PERSONINFO_NO_LIMIT } from '../../graphql/people'\r\nimport { GET_PERSON_BY_HOSPITALINFO } from '../../graphql/hospital'\r\nimport { GET_HOSPITALINFO_BY_ID } from '../../graphql/hospital'\r\nimport { DELETE_PERSON_BY_HOSPITAL } from '../../graphql/hospital'\r\n\r\n\r\nconst { Title } = Typography\r\n\r\nexport default function SubHospital() {\r\n\r\n    //const { hospitalData, subHospitalData, subHospitalDataDispatch } = useContext(HospitalController)\r\n\r\n    let { id } = useParams();\r\n\r\n    const [headerData, setHeaderData] = useState()\r\n    const [updateSubData, setUpdateSubData] = useState({})\r\n    const [peopleData, setPeopleData] = useState([])\r\n    const [openEdit, setOpenEdit] = useState(false)\r\n    const [openAddSub, setOpenAddSub] = useState(false)\r\n    const [openEditSub, setOpenEditSub] = useState(false)\r\n    const [subHospitalData, setSubHospitalData] = useState([])\r\n    const [hospitalData, setHospitalData] = useState({})\r\n\r\n    const [page, setPage] = useState(1)\r\n    const [limit, setLimit] = useState(10)\r\n    const [keyword, setKeyword] = useState(\"\")\r\n\r\n    const { data: hospital, refetch: refetchHospital } = useQuery(GET_HOSPITALINFO_BY_ID, {\r\n        variables: {\r\n            id: id\r\n        },\r\n        onCompleted: ({ getHospitalInfoById }) => {\r\n            // console.log(getHospitalInfoById)\r\n            setHospitalData(getHospitalInfoById)\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (hospital) {\r\n            setHospitalData(hospital?.getHospitalInfoById)\r\n        }\r\n    }, [hospital])\r\n\r\n    const { data } = useQuery(GET_ALL_PERSONINFO_NO_LIMIT, {\r\n        onCompleted: ({ allPersonalInfos }) => {\r\n            // console.log(allPersonalInfos)\r\n            setPeopleData(allPersonalInfos)\r\n        }\r\n    })\r\n\r\n    const { data: hospitalSub, refetch: refetchSub } = useQuery(GET_PERSON_BY_HOSPITALINFO, {\r\n        variables: {\r\n            page: page,\r\n            limit: limit,\r\n            keyword: keyword,\r\n            hospitalId: id\r\n        },\r\n        onCompleted: ({ getQuarantineByHospitalIdIdWithPagination }) => {\r\n           \r\n            setSubHospitalData(getQuarantineByHospitalIdIdWithPagination)\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (hospitalSub) {\r\n            setSubHospitalData(hospitalSub?.getQuarantineByHospitalIdIdWithPagination)\r\n        }\r\n    }, [hospitalSub])\r\n\r\n    const [deleteHospitalization, { loading }] = useMutation(DELETE_PERSON_BY_HOSPITAL, {\r\n        onCompleted: () => {\r\n            refetchSub()\r\n            message.success(\"លុបទិន្នន័យជោគជ័យ\")\r\n        }\r\n    })\r\n\r\n    // console.log(headerData)\r\n    const handleDelete = (e) => {\r\n        //subHospitalDataDispatch({type: \"DELETE_SUB_HOSPITAL\", payload: e})\r\n        deleteHospitalization({\r\n            variables: {\r\n                id: e\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleEditSubHospital = (e) => {\r\n        setUpdateSubData(e)\r\n        setOpenEditSub(true)\r\n    }\r\n    return (\r\n        <>\r\n            <Row>\r\n                <EditHospital open={openEdit} setOpen={setOpenEdit} data={hospitalData} hospitalId={id} setRefetch={refetchHospital} />\r\n                <AddSubHospital open={openAddSub} setOpen={setOpenAddSub} hospitalId={id} peopleData={peopleData} setRefetch={refetchSub} />\r\n                <EditSubHospital open={openEditSub} setOpen={setOpenEditSub} data={updateSubData} hospitalId={id} peopleData={peopleData} setRefetch={refetchSub} />\r\n                <Col\r\n                    xs={24}\r\n                >\r\n                    {/* <Title level={5}>ឈ្មោះករណី៖ \r\n                    <EditOutlined className=\"link\" onClick={() => setOpenEdit(true)}/>\r\n                </Title> */}\r\n                </Col>\r\n                <Col\r\n                    xs={24}\r\n                    md={11}\r\n                    className=\"subCase-card\"\r\n                >\r\n                    {/* <p>ឈ្មោះមណ្ឌល៖ {hospitalData?.hospitalName} <EditOutlined className=\"link\" onClick={() => setOpenEdit(true)} /></p>\r\n                <p>អាសយដ្ឋាន៖ {\" \"}\r\n                    {hospitalData?.village !== \"ក្រៅសៀមរាប\" && hospitalData?.village + \",\"}\r\n                    {hospitalData?.commune !== \"ក្រៅសៀមរាប\" && hospitalData?.commune + \",\"}\r\n                    {hospitalData?.district !== \"ក្រៅសៀមរាប\" && hospitalData?.district + \",\"}\r\n                    {hospitalData?.province}\r\n                </p>\r\n                <p>អ្នកទទួលខុសត្រូវ៖ {hospitalData?.personInCharge?.lastName} {hospitalData?.personInCharge?.firstName}</p>\r\n                <p>លេខទូរស័ព្ទ៖ {hospitalData?.personInCharge?.tel}</p>\r\n                <p>ចំណាំ៖ {hospitalData?.other}</p> */}\r\n                    <table>\r\n                        <tbody>\r\n                            <tr >\r\n                                <td style={{ width: '40%' }}><p>ឈ្មោះមណ្ឌល</p></td>\r\n                                <td style={{ width: '60%' }}><p>៖ {hospitalData?.hospitalName} <EditOutlined className=\"link\" onClick={() => setOpenEdit(true)} /></p></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td><p>អាសយដ្ឋាន</p></td>\r\n                                <td><p>៖ {hospitalData?.village !== \"ក្រៅសៀមរាប\" && hospitalData?.village + \",\"}\r\n                                    {hospitalData?.commune !== \"ក្រៅសៀមរាប\" && hospitalData?.commune + \",\"}\r\n                                    {hospitalData?.district !== \"ក្រៅសៀមរាប\" && hospitalData?.district + \",\"}\r\n                                    {hospitalData?.province}</p></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td><p>អ្នកទទួលខុសត្រូវ</p></td>\r\n                                <td><p>៖ {hospitalData?.personInCharge?.lastName}</p></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td><p>លេខទូរស័ព្ទ</p></td>\r\n                                <td><p>៖ {hospitalData?.personInCharge?.tel}</p></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td><p>ចំណាំ</p></td>\r\n                                <td><p>៖ {hospitalData?.other}</p></td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </Col>\r\n\r\n                {/* <Col\r\n                xs={24}\r\n                md={{ span: 11, offset: 2 }}\r\n                className=\"subCase-card\"\r\n            >\r\n                <p>មណ្ឌលព្យាបាល៖ </p>\r\n\r\n                <p>ឈ្មោះមណ្ឌល៖​ </p>\r\n                <p>ទីតាំង៖ </p>\r\n                <p>កាលបរិច្ឆេទ​ចូល៖ </p>\r\n                <p>កាលបរិច្ឆេទចេញ៖ </p>\r\n            </Col> */}\r\n\r\n\r\n                <Col\r\n                    xs={24}\r\n                    style={{ marginTop: 20 }}\r\n                >\r\n                    <Title level={5}>\r\n                        អ្នកជំងឺ៖ {\" \"}\r\n\r\n                        <PlusCircleOutlined className=\"link\" onClick={() => setOpenAddSub(true)} />\r\n                    </Title>\r\n\r\n                </Col>\r\n                <Col\r\n                    xs={24}\r\n                    md={24}\r\n                >\r\n                    <Table\r\n                        columns={subHospitalCol({ handleDelete, handleEditSubHospital, limit, page })}\r\n                        dataSource={subHospitalData?.hospitalizations}\r\n                        rowKey={record => record.id}\r\n                        pagination={{\r\n                            total: subHospitalData?.paginator?.totalDocs,\r\n                            // showSizeChanger: true,\r\n                            onChange: ((page, pageSize) => { setPage(page); setLimit(pageSize) })\r\n                        }}\r\n                        scroll={{ x: 240 }}\r\n                        sticky\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { Form, Input, Button, Checkbox, Row, Col,Image } from \"antd\";\r\nimport { LOGIN_USER, IS_LOGGED_IN } from \"../graphql/auth\";\r\nimport { useMutation, useQuery } from \"@apollo/client\";\r\nimport { isLoggedInVar } from \"../cache\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Logo from '../asset/srLogo.png'\r\n\r\n\r\nexport default function Login() {\r\n    const history = useHistory()\r\n  const { data: isLogin } = useQuery(IS_LOGGED_IN);\r\n  const [loginUser, { error, loading }] = useMutation(LOGIN_USER, {\r\n    onCompleted: ({ loginUser }) => {\r\n      localStorage.setItem(\"user\", JSON.stringify(loginUser));\r\n      isLoggedInVar(true);\r\n    },\r\n    onError: (e) => {\r\n      console.log(e.message);\r\n    },\r\n  });\r\n  const onFinish = (values) => {\r\n      console.log(values)\r\n    loginUser({\r\n      variables: {\r\n        username: values.username,\r\n        password: values.password,\r\n      },\r\n    });\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n <Row>\r\n<Col\r\n    xs={{ span: 24}}\r\n    md={{span: 16, offset: 4}}\r\n    lg={{span: 12, offset: 6}}\r\n    xl={{span: 8, offset: 8}}\r\n\r\n>\r\n    <div className=\"login-form\">\r\n\r\n        <div className=\"login-logo\">\r\n            <Image width={\"100%\"} src={Logo} preview={false} />\r\n        </div>\r\n        <h2 style={{ color: '#707070' }}>ការចូលគណនី</h2>\r\n        <div className=\"line-shape\"></div>\r\n        <Form autoComplete=\"off\"\r\n            name=\"basic\"\r\n            // style={{margin:'20%'}}\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n        >\r\n            <Form.Item\r\n                // label=\"Username\"\r\n                name=\"username\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'ត្រូវបំពេញប្រអប់ខាងលើ!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input  placeholder=\"ឈ្មោះសម្គាល់\" className=\"login-input\" />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                // label=\"Password\"\r\n                name=\"password\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'ត្រូវបំពេញប្រអប់ខាងលើ!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input type=\"password\" placeholder=\"លេខសម្ងាត់\" className=\"login-input\" />\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\" style={{ width: \"100%\", height: 'auto', fontSize: 20 }}>\r\n       ចូល\r\n      </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    </div>\r\n</Col>\r\n</Row> \r\n  );\r\n}\r\n\r\n{/* <Row>\r\n<Col\r\n    xs={{ span: 24}}\r\n    md={{span: 16, offset: 4}}\r\n    lg={{span: 12, offset: 6}}\r\n    xl={{span: 8, offset: 8}}\r\n\r\n>\r\n    <div className=\"login-form\">\r\n\r\n        <div className=\"login-logo\">\r\n            <Image width={\"100%\"} src={Logo} preview={false} />\r\n        </div>\r\n        <h2 style={{ color: '#707070' }}>ការចូលគណនី</h2>\r\n        <div className=\"line-shape\"></div>\r\n        <Form\r\n            name=\"basic\"\r\n            // style={{margin:'20%'}}\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n        >\r\n            <Form.Item\r\n                // label=\"Username\"\r\n                name=\"username\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'ត្រូវបំពេញប្រអប់ខាងលើ!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input placeholder=\"ឈ្មោះសម្គាល់\" className=\"login-input\" />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                // label=\"Password\"\r\n                name=\"password\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'ត្រូវបំពេញប្រអប់ខាងលើ!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input type=\"password\" placeholder=\"លេខសម្ងាត់\" className=\"login-input\" />\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\" style={{ width: \"100%\", height: 'auto', fontSize: 20 }}>\r\n                    ចូល\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    </div>\r\n</Col>\r\n</Row> */}\r\n\r\n\r\n\r\n// <Row>\r\n// <Col\r\n//   xs={{ span: 6, offset: 9 }}\r\n//   style={{\r\n//     padding: 20,\r\n//   }}\r\n// >\r\n//   <Form name=\"basic\" onFinish={onFinish} onFinishFailed={onFinishFailed}>\r\n//     <Form.Item\r\n//       label=\"Username\"\r\n//       name=\"username\"\r\n//       rules={[\r\n//         {\r\n//           required: true,\r\n//           message: \"Please input your username!\",\r\n//         },\r\n//       ]}\r\n//     >\r\n//       <Input />\r\n//     </Form.Item>\r\n//     <Form.Item\r\n//       label=\"Password\"\r\n//       name=\"password\"\r\n//       rules={[\r\n//         {\r\n//           required: true,\r\n//           message: \"Please input your password!\",\r\n//         },\r\n//       ]}\r\n//     >\r\n//       <Input.Password />\r\n//     </Form.Item>\r\n\r\n//     <Form.Item>\r\n//       <Button type=\"primary\" htmlType=\"submit\" style={{ width: \"100%\" }}>\r\n//         Submit\r\n//       </Button>\r\n//     </Form.Item>\r\n//   </Form>\r\n// </Col>\r\n// </Row>\r\n","import React from \"react\";\r\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\r\nimport \"./InfoBox.css\";\r\n\r\nfunction InfoBox({ title, cases, total, active, isRed, ImageShow, ...props }) {\r\n  let r = -80;\r\n  if(title===\"អ្នកវិជ្ជមាន\"){\r\n    r = -120;\r\n  }else if(title ===\"អ្នកកំពុងសម្រាកព្យាបាល\"){\r\n    r = -130;\r\n  }\r\n  return (\r\n    <Card\r\n      onClick={props.onClick}\r\n      className={`infoBox ${active && \"infoBox--selected\"} ${isRed && \"infoBox--red\"\r\n        } `}\r\n      style={{ position: 'relative' }}\r\n    >\r\n      <CardContent>\r\n        {/* <Typography  variant=\"h5\" color=\"textSecondary\" gutterBottom >\r\n          \r\n          {title}\r\n        </Typography> */}\r\n        <h4 className=\"infoBox_font\">{title}</h4>\r\n        <h3 className={`infoBox__cases ${!isRed && \"infoBox__cases--green\"}`}>\r\n          ថ្ងៃនេះ {cases}\r\n        </h3>\r\n\r\n        <Typography as=\"\" className=\" infoBox_font\" color=\"textSecondary\">\r\n          សរុប {total}\r\n        </Typography>\r\n\r\n        <img src={ImageShow} style={{\r\n          position: \"absolute\", top: -30,right:r\r\n        }} />\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default InfoBox;\r\n","import React from \"react\";\r\nimport \"./Table.css\";\r\nimport numeral from \"numeral\";\r\n\r\nfunction Table({ district }) {\r\n  return (\r\n    <div className=\"covid_tables\">\r\n      {district?.map((dis) => (\r\n        <tr className=\"tr\">\r\n          <td className=\"td\">{dis.district}</td>\r\n          <td className=\"td\">\r\n            <strong>{numeral(dis.confirmedCase).format(\"0,0\")}</strong>\r\n          </td>\r\n        </tr>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\nimport numeral from \"numeral\";\r\nimport { Circle, Popup,Marker,CircleMarker,Polygon} from \"react-leaflet\";\r\n\r\nconst casesTypeColors = {\r\n  cases: {\r\n    hex: \"#a70b99\",\r\n    rgb: \"rgb(167, 11, 153)\",\r\n    half_op: \"rgba(167, 11, 153, 0.5)\",\r\n    multiplier: 100,\r\n  },\r\n  recovered: {\r\n    hex: \"#7dd71d\",\r\n    rgb: \"rgb(125, 215, 29)\",\r\n    half_op: \"rgba(125, 215, 29, 0.5)\",\r\n    multiplier: 100,\r\n  },\r\n  deaths: {\r\n    hex: \"#de0d2d\",\r\n    rgb: \"rgb(222, 13, 45)\",\r\n    half_op: \"rgba(222, 13, 45, 0.5)\",\r\n    multiplier: 400,\r\n  },\r\n\r\n};\r\n\r\nexport const joinArray = (arr1, arr2) => {\r\n  let arr = []\r\n  arr1.map(load => {\r\n      arr2.map(load1 => {\r\n          if(load1.district === load._id){\r\n              arr.push({...load, ...load1})\r\n          }\r\n      })\r\n  })\r\nreturn arr;\r\n}\r\n\r\nexport const sortData = (data) => {\r\n  let sortedData = [...data];\r\n  sortedData.sort((a, b) => {\r\n    if (a.confirmedCase > b.confirmedCase) {\r\n      return -1;\r\n    } else {\r\n      return 1;\r\n    }\r\n  });\r\n  return sortedData;\r\n};\r\n\r\nexport const prettyPrintStat = (stat) =>\r\n  stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\r\n\r\nexport const showDataOnMap = (data, casesType = \"cases\") =>\r\n  data?.map((quarantineInfo) => (\r\n    <Circle\r\n      center={[quarantineInfo.lat, quarantineInfo.long]}\r\n      color={casesTypeColors[casesType].hex}\r\n      pathOptions={{\r\n        color: casesTypeColors[casesType].hex,\r\n        fillColor: casesTypeColors[casesType].hex,\r\n      }}\r\n      fillOpacity={0.4}\r\n      radius={\r\n        5000\r\n        // Math.sqrt(quarantineInfo[casesType]) * casesTypeColors[casesType].multiplier\r\n      }\r\n    >\r\n      <Popup>\r\n        <div className=\"info-container\">\r\n          {/* <div\r\n            className=\"info-flag\"\r\n            style={{ backgroundImage: `url(${quarantineInfo.quarantineInfoInfo.flag})` }}\r\n          ></div> */}\r\n          <div className=\"info-name\">{quarantineInfo.district}</div>\r\n          <div className=\"info-confirmed\">\r\n            អ្នកឆ្លង៖ {numeral(quarantineInfo.confirmedCase).format(\"0,0\")}\r\n          </div>\r\n          <div className=\"info-recovered\">\r\n            អ្នកជាសះស្បើយ: {numeral(quarantineInfo.recovered).format(\"0,0\")}\r\n          </div>\r\n          <div className=\"info-deaths\">\r\n            អ្នកស្លាប់: {numeral(quarantineInfo.death).format(\"0,0\")}\r\n          </div>\r\n        </div>\r\n      </Popup>\r\n    </Circle>\r\n  ));\r\n \r\n\r\n  export const showQuarantineInfoOnMap = (data) =>\r\n  data?.map((quarantineInfo) => (\r\n    <Circle\r\n      center={[quarantineInfo?.lat, quarantineInfo?.long]}\r\n      color=\"yellow\"\r\n      pathOptions={{\r\n        color: \"gray\",\r\n        fillColor: \"white\",\r\n      }}\r\n      fillOpacity={0.8}\r\n      radius={\r\n        1000\r\n        // Math.sqrt(quarantineInfo[casesType]) * casesTypeColors[casesType].multiplier\r\n      }\r\n    >\r\n      <Popup>\r\n        <div className=\"info-container\">\r\n          {/* <div\r\n            className=\"info-flag\"\r\n            style={{ backgroundImage: `url(${quarantineInfo.quarantineInfoInfo.flag})` }}\r\n          ></div> */}\r\n          <div className=\"info-name\">{quarantineInfo.locationName}</div>\r\n          \r\n          <div className=\"info-confirmed\">\r\n            សមត្តភាពផ្ទុក: {numeral(quarantineInfo.capacity).format(\"0,0\")}\r\n          </div>\r\n          <div className=\"info-recovered\">\r\n            អាស័យដ្ធាន: {quarantineInfo.village } {quarantineInfo.commune } {quarantineInfo.district } {quarantineInfo.province }\r\n          </div>\r\n          <div className=\"info-deaths\">\r\n            អ្នកទទួលខុសត្រូវ: {quarantineInfo.personInCharge.firstName}  {quarantineInfo.personInCharge.lastName}\r\n          </div>\r\n          <div className=\"info-deaths\">\r\n            តួនាទី: {quarantineInfo.personInCharge.position}  \r\n          </div>\r\n          <div className=\"info-deaths\">\r\n            ទូរស័ព្ទ: {quarantineInfo.personInCharge.tel}  \r\n          </div>\r\n        </div>\r\n      </Popup>\r\n    </Circle>\r\n  ));\r\n\r\n\r\n  //\r\n  export const  showHospitalInfoOnMap = (data) =>\r\n  data?.map((hospitalInfo) => (\r\n    <Circle\r\n      center={[hospitalInfo?.lat, hospitalInfo?.long]}\r\n      color=\"yellow\"\r\n      pathOptions={{\r\n        color: \"red\",\r\n        fillColor: \"white\",\r\n      }}\r\n      fillOpacity={0.8}\r\n      radius={\r\n        500\r\n        // Math.sqrt(hospitalInfo[casesType]) * casesTypeColors[casesType].multiplier\r\n      }\r\n    >\r\n      <Popup>\r\n        <div className=\"info-container\">\r\n          {/* <div\r\n            className=\"info-flag\"\r\n            style={{ backgroundImage: `url(${hospitalInfo.hospitalInfoInfo.flag})` }}\r\n          ></div> */}\r\n          <div className=\"info-name\">{hospitalInfo.hospitalName}</div>\r\n          \r\n          <div className=\"info-recovered\">\r\n            អាស័យដ្ធាន: {hospitalInfo.village } {hospitalInfo.commune } {hospitalInfo.district } {hospitalInfo.province }\r\n          </div>\r\n          <div className=\"info-deaths\">\r\n            អ្នកទទួលខុសត្រូវ: {hospitalInfo.personInCharge.firstName}  {hospitalInfo.personInCharge.lastName}\r\n          </div>\r\n          <div className=\"info-deaths\">\r\n            តួនាទី: {hospitalInfo.personInCharge.position}  \r\n          </div>\r\n          <div className=\"info-deaths\">\r\n            ទូរស័ព្ទ: {hospitalInfo.personInCharge.tel}  \r\n          </div>\r\n        </div>\r\n      </Popup>\r\n    </Circle>\r\n  ));\r\n","import React from \"react\";\r\nimport { MapContainer as LeafletMap, TileLayer,LayersControl } from \"react-leaflet\";\r\nimport \"./Map.css\";\r\nimport ReactLeafletGoogleLayer from 'react-leaflet-google-layer';\r\nimport { showDataOnMap,showQuarantineInfoOnMap ,showHospitalInfoOnMap} from \"./util\";\r\nimport { FaMapMarkedAlt } from 'react-icons/fa';\r\nimport {useQuery} from '@apollo/client'\r\nimport {ALL_QUARANTINEINFO} from '../../graphql/quarantine'\r\nimport {ALL_HOSPIAL_INFO} from '../../graphql/hospital'\r\n\r\n\r\n// allHospitalInfos\r\nfunction Map({ district, casesType, center, zoom }) {\r\n  const [satellite, setSatellite] = React.useState(false);\r\n  const [quantineData, setQuarantineData] = React.useState([]);\r\n  const [hospitalData, setHospitalData] = React.useState([]);\r\n  \r\n\r\n  \r\n  const { data: dd } = useQuery(ALL_QUARANTINEINFO, {\r\n    onCompleted: ({ allQuarantineInfos }) => {\r\n      setQuarantineData(allQuarantineInfos)\r\n    },\r\n  });\r\n\r\n  const { data: dat } = useQuery(ALL_HOSPIAL_INFO, {\r\n    onCompleted: ({ allHospitalInfos }) => {\r\n      setHospitalData(allHospitalInfos)\r\n    },\r\n  });\r\n\r\n  \r\n  return (\r\n    <div className=\"map \">\r\n        <button className=\"layerSwitcher\"\r\n      onClick={() => setSatellite(!satellite)}\r\n     >\r\n      <FaMapMarkedAlt />\r\n\r\n     </button>\r\n      <LeafletMap center={center} zoom={zoom}>\r\n      \r\n \r\n        <TileLayer\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n         {showDataOnMap(district, casesType)}\r\n         {showQuarantineInfoOnMap(quantineData)}\r\n         {showHospitalInfoOnMap( hospitalData)}\r\n        \r\n         {satellite ? (\r\n       <ReactLeafletGoogleLayer\r\n        googleMapsLoaderConf={{\r\n         KEY: 'AIzaSyCLpho9FZOn3PUIt7Pm8R6GPTIQQrJ1_1M',\r\n        }}\r\n        type={'satellite'}\r\n       />\r\n      ) : null}\r\n      </LeafletMap>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const GET_ALL_PROVINCE = gql`\r\n  query getAllProvince($district: String) {\r\n    getAllProvince(district: $district) {\r\n      death\r\n      recovered\r\n      confirmedCase\r\n      deathToday\r\n      recoveredToday\r\n      confirmedCaseToday\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_DATA_FOR_MAP = gql`\r\n  query getAllDistrictForMap {\r\n    getAllDistrictForMap {\r\n      death\r\n      confirmedCase\r\n      confirmedCaseToday\r\n      deathToday\r\n      recovered\r\n      recoveredToday\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_DATA_FOR_GRAP = gql`\r\n     query getDataForGrap{\r\n        getDataForGrap{\r\n            cases{\r\n              x \r\n              y\r\n            }\r\n            deaths{\r\n              x \r\n              y\r\n            }\r\n            recovered{\r\n              x \r\n              y\r\n            }\r\n        }\r\n  }\r\n`;\r\n","\r\nimport {GET_DATA_FOR_GRAP} from '../../graphql/dashboardAndReport'\r\nimport { useQuery } from \"@apollo/client\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Bar,Line } from \"react-chartjs-2\";\r\nimport numeral from \"numeral\";\r\n\r\n\r\nfunction BarChart({ casesType }) {\r\n  const [data, setData] = useState({});\r\n  const {dat,refetch} = useQuery(GET_DATA_FOR_GRAP,{onCompleted:({getDataForGrap})=>{\r\n    setData(getDataForGrap);\r\n  }})\r\n\r\n\r\n\r\n\r\nconst dd= [\"dfds\",\"dfd\",\"hels\",\"dgd\"]\r\nconst va= [10,20,30,40];\r\n\r\nconst datas = {\r\n \r\n  labels: dd,\r\n  datasets: [\r\n    {\r\n      label: \"Data\",\r\n      data: va,\r\n      fill: false,\r\n      backgroundColor: \"yellow\",\r\n      borderColor: \"red\"\r\n    },\r\n  ]\r\n};\r\n  return (\r\n    <div style={{height:\"400px\"}}>\r\n        <Line\r\n        data={datas}\r\n        options={{\r\n          maintainAspectRatio: false,\r\n        }}\r\n        />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BarChart;","export default __webpack_public_path__ + \"static/media/covid19.2861979f.png\";","export default __webpack_public_path__ + \"static/media/recover.5d6bc409.png\";","export default __webpack_public_path__ + \"static/media/death.e0bbc2c9.png\";","export default __webpack_public_path__ + \"static/media/curring.b38d166b.png\";","export default __webpack_public_path__ + \"static/media/direct.216dfd63.png\";","export default __webpack_public_path__ + \"static/media/close-area.6b62123e.png\";","export default __webpack_public_path__ + \"static/media/notdirect.a2fd079a.png\";","export default __webpack_public_path__ + \"static/media/open-area.70f8fc85.png\";","\r\nimport {GET_DATA_FOR_GRAP} from '../../graphql/dashboardAndReport'\r\nimport { useQuery } from \"@apollo/client\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Bar,Line } from \"react-chartjs-2\";\r\nimport numeral from \"numeral\";\r\n\r\n\r\nfunction LineGraph({ casesType }) {\r\n  const [data, setData] = useState({});\r\n  const {dat,refetch} = useQuery(GET_DATA_FOR_GRAP,{onCompleted:({getDataForGrap})=>{\r\n    setData(getDataForGrap);\r\n  }})\r\n\r\nlet color = \"rgb(167, 11, 153)\";\r\nlet caseData=data.cases;\r\nswitch(casesType){\r\n  case \"deaths\": \r\n    color = \"rgb(222, 13, 45)\"\r\n    caseData = data.deaths\r\n    break;\r\n      case \"recovered\":\r\n        color = \"rgb(125, 215, 29)\"\r\n        caseData = data.recovered\r\n    break;\r\n  default:\r\n    color = \"rgb(167, 11, 153)\"\r\n    caseData = data.cases\r\n    break;\r\n}\r\n\r\n\r\nconst dd= caseData?.map(d=>d.x);\r\nconst va= caseData?.map(d=>d.y);\r\n\r\nconst datas = {\r\n  labels: dd,\r\n  datasets: [\r\n    {\r\n      label: casesType,\r\n      data: va,\r\n      fill: false,\r\n      backgroundColor: color,\r\n      borderColor: color\r\n    },\r\n  ]\r\n};\r\n  return (\r\n    <div>\r\n        <Line\r\n        data={datas}\r\n        />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LineGraph;","\r\nimport {GET_DATA_FOR_GRAP} from '../../graphql/dashboardAndReport'\r\nimport { useQuery } from \"@apollo/client\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Bar,Line } from \"react-chartjs-2\";\r\nimport numeral from \"numeral\";\r\n\r\n\r\nfunction BarGraph() {\r\n  const [data, setData] = useState({});\r\n\r\n  const {dat,refetch} = useQuery(GET_DATA_FOR_GRAP,{onCompleted:({getDataForGrap})=>{\r\n    setData(getDataForGrap);\r\n  }})\r\n\r\nlet color = \"rgb(167, 11, 153)\";\r\n\r\n\r\n// const dd= caseData?.map(d=>d.x);\r\n// const va= caseData?.map(d=>d.y);\r\n\r\nconst a = [10,20,30,50];\r\nconst b =[\"ករណីឆ្លង\",\"ករណីឆ្លង\",\"ករណីឆ្លង\",\"ករណីឆ្លង\"];\r\n\r\n\r\n\r\nconst datas = {\r\n  labels: b,\r\n  datasets: [\r\n    {\r\n      label: \"Total\",\r\n      data: a,\r\n      fill: false,\r\n      backgroundColor:[\"red\",\"yellow\",\"blue\",\"green\"],\r\n      borderColor: color\r\n    },\r\n  ]\r\n};\r\n  return (\r\n    <div>\r\n        <Bar\r\n        data={datas}\r\n        />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BarGraph;","import React from 'react'\r\nimport {Line} from 'react-chartjs-2'\r\nfunction LineChartTesting() {\r\n    // <block:setup:1>\r\nconst labels = [\"Janurary\",\"February\",\"mar\"]\r\nconst data = {\r\n  labels: labels,\r\n  datasets: [{\r\n    label: 'My First Dataset',\r\n    data: [65, 59, 80],\r\n    fill: false,\r\n    borderColor: 'rgb(75, 192, 192)',\r\n    tension: 0.3\r\n  }]\r\n};\r\n\r\nconst options={\r\n    maintainAspectRatio: false,\r\n    tooltips:{\r\n      mode:'index',\r\n      callbacks:{\r\n        label:function(toolTipItem){\r\n          return (\"Revenue: $\"+toolTipItem.value)\r\n        }\r\n      }\r\n    },\r\n    scales:{\r\n        height:200,\r\n      xAxes:[\r\n        {\r\n          gridLines:{\r\n          display: false\r\n        },\r\n        //   scaleLabel:{\r\n        //     labelString:'Months',\r\n        //     display:true,\r\n        //     fontColor:'blue',\r\n        //     fontSize:20\r\n        //   },\r\n          ticks:{\r\n            fontColor:'green'\r\n          }\r\n        }\r\n      ],\r\n      yAxes:[\r\n      {\r\n        grid:{\r\n          display: false\r\n         \r\n        },\r\n        scaleLabel:{\r\n            labelString:'Revenue',\r\n            display:true,\r\n            fontColor:'blue',\r\n            fontSize:20,\r\n          },\r\n        ticks:{\r\n          beginAtZero:true,\r\n          fontColor:'green',\r\n          \r\n        }\r\n      }\r\n      ]\r\n    }\r\n  \r\n}\r\nreturn <div>\r\n<Line data={data} options={options} />\r\n</div>\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default LineChartTesting\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport \"./CovidScreen.css\";\r\nimport {\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  Card,\r\n  CardContent,\r\n} from \"@material-ui/core\";\r\n\r\nimport {\r\n  districForMap\r\n} from \"../context/headerContext\";\r\nimport { ListSelect } from \"../static/own-comp\";\r\nimport {\r\n  convertToCommune,\r\n  convertToDistrict,\r\n  convertToVillage,\r\n} from \"../function/fn\";\r\nimport InfoBox from \"../component/covideComponents/InfoBox\";\r\n\r\nimport Table from \"../component/covideComponents/Table\";\r\nimport { sortData, prettyPrintStat } from \"../component/covideComponents/util\";\r\nimport numeral from \"numeral\";\r\nimport Map from \"../component/covideComponents/Map\";\r\nimport { joinArray } from \"../component/covideComponents/util\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport { Form, Divider } from \"antd\";\r\nimport {\r\n  GET_ALL_PROVINCE,\r\n  GET_DATA_FOR_MAP,\r\n} from \"../graphql/dashboardAndReport\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport BarChart from \"../component/covideComponents/BarChart\";\r\nimport ImageCovid from '../asset/covid19.png'\r\nimport ImageRecover from '../asset/recover.png'\r\nimport ImageDeath from '../asset/death.png'\r\nimport ImageCure from '../asset/curring.png'\r\nimport ImageDirect from '../asset/direct.png'\r\nimport ImageClose from '../asset/close-area.png'\r\nimport ImageNotDirect from '../asset/notdirect.png'\r\nimport ImageOpen from '../asset/open-area.png'\r\nimport LineGraph from \"../component/covideComponents/LineGraph\";\r\nimport BarGraph from '../component/covideComponents/BarGraph'\r\nimport LineChartTesting from \"../component/covideComponents/LineChartTesting\";\r\n\r\nconst MapScreen = () => {\r\n  const districtLatLong = [\r\n    {\r\n      district: \"ក្រឡាញ់\",\r\n      lat: 13.60472222544493,\r\n      long: 103.45245485053685,\r\n    },\r\n    {\r\n      district: \"វ៉ារិន\",\r\n      lat: 13.867238663711532,\r\n      long: 103.87715707241854,\r\n    },\r\n    {\r\n      district: \"ស្រិស្នំ\",\r\n      lat: 13.852238272312373,\r\n      long: 103.53639730433542,\r\n    },\r\n    {\r\n      district: \"អង្គរជុំ\",\r\n      lat: 13.713723851088394,\r\n      long: 103.67219336284299,\r\n    },\r\n    {\r\n      district: \"បន្ទាយស្រី\",\r\n      lat: 13.605041870228655,\r\n      long: 103.97859822744759,\r\n    },\r\n    {\r\n      district: \"សូទ្រនិគម\",\r\n      lat: 13.414442053292065,\r\n      long: 104.10460200711728,\r\n    },\r\n    {\r\n      district: \"បាគង\",\r\n      lat: 13.303005227138778,\r\n      long: 103.9796463766434,\r\n    },\r\n    {\r\n      district: \"ពួក\",\r\n      lat: 13.440442720250852,\r\n      long: 103.71973510206098,\r\n    },\r\n    {\r\n      district: \"ជីក្រែង\",\r\n      lat: 13.232399982258997,\r\n      long: 104.33684532302983,\r\n    },\r\n    {\r\n      district: \"ស្វាយលើ\",\r\n      lat: 13.698615549661712,\r\n      long: 104.21744370698126,\r\n    },\r\n    {\r\n      district: \"អង្គរធំ\",\r\n      lat: 13.483410469370508,\r\n      long: 103.87412317588966,\r\n    },\r\n    {\r\n      district: \"សៀមរាប\",\r\n      lat: 13.364307627357189,\r\n      long: 103.85798154316932,\r\n    },\r\n    {\r\n      district: \"ក្រៅសៀមរាប\",\r\n      lat: 12.67868906722332,\r\n      long: 105.08204096969567,\r\n    },\r\n  ];\r\n\r\n  const [countryInfo, setCountryInfo] = useState({});\r\n  const [countries, setCountries] = useState([]);\r\n  const [mapCountries, setMapCountries] = useState([]);\r\n  const [tableData, setTableData] = useState([]);\r\n  const [casesType, setCasesType] = useState(\"cases\");\r\n  const [mapCenter, setMapCenter] = useState({ lat: 13.3633, lng: 103.8564 });\r\n  const [mapZoom, setMapZoom] = useState(9);\r\n  const [districtInfo, setDistrictInfo] = useState([]);\r\n\r\n  //update the data\r\n  const [district, setDistrict] = useState(\"\");\r\n  const [districtDatas, setDistrictDatas] = useState({});\r\n  let [form] = Form.useForm();\r\n\r\n  const { loading, error, refetch } = useQuery(GET_ALL_PROVINCE, {\r\n    variables: {\r\n      district: district,\r\n    },\r\n    onCompleted: ({ getAllProvince }) => {\r\n      setDistrictDatas(getAllProvince);\r\n    },\r\n  });\r\n\r\n  const { data: dd } = useQuery(GET_DATA_FOR_MAP, {\r\n    onCompleted: ({ getAllDistrictForMap }) => {\r\n      const mapDatas = joinArray(getAllDistrictForMap, districtLatLong);\r\n      setDistrictInfo(mapDatas);\r\n      let sortedData = sortData(mapDatas);\r\n      setTableData(sortedData);\r\n    },\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    refetch();\r\n  }, [district]);\r\n\r\n  const setToDistrictFn = (e) => {\r\n    form.setFieldsValue({\r\n      district: e,\r\n      commune: null,\r\n      village: null,\r\n    });\r\n    setDistrict(e);\r\n    // setCommune(\"\")\r\n  };\r\n\r\n\r\n  function lower(obj) {\r\n    for (var prop in obj) {\r\n      if (typeof obj[prop] === \"string\") {\r\n        obj[prop] = obj[prop].toLowerCase();\r\n      }\r\n      if (typeof obj[prop] === \"object\") {\r\n        lower(obj[prop]);\r\n      }\r\n    }\r\n    return obj;\r\n  }\r\n\r\n  countries.forEach((c) => {\r\n    lower(c);\r\n  });\r\n\r\n  return <>\r\n    <div className=\"app\">\r\n      <div className=\"app__left\">\r\n        <div className=\"app__header\">\r\n          <FormControl className=\"app__dropdown\">\r\n            <Form.Item\r\n              style={{marginBottom:0}}\r\n              name=\"district\"\r\n              rules={[\r\n                { required: true, message: \"Please input your username!\" },\r\n              ]}\r\n            >\r\n              <ListSelect\r\n                type={0}\r\n                data={convertToDistrict(districForMap)}\r\n                title=\"ស្រុក/ខណ្ឌ\"\r\n                setValue={setToDistrictFn}\r\n              />\r\n            </Form.Item>\r\n          </FormControl>\r\n        </div>\r\n        <div className=\"app__stats\">\r\n          <InfoBox\r\n            onClick={(e) => setCasesType(\"cases\")}\r\n            title=\"អ្នកវិជ្ជមាន\"\r\n            isRed\r\n            active={casesType === \"cases\"}\r\n            cases={districtDatas.confirmedCaseToday}\r\n            total={numeral(districtDatas.confirmedCase).format(\"0\")}\r\n            ImageShow={ImageCovid}\r\n          />\r\n          <InfoBox\r\n            onClick={(e) => setCasesType(\"recovered\")}\r\n            title=\"អ្នកជាសះស្បើយ\"\r\n            active={casesType === \"recovered\"}\r\n            cases={districtDatas.recoveredToday}\r\n            total={numeral(districtDatas.recovered).format(\"0\")}\r\n            ImageShow={ImageRecover}\r\n          />\r\n          <InfoBox\r\n            onClick={(e) => setCasesType(\"deaths\")}\r\n            title=\"អ្នកស្លាប់\"\r\n            isRed\r\n            active={casesType === \"deaths\"}\r\n            cases={districtDatas.deathToday}\r\n            total={numeral(districtDatas.death).format(\"0\")}\r\n            ImageShow={ImageDeath}\r\n          />\r\n          <InfoBox\r\n            // onClick={(e) => setCasesType(\"active\")}\r\n            title=\"អ្នកកំពុងសម្រាកព្យាបាល\"\r\n            isRed\r\n            // active={casesType === \"deaths\"}\r\n            cases={districtDatas.confirmedCaseToday - districtDatas.recoveredToday}\r\n            // total={numeral(districtDatas.death).format(\"0\")}\r\n            total={numeral(districtDatas.confirmedCase - districtDatas.recovered).format(\"0\")}\r\n            ImageShow={ImageCure}\r\n          />\r\n\r\n\r\n          <InfoBox\r\n            // onClick={(e) => setCasesType(\"cases\")}\r\n            title=\"អ្នកប៉ះពាល់ផ្ទាល់\"\r\n            isRed\r\n            // active={casesType === \"cases\"}\r\n            cases={districtDatas.confirmedCaseToday}\r\n            total={numeral(districtDatas.confirmedCase).format(\"0\")}\r\n            ImageShow={ImageDirect}\r\n          />\r\n          <InfoBox\r\n            // onClick={(e) => setCasesType(\"recovered\")}\r\n            title=\"អ្នកប៉ះពាល់ប្រយោល\"\r\n            // active={casesType === \"recovered\"}\r\n            cases={districtDatas.recoveredToday}\r\n            total={numeral(districtDatas.recovered).format(\"0\")}\r\n            ImageShow={ImageNotDirect}\r\n          />\r\n          <InfoBox\r\n            // onClick={(e) => setCasesType(\"deaths\")}\r\n            title=\"ទីតាំងបិទ\"\r\n            isRed\r\n            // active={casesType === \"deaths\"}\r\n            cases={districtDatas.deathToday}\r\n            total={numeral(districtDatas.death).format(\"0\")}\r\n            ImageShow={ImageClose}\r\n          />\r\n          <InfoBox\r\n            // onClick={(e) => setCasesType(\"active\")}\r\n            title=\"ទីតាំងបើក\"\r\n            isRed\r\n            // active={casesType === \"deaths\"}\r\n            cases={districtDatas.confirmedCaseToday - districtDatas.recoveredToday}\r\n            // total={numeral(districtDatas.death).format(\"0\")}\r\n            total={numeral(districtDatas.confirmedCase - districtDatas.recovered).format(\"0\")}\r\n            ImageShow={ImageOpen}\r\n          />\r\n        </div>\r\n        <Map\r\n          district={districtInfo}\r\n          casesType={casesType}\r\n          center={mapCenter}\r\n          zoom={mapZoom}\r\n        />\r\n      </div>\r\n      <div className=\"app__right\">\r\n        <Card className=\"first-card\" style={{ marginTop: \"55px\" }}>\r\n          <CardContent >\r\n            <div className=\"app__information\">\r\n              <h3 className=\"covid_table\">អ្នកវិជ្ជមានតាមក្រុង/ស្រុក</h3>\r\n              <Divider />\r\n              <Table district={tableData} />\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n        <Card className=\"sec-card\" style={{ marginTop: \"10px\" }}>\r\n          <CardContent>\r\n              <h3>ទិន្នន័យសរុប</h3>\r\n            <BarGraph />\r\n          </CardContent>\r\n        </Card>\r\n        <Card className=\"third-card\" style={{ marginTop: \"10px\" }}>\r\n          <CardContent>\r\n            {casesType === \"recovered\" ? (\r\n              <h3>អ្នកជាសះស្បើយ ទូទាំងខេត្ត</h3>\r\n            ) : null}\r\n            {casesType === \"deaths\" ? <h3>អ្នកស្លាប ទូទាំងខេត្ត</h3> : null}\r\n            {casesType === \"cases\" ? <h3>អ្នកវិជ្ជមាន ទូទាំងខេត្ត</h3> : null}\r\n            <LineGraph casesType={casesType} />\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n    {/* graph three datasets  */}\r\n\r\n    <Divider />\r\n    <div className=\"graph \">\r\n      <h2 className=\"covid_table\">ក្រាបបង្ហាញស្ថិតិប្រចាំថ្ងៃ</h2>\r\n      <BarChart casesType={casesType} />\r\n      {/* <BarGraph/> */}\r\n      {/* <LineChartTesting/> */}\r\n\r\n    </div>\r\n  </>;\r\n};\r\n\r\nexport default MapScreen;\r\n","import { Col, Row } from 'antd'\r\nimport React, { Component } from 'react'\r\n\r\nexport default class PrintReport extends Component {\r\n    render() {\r\n        return (\r\n            <div\r\n                style={{\r\n                    padding: 40\r\n                }}\r\n            >\r\n                <Row>\r\n                    <Col\r\n                        xs={12}\r\n                    >\r\n                        <div\r\n                            style={{\r\n                                textAlign: \"center\",\r\n                                width: 300,\r\n                                paddingTop: 20\r\n                                // backgroundColor: \"blue\"\r\n                            }}\r\n                        >\r\n                            <p>\r\n                                <span className=\"HeaderFont\">គណៈកម្មការអន្តរក្រសួង<br />\r\n                                    ដើម្បីប្រយុទ្ធនឹងជំងឺកូវីដ១៩ (COVID-19)</span><br /><br />\r\n\r\n                                អនុគណៈកម្មការស្រាវជ្រាវ និងតាមដានបុគ្គល<br />\r\n                                សង្ស័យថាមានផ្ទុកជំងឺកូវីដ១៩ (COVID-19)<br />\r\n\r\n                                ក្រុមការងារស្រាវជ្រាវតាមដានបុគ្គលសង្ស័យ<br />\r\n                                ថាមានផ្ទុកជំងឺកូវីដ១៩ ខេត្ត ...................<br />\r\n                                <span className=\"HeaderFont1\"\r\n                                    style={{\r\n                                        fontSize: \"300pt !important\"\r\n                                    }}\r\n                                >3</span><br />\r\n\r\n                                លេខ៖ ......................<br />\r\n                            </p>\r\n                        </div>\r\n                    </Col>\r\n                    <Col\r\n                        xs={12}\r\n                    >\r\n                        <div\r\n                            style={{\r\n                                textAlign: \"center\",\r\n                                width: 300,\r\n                                float: 'right'\r\n                                // backgroundColor: \"blue\"\r\n                            }}\r\n                        >\r\n                            <p>\r\n                                <span className=\"HeaderFont\">ព្រះរាជាណាចក្រកម្ពុជា<br />\r\n                                    ជាតិ សាសនា ព្រះមហាក្សត្រ\r\n\r\n                                </span><br />\r\n\r\n                                <span className=\"HeaderFont1\"\r\n                                    style={{\r\n                                        fontSize: \"300pt !important\"\r\n                                    }}\r\n                                >3</span>\r\n                            </p>\r\n                        </div>\r\n                    </Col>\r\n                    <Col\r\n                        xs={24}\r\n                    >\r\n                        <div\r\n                            style={{\r\n                                textAlign: \"center\"\r\n                            }}\r\n                        >\r\n                            <p className=\"HeaderFont\">\r\n                                គោរពជូន<br />\r\n                                ឯកឧត្តម ឧត្តមសេនីយ៍ឯក ឌី វិជ្ជា អគ្គស្នងការរង<br />\r\n                                និងជាប្រធានអនុគណៈកម្មការស្រាវជ្រាវ និងតាមដានបុគ្គលសង្ស័យ<br />\r\n                                ថាមានផ្ទុកជំងឺកូវីដ១៩ (Covid-19)\r\n\r\n                            </p>\r\n                        </div>\r\n                    </Col>\r\n                    <Col\r\n                        xs={24}\r\n                    >\r\n                        <div\r\n                            style={{\r\n                                paddingTop: 10\r\n                            }}\r\n                        >\r\n                            <table>\r\n                                <tr>\r\n                                    <td width=\"80\" style={{ verticalAlign: \"top\" }}>\r\n                                        <span className=\"HeaderFont\">\r\n                                            កម្មវត្ថុ៖\r\n                                        </span>\r\n                                    </td>\r\n                                    <td>\r\n                                        <p>\r\n                                            របាយការណ៍ស្ដីពី លទ្ធផលការងារប្រចាំថ្ងៃទី០១ ខែមេសា ឆ្នាំ២០២១ (គិតចាប់ពី ម៉ោង០៧:០០នាទីព្រឹក  ថ្ងៃទី០១ មេសា ឆ្នាំ២០២១ ដល់ ម៉ោង០៧:០០នាទីព្រឹក ថ្ងៃទី០២ មេសា ឆ្នាំ២០២១)។\r\n                                        </p>\r\n                                    </td>\r\n                                </tr>\r\n                            </table>\r\n                        </div>\r\n                    </Col>\r\n                    <Col\r\n                        xs={24}\r\n                    >\r\n                        <div\r\n                            style={{\r\n                                paddingTop: 10\r\n                            }}\r\n                        >\r\n                            <p>\r\n                                &emsp;តមតាមកម្មវត្ថុខាងលើ ខ្ញុំបាទសូមគោរពរាយការណ៍ជូន <b>ឯកឧត្តម ឧត្តមសេនីយ៍ឯក ឌី វិជ្ជា\r\n                                    អគ្គស្នងការរង និងជា ប្រធានអនុគណៈកម្មការស្រាវជ្រាវ និងតាមដានបុគ្គលសង្ស័យថាមានផ្ទុក\r\n                                    ជំងឺកូវីដ១៩ (Covid-19)</b> មេត្តាជ្រាប អំពីលទ្ធផលការងារប្រចាំថ្ងៃមានដូចខាងក្រោម៖\r\n                            </p>\r\n                        </div>\r\n                    </Col>\r\n                    <Col\r\n                        xs={24}\r\n                    >\r\n                        <div\r\n                        // style={{\r\n                        //     paddingTop: 10\r\n                        // }}\r\n                        >\r\n                            <ul>\r\n                                <li>\r\n                                    <span className=\"HeaderFont\">I. សភាពការណ៍ប្រចាំថ្ងៃ</span>\r\n                                </li>\r\n                                <ul>\r\n                                    <li>\r\n                                        <b>ក.ចំនួនអ្នកវិជ្ជមាន៖</b> អ្នកដែលមានផ្ទុកជំងឺកូវីដ១៩ ពាក់ព័ន្ធនឹងព្រឹត្តិការណ៍ ២០កុម្ភៈ សរុប ៦៣នាក់(ស្រី២៨នាក់) កើនថ្មី ០២នាក់ (ស្រី០១នាក់)\r\n                                    </li>\r\n                                    <ul style={{ listStyleType: \"disc\" }}>\r\n                                        <li>\r\n                                            ស្រុក............\t៖........នាក់ \tស្រី........នាក់\t(ថ្មី.........នាក់ ស្រី.......នាក់)\r\n                                        </li>\r\n                                        <li>\r\n                                            ស្រុក............\t៖........នាក់ \tស្រី........នាក់\t(ថ្មី.........នាក់ ស្រី.......នាក់)\r\n                                        </li>\r\n                                        <li>\r\n                                            ស្រុក............\t៖........នាក់ \tស្រី........នាក់\t(ថ្មី.........នាក់ ស្រី.......នាក់)\r\n                                        </li>\r\n                                    </ul>\r\n                                    <li>\r\n                                        <b>ខ.អ្នកជាសះស្បើយ៖</b> ..........នាក់ (ស្រី.........នាក់) ថ្មី.........នាក់ (ស្រី........នាក់)\r\n                                    </li>\r\n                                    <li>\r\n                                        <b>គ. អ្នកស្លាប់ចំនួន៖</b> ..........នាក់ (ស្រី.........នាក់) ថ្មី.........នាក់ (ស្រី........នាក់)\r\n                                    </li>\r\n                                    <li>\r\n                                        <b>ឃ. អ្នកដែលផ្ទុកជំងឺកូវីដ១៩ មិនសហការ៖ </b> ..........នាក់ (ស្រី.........នាក់) ថ្មី.........នាក់ (ស្រី........នាក់)\r\n                                    </li>\r\n                                </ul>\r\n                                <li>\r\n                                    <span className=\"HeaderFont\">II. ទីតាំងពាក់ព័ន្ធ</span>\r\n                                </li>\r\n                                <ul style={{ listStyleType: \"disc\" }}>\r\n                                    <li>\r\n                                        ទីតាំងដែលរកឃើញមានអ្នកពាក់ព័ន្ធសរុប\t៖..............ទីតាំង\t(ថ្មី ..........ទីតាំង)\r\n                                    </li>\r\n                                    <li>\r\n                                        ទីតាំងមិនបានបិទការចេញចូល\t៖..............ទីតាំង\t(ថ្មី ..........ទីតាំង)\r\n                                    </li>\r\n                                    <li>\r\n                                        ទីតាំងបិទការចេញចូលចំនួន\t៖..............ទីតាំង\t(ថ្មី...........ទីតាំង)\r\n                                    </li>\r\n                                    <li>\r\n                                        ទីតាំងបើកការចេញចូលឡើងវិញចំនួន\t៖..............ទីតាំង\t(ថ្មី...........ទីតាំង)\r\n                                    </li>\r\n                                    <li>\r\n                                        ទីតាំងមិនសហការ\t៖..............ទីតាំង \t(ថ្មី...........ទីតាំង)\r\n                                    </li>\r\n                                </ul>\r\n                                <li>\r\n                                    <span className=\"HeaderFont\">III. ការសម្ភាសន៍</span>\r\n                                </li>\r\n                                <ul>\r\n                                    <li>\r\n                                        <b>ក. លទ្ធផលសម្ភាសន៍អ្នកជំងឺសរុបចំនួន .....ករណី</b>\r\n                                    </li>\r\n                                    <ul style={{ listStyleType: \"disc\" }}>\r\n                                        <li>\r\n                                            ទំនាក់ទំនងអ្នកជំងឺបានចំនួន ........ករណី\r\n                                        </li>\r\n                                        <li>\r\n                                            ជនជាតិខ្មែរចំនួន ......នាក់ ស្រី.....នាក់ (ករណីថ្មី .....នាក់)\r\n                                        </li>\r\n                                        <li>\r\n                                            ជនជាតិចិនចំនួន ......នាក់ ស្រី ....នាក់ (ករណីថ្មី .....នាក់)\r\n                                        </li>\r\n                                    </ul>\r\n                                    <li>\r\n                                        <b>ខ.\tលទ្ធផលសម្ភាសន៍អ្នកប៉ះពាល់</b>\r\n                                    </li>\r\n                                    <ul style={{ listStyleType: \"disc\" }}>\r\n                                        <li>\r\n                                            ធ្វើការសម្ភាសន៍ និងណែនាំអ្នកប៉ះពាល់ចំនួន ......នាក់ ស្រី.......នាក់\r\n                                        </li>\r\n                                    </ul>\r\n                                    <li>\r\n                                        <b>គ.\tទីតាំងប៉ះពាល់</b>\r\n                                    </li>\r\n                                    <ul style={{ listStyleType: \"disc\" }}>\r\n                                        <li>\r\n                                            រកឃើញទីតាំងប៉ះពាល់សរុប ......តាំង\r\n                                        </li>\r\n                                        <li>\r\n                                            អាសយដ្ឋានច្បាស់លាស់ចំនួន .......ទីតាំង\r\n                                        </li>\r\n                                    </ul>\r\n                                </ul>\r\n\r\n                                <li style={{ marginTop: 100 }}>\r\n                                    <span className=\"HeaderFont\">IV. ក្រុមគ្រូពេទ្យ MOH និង RRT</span>\r\n                                </li>\r\n                                <ul style={{ listStyleType: \"disc\" }}>\r\n                                    <li>\r\n                                        ចុះយកសំណាក តាមទីតាំងចំនួន ..........ទីតាំង\r\n                                    </li>\r\n                                    <li>\r\n                                        យកសំណាកសរុបចំនួន.........នាក់ ស្រី..........នាក់\r\n                                    </li>\r\n                                </ul>\r\n                            </ul>\r\n                        </div>\r\n                    </Col>\r\n                    <Col\r\n                        xs={24}\r\n                    >\r\n                        <div\r\n                            style={{\r\n                                paddingTop: 10\r\n                            }}\r\n                        >\r\n                            <p>\r\n                                &emsp;អាស្រ័យដូចបានគោរពរាយការណ៍ជូនខាងលើ សូម <b>ឯកឧត្តម ឧត្តមសេនីយ៍ឯក ឌី វិជ្ជា\r\n                                    អគ្គស្នងការរង និងជាប្រធានអនុគណៈកម្មការស្រាវជ្រាវ និងតាមដានបុគ្គលសង្ស័យថាមានផ្ទុកជំងឺកូវីដ១៩\r\n                                    (Covid-19)</b> មេត្តាជ្រាបជារបាយការណ៍ដ៏ខ្ពង់ខ្ពស់។\r\n                            </p>\r\n                            <p>\r\n                                &emsp;សូម <b>ឯកឧត្តម ឧត្តមសេនីយ៍ឯក</b> មេត្តាទទួលនូវការគោរពដ៏ខ្ពង់ខ្ពស់អំពីខ្ញុំ ។\r\n                            </p>\r\n                        </div>\r\n                    </Col>\r\n                    <Col\r\n                        xs={24}\r\n                    >\r\n                        <div\r\n                            style={{\r\n                                textAlign: \"center\",\r\n                                width: 300,\r\n                                float: 'right'\r\n                                // backgroundColor: \"blue\"\r\n                            }}\r\n                        >\r\n                            ថ្ងៃ... ខែ...... ឆ្នាំជូត ទោស័ក ព.ស.២៥៦៤<br/>\r\n                            រាជធានីភ្នំពេញ, ថ្ងៃទី... ខែ..... ឆ្នាំ២០២១<br/>\r\n                            <b>អ្នកធ្វើរបាយការណ៍</b>\r\n\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import { Col, Row } from 'antd'\r\nimport React, { Component } from 'react'\r\n\r\nexport default class PrintReport1 extends Component {\r\n    render() {\r\n        return (\r\n            <div\r\n                style={{\r\n                    padding: 40\r\n                }}\r\n            >\r\n                <table border=\"1\" className=\"tbl-Report1\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th rowSpan={2}></th>\r\n                            <th colSpan={2}>\r\n                                ការយកសំណាក\r\n                            </th>\r\n                            <th colSpan={2}>\r\n                                ការសម្ភាសន៍\r\n                            </th>\r\n                            <th colSpan={2}>\r\n                                រកឃើញការប៉ះពាល់\r\n                            </th>\r\n                            <th colSpan={2}>\r\n                                ការបញ្ចូលអ្នកជំងឺ\r\n                            </th>\r\n                            <th colSpan={2}>\r\n                                លើកទិសដៅយកសំណាក\r\n                            </th>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>ចំនួនសំណាក់ម្សិលមិញ</th>\r\n                            <th>លទ្ធផលវិជ្ជមាន (Lab Form ទទួលបាន)</th>\r\n                            <th>សម្ភាសន៍បាន</th>\r\n                            <th>ទំនាក់ទំនងមិនបាន/ផ្សេងៗ</th>\r\n                            <th>អ្នកប៉ះពាល់</th>\r\n                            <th>ទីតាំងប៉ះពាល់</th>\r\n                            <th>ទៅមណ្ឌលព្យាបាល</th>\r\n                            <th>អនុញ្ញាតនៅផ្ទះ</th>\r\n                            <th>គោលដៅយកសំណាក</th>\r\n                            <th>សម្រេចបាន(ស្មើចំនួន%)</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>ភ្នំពេញ</td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>ខេត្ត</td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                        </tr>\r\n                        </tbody>\r\n                </table><br/>\r\n\r\n                <table border=\"1\" className=\"tbl-Report1\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th rowSpan={2}></th>\r\n                            <th colSpan={2}>\r\n                                ស៊ើបបញ្ជាក់ទីតាំង\r\n                            </th>\r\n                            <th colSpan={2}>\r\n                                វាយតម្លៃទីតាំង\r\n                            </th>\r\n                            <th colSpan={2}>\r\n                                ការងារ ១១៥\r\n                            </th>\r\n                            <th colSpan={2}>\r\n                                ទាញទិន្នន័យលេខទូរស័ព្ទ\r\n                            </th>\r\n                            <th colSpan={2}>\r\n                                ស្រាវជ្រាវ-អនុវត្តនីតិវិធី\r\n                            </th>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>គោលដៅបញ្ជាក់</th>\r\n                            <th>រកឃើញ</th>\r\n                            <th>បិទខ្ទប់</th>\r\n                            <th>បញ្ចប់ការបិទខ្ទប់</th>\r\n                            <th>ទទួលការហៅចូល</th>\r\n                            <th>ហៅចេញ(តាមដានអ្នកប៉ះពាល់)</th>\r\n                            <th>Lat-Long</th>\r\n                            <th>Scan QR</th>\r\n                            <th>បាត់ទំនាក់ទំនង</th>\r\n                            <th>ល្មើសវិធានកាលសុខាភិបាល</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>ភ្នំពេញ</td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>ខេត្ត</td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                        </tr>\r\n                        </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}","import { Col, Row } from 'antd'\r\nimport React, { Component } from 'react'\r\n\r\nexport default class PrintReport2 extends Component {\r\n    render() {\r\n        return (\r\n            <div\r\n                style={{\r\n                    padding: 40\r\n                }}\r\n            >\r\n                <table border=\"1\" className=\"tbl-Report2\">\r\n                    <thead>\r\n                        <tr>\r\n                        <th colSpan={2}></th>\r\n                        <th>២០កុម្ភៈ ៖ ១៧៧៨ (ស្រី ៩៧៩)</th>\r\n                        <th>នាំចូល៖ ១១៤ (ស្រី ៥៦)</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td rowSpan=\"2\">សញ្ជាតិ</td>\r\n                            <td>ខ្មែរ</td>\r\n                            <td>១៧៦០ (ស្រី៩៧៣)</td>\r\n                            <td>១៣២ (ស្រី៦៣)</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>ខ្មែរ</td>\r\n                            <td>១៧៦០ (ស្រី៩៧៣)</td>\r\n                            <td>១៣២ (ស្រី៦៣)</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td rowSpan=\"2\">រាជធានី</td>\r\n                            <td>ភ្នំពេញ</td>\r\n                            <td>១៧៦០ (ស្រី៩៧៣)</td>\r\n                            <td>១៣២ (ស្រី៦៣)</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>ខ្មែរ</td>\r\n                            <td>១៧៦០ (ស្រី៩៧៣)</td>\r\n                            <td>១៣២ (ស្រី៦៣)</td>\r\n                        </tr>\r\n                    </tbody>\r\n                    </table>\r\n            </div>\r\n        )\r\n    }\r\n}","import { Button, Modal } from 'antd';\r\nimport React, { useRef, useState } from 'react'\r\nimport ReactToPrint from 'react-to-print';\r\nimport DatePickerTwo from '../component/datepickertwo/datePickerTwo';\r\nimport PrintReport from '../component/print/report';\r\nimport PrintReport1 from '../component/print/report1';\r\nimport PrintReport2 from '../component/print/report2';\r\n\r\nexport default function Report() {\r\n    const componentRef = useRef()\r\n    const componentRef1 = useRef()\r\n    const componentRef2 = useRef()\r\n    const [openModal, setOpenModal] = useState(false)\r\n    const [openModal1, setOpenModal1] = useState(false)\r\n    const [openModal2, setOpenModal2] = useState(false)\r\n    const [ranges, setRanges] = useState({\r\n        startDate: \"\",\r\n        endDate: \"\",\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Button\r\n                    onClick={() => setOpenModal(true)}\r\n                >\r\n                    Print\r\n                </Button><Button\r\n                    onClick={() => setOpenModal1(true)}\r\n                >\r\n                    Print\r\n                </Button>\r\n                <Button\r\n                    onClick={() => setOpenModal2(true)}\r\n                >\r\n                    Print\r\n                </Button><br />\r\n                <DatePickerTwo ranges={ranges} setRange={setRanges} />\r\n            </div>\r\n            <Modal\r\n                width={1000}\r\n                visible={openModal}\r\n                footer={[\r\n                    <ReactToPrint\r\n                        trigger={() => <Button type=\"primary\" >Print this out!</Button>}\r\n                        content={() => componentRef.current}\r\n                    />\r\n                ]}\r\n                onCancel={() => setOpenModal(false)}\r\n            >\r\n                <PrintReport ref={componentRef} />\r\n            </Modal>\r\n\r\n            <Modal\r\n                width={1100}\r\n                visible={openModal1}\r\n                footer={[\r\n                    <ReactToPrint\r\n                        trigger={() => <Button type=\"primary\" >Print this out!</Button>}\r\n                        content={() => componentRef1.current}\r\n                    />\r\n                ]}\r\n                onCancel={() => setOpenModal1(false)}\r\n            >\r\n                <PrintReport1 ref={componentRef1} />\r\n            </Modal>\r\n\r\n            <Modal\r\n                width={1100}\r\n                visible={openModal2}\r\n                footer={[\r\n                    <ReactToPrint\r\n                        trigger={() => <Button type=\"primary\" >Print this out!</Button>}\r\n                        content={() => componentRef2.current}\r\n                    />\r\n                ]}\r\n                onCancel={() => setOpenModal2(false)}\r\n            >\r\n                <PrintReport2 ref={componentRef2} />\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","import { Space, Tooltip, Popconfirm } from 'antd'\r\nimport {\r\n    EditOutlined,\r\n    DeleteOutlined\r\n} from '@ant-design/icons';\r\nimport moment from 'moment'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const locationCol = ({ handleDelete, handleEdit, limit, page }) => {\r\n    let no = ((page - 1) * limit)\r\n    var array = [\r\n        {\r\n            title: 'ល.រ',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: 50,\r\n            render: (text, record, i) => (\r\n                <Space size=\"middle\">\r\n                {console.log(page)}\r\n                    {no += 1}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'ទីតាំង',\r\n            dataIndex: 'affectedLocationName',\r\n            key: 'affectedLocationName',\r\n            width: 150,\r\n        },\r\n     \r\n        {\r\n            title: 'អាសយដ្ឋាន',\r\n            dataIndex: 'address',\r\n            key: 'address',\r\n            width: 150,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {(record.village !== \"ក្រៅសៀមរាប\") && record.village}\r\n                    {record.commune !== \"ក្រៅសៀមរាប\" && record.commune}\r\n                    {record.district !== \"ក្រៅសៀមរាប\" && record.district}\r\n                    {record.province && record.province}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'ករណី',\r\n            dataIndex: 'address',\r\n            key: 'address',\r\n            width: 150,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {record?.case?.caseName}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'កាលបរិច្ឆេទបិទ',\r\n            dataIndex: 'closeAt',\r\n            key: 'closeAt',\r\n            width: 100,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {record.closeAt === null? \"មិនទាន់មានសកម្មភាព\" : moment(record.closeAt).format(\"ថ្ងែDD ខែMM ឆ្នាំYYYY\")}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'កាលបរិច្ឆេទបើក',\r\n            dataIndex: 'openAt',\r\n            key: 'openAt',\r\n            width: 100,\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {record.openAt === null? \"មិនទាន់មានសកម្មភាព\" : moment(record.openAt).format(\"ថ្ងែDD ខែMM ឆ្នាំYYYY\")}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'ចំណាំ',\r\n            dataIndex: 'other',\r\n            key: 'other',\r\n            width: 150,\r\n        },\r\n        {\r\n            key: 'action',\r\n            dataIndex: 'action',\r\n            fixed: 'right',\r\n            width: 50,\r\n            align: 'center',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    {/* <Link className=\"link\" to={\"/subSpecifylocation/\" + record.id}><EditOutlined /></Link> */}\r\n                    <span className=\"link\" onClick={() => handleEdit(record)}><EditOutlined /></span>\r\n                    <Popconfirm\r\n                        title=\"តើអ្នកពិតចង់លុបមែនឬទេ?\"\r\n                        onConfirm={() => { handleDelete(record.id) }}\r\n                        okText=\"ចង់\"\r\n                        cancelText=\"មិនចង់\"\r\n                    >\r\n                        <span className=\"link\" style={{ color: \"red\" }}><DeleteOutlined /></span>\r\n                    </Popconfirm>\r\n\r\n                </Space>\r\n            ),\r\n        }\r\n    ]\r\n    return array\r\n}","import React, { useContext, useState } from 'react'\r\nimport { Modal, Form, Input, DatePicker, Row, Col, Button, message } from 'antd'\r\nimport { CaseController } from '../../../context/caseContext'\r\nimport { provinceData, districtData, communeData, villageData, genderData } from '../../../context/headerContext'\r\nimport { ListSelect } from '../../../static/own-comp'\r\nimport { convertToCommune, convertToDistrict, convertToVillage, convertEditData } from '../../../function/fn'\r\nimport { UPDATE_AFFECTEDLOCATION_BY_ID } from '../../../graphql/location'\r\nimport { GET_ALL_CASES_NO_LIMIT } from '../../../graphql/case'\r\nimport { GET_ALL_PERSONINFO_NO_LIMIT } from '../../../graphql/people'\r\nimport { useMutation, useQuery } from '@apollo/client'\r\nimport moment from 'moment'\r\n\r\nexport default function AddLocation({ open, setOpen, setRefetch, dataEdit }) {\r\n\r\n\r\n    const [province, setProvince] = useState(\"\")\r\n    const [district, setDistrict] = useState(\"\")\r\n    const [commune, setCommune] = useState(\"\")\r\n    const [allCases, setAllCases] = useState([])\r\n    const [peopleData, setPeopleData] = useState([])\r\n\r\n    //const { caseDataDispatch } = useContext(CaseController)\r\n    const [updateAffectedLocation, { loading: createLoading }] = useMutation(UPDATE_AFFECTEDLOCATION_BY_ID, {\r\n        onCompleted: ({ updateAffectedLocation }) => {\r\n            message.success(\"បញ្ចូលទិន្នន័យជោគជ័យ\")\r\n        },\r\n        onError: (error) => {\r\n            console.log(error.message)\r\n        }\r\n    })\r\n\r\n    const { data, loading } = useQuery(GET_ALL_CASES_NO_LIMIT, {\r\n        onCompleted: ({ allCases }) => {\r\n            console.log(allCases)\r\n            setAllCases(allCases)\r\n        }\r\n    })\r\n\r\n    const { data: people } = useQuery(GET_ALL_PERSONINFO_NO_LIMIT, {\r\n        onCompleted: ({ allPersonalInfos }) => {\r\n            // console.log(allPersonalInfos)\r\n            setPeopleData(allPersonalInfos)\r\n        }\r\n    })\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Success:', values);\r\n        updateAffectedLocation({\r\n            variables: {\r\n                id: dataEdit.id,\r\n                affectedLocationName: values.affectedLocationName,\r\n                village: values.village === undefined ? \"ក្រៅសៀមរាប\" : values.village,\r\n                commune: values.commune === undefined ? \"ក្រៅសៀមរាប\" : values.commune,\r\n                district: values.district === undefined ? \"ក្រៅសៀមរាប\" : values.district,\r\n                province: values.province === undefined ? \"\" : values.province,\r\n                openAt: values.openAt === undefined ? null : moment(values.openAt),\r\n                closeAt: values.closeAt === undefined ? null : moment(values.closeAt),\r\n                other: values.other,\r\n                long: parseFloat(values.long),\r\n                lat: parseFloat(values.lat),\r\n            }\r\n        })\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const setToProviceFn = (e) => {\r\n        form.setFieldsValue({\r\n            province: e,\r\n            district: null,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setProvince(e)\r\n        setDistrict(\"\")\r\n        setCommune(\"\")\r\n    };\r\n\r\n\r\n    const setToDistrictFn = (e) => {\r\n        form.setFieldsValue({\r\n            district: e,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setDistrict(e)\r\n        setCommune(\"\")\r\n    };\r\n\r\n    const setToCommuneFn = (e) => {\r\n        form.setFieldsValue({\r\n            commune: e,\r\n            village: null,\r\n        });\r\n\r\n        setCommune(e)\r\n    };\r\n\r\n    const setToVillageFn = (e) => {\r\n        form.setFieldsValue({\r\n            village: e\r\n        });\r\n    };\r\n\r\n    const setToCaseFn = (e) => {\r\n        form.setFieldsValue({\r\n            case: e\r\n        });\r\n    };\r\n\r\n    const setToPeopleFn = (e) => {\r\n        form.setFieldsValue({\r\n            personalInfo: e\r\n        });\r\n    };\r\n\r\n    // console.log(convertEditData(dataEdit))\r\n\r\n    return (\r\n        <Modal\r\n            title=\"បញ្ចូលទីតាំង\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"addCase\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n                fields={convertEditData(dataEdit)}\r\n                // fields={[\r\n                //     {\r\n                //         name: \"closeAt\",\r\n                //         value: moment()\r\n                //     }\r\n                // ]}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"affectedLocationName\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"ទីតាំង\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n\r\n\r\n                    {/* <Select placeholder=\"លទ្ធផល\" style={{ width: \"100%\" }}>\r\n                        <Option value={true}>វិជ្ជមាន</Option>\r\n                        <Option value={false}>អវិជ្ជមាន</Option>\r\n                    </Select> */}\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"province\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <ListSelect type={1} data={provinceData} title=\"ខេត្ត/ក្រុង\" setValue={setToProviceFn} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {province === \"សៀមរាប\" ? (\r\n                        <>\r\n                            <Col xs={24} md={{ span: 11 }}>\r\n                                <Form.Item\r\n                                    name=\"district\"\r\n                                    rules={[{ required: true, message: 'Please input your username!' }]}\r\n                                >\r\n                                    <ListSelect type={0} data={convertToDistrict(districtData)} title=\"ស្រុក/ខណ្ឌ\" setValue={setToDistrictFn} disabled={province !== \"សៀមរាប\" ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                                <Form.Item\r\n                                    name=\"commune\"\r\n                                    rules={[{ required: true, message: 'Please input your username!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToCommune(district, communeData)} title=\"ឃុំ/សង្កាត់\" setValue={setToCommuneFn} disabled={district === \"\" || district === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 24 }}>\r\n                                <Form.Item\r\n                                    name=\"village\"\r\n                                    rules={[{ required: true, message: 'Please input your username!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToVillage(commune, villageData)} title=\"ភូមិ\" setValue={setToVillageFn} disabled={commune === \"\" || commune === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </>\r\n                    ) : null}\r\n                    \r\n                    <Col xs={24} md={{span: 11, offset: 0}}>\r\n                        <Form.Item\r\n                            name=\"closeAt\"\r\n                        >\r\n                            <DatePicker \r\n                                placeholder=\"កាលបរិច្ឆេទបិទ\"\r\n                                style={{width: \"100%\"}}\r\n                            />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{span: 11, offset: 2}}>\r\n                        <Form.Item\r\n                            name=\"openAt\"\r\n                        >\r\n                            <DatePicker \r\n                                placeholder=\"កាលបរិច្ឆេទបើក\"\r\n                                style={{width: \"100%\"}}\r\n                            />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Form.Item\r\n                            name=\"other\"\r\n                        >\r\n                            <Input placeholder=\"ចំណាំ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"long\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input type=\"number\" placeholder=\"longtitude\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"lat\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input type=\"number\" placeholder=\"latitude\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useContext, useState, useEffect } from 'react'\r\nimport { Row, Col, Button, Input, Table, message, Select } from 'antd'\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { locationCol } from '../component/location/tableColumn/locationColumn'\r\nimport { useQuery, useMutation } from '@apollo/client';\r\nimport { GET_ALL_CASES, DELETE_CASE_BY_ID } from '../graphql/case'\r\nimport { GET_AFFECTED_LOCATION_PAGINATION } from '../graphql/location';\r\nimport AddLocation from '../component/location/modal/addLocation';\r\nimport EditLocation from '../component/location/modal/editLocation';\r\nimport { DELETE_AFFECTEDLOCATION_BY_ID } from '../graphql/location';\r\n\r\nconst { Option } = Select\r\n\r\nexport default function Location() {\r\n    //const {caseData, caseDataDispatch} = useContext(CaseController)\r\n    // const [locationData, setLocationData] = useState([])\r\n    const [dataEdit, setDataEdit] = useState({})\r\n\r\n    const [openAdd, setOpenAdd] = useState(false)\r\n    const [openEdit, setOpenEdit] = useState(false)\r\n\r\n    const [page, setPage] = useState(1)\r\n    const [limit, setLimit] = useState(20)\r\n    const [keyword, setKeyword] = useState(\"\")\r\n\r\n    const { data, loading, error, refetch } = useQuery(GET_AFFECTED_LOCATION_PAGINATION, {\r\n        variables: {\r\n            page:page,\r\n            limit:limit,\r\n            keyword:keyword,\r\n        },\r\n        // onCompleted: ({ getAffectedLocationWithPagination }) => {\r\n        //     console.log(getAffectedLocationWithPagination)\r\n        //     setLocationData(getAffectedLocationWithPagination)\r\n\r\n        // },\r\n        fetchPolicy:'network-only'\r\n    })\r\n\r\n    const getAffectedLocationWithPagination = data?.getAffectedLocationWithPagination\r\n    \r\n    const [deleteAffectedLocation, { loading: deleteLoading }] = useMutation(DELETE_AFFECTEDLOCATION_BY_ID, {\r\n        onCompleted: ({deleteAffectedLocation}) => {\r\n            \r\n            if(deleteAffectedLocation.success === true){\r\n                refetch()\r\n                message.success(\"លុបទិន្នន័យជោគជ័យ\")\r\n            }else{\r\n                message.error(\"បរាជ័យ\")\r\n            }\r\n            \r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        refetch()\r\n    }, [page, limit, keyword])\r\n\r\n    const callRefetch = ()=>{\r\n        console.log(\"ref\")\r\n        \r\n    }\r\n\r\n\r\n    const handleDelete = (e) => {\r\n        //caseDataDispatch({type: \"DELETE_CASE\", payload: e})\r\n        deleteAffectedLocation({\r\n            variables: {\r\n                id: e\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleEdit = (e) => {\r\n        setOpenEdit(true)\r\n        setDataEdit(e)\r\n        // console.log(e)\r\n    }\r\n\r\n    \r\n    return (\r\n        <Row>\r\n            <AddLocation open={openAdd} setRefetch={refetch} setOpen={setOpenAdd} />\r\n            <EditLocation open={openEdit} setOpen={setOpenEdit} dataEdit={dataEdit} />\r\n            <Col\r\n                xs={8}\r\n                md={13}\r\n            >\r\n                <Button\r\n                    type=\"primary\"\r\n                    onClick={() => setOpenAdd(true)}\r\n                >\r\n                    បញ្ចូលទីតាំង\r\n                    <PlusOutlined />\r\n                </Button>\r\n            </Col>\r\n            <Col\r\n                xs={12}\r\n                md={4}\r\n            >\r\n                <Select style={{ width: \"100%\" }}>\r\n                    <Option value={true}>ទីតាំងដែលបានបិទ</Option>\r\n                    <Option value={false}>ទីតាំងដែលបានបើក</Option>\r\n                </Select>\r\n            </Col>\r\n            <Col\r\n                xs={24}\r\n                md={{ span: 6, offset: 1 }}\r\n            >\r\n                <Input.Search\r\n                    onChange={(e) => setKeyword(e.target.value)}\r\n                    placeholder=\"ស្វែងរក...\"\r\n                />\r\n            </Col>\r\n            <Col\r\n                xs={24}\r\n                style={{ marginTop: 20 }}\r\n            >\r\n                <Table\r\n                    className=\"table-go-list\"\r\n                    columns={locationCol({ handleDelete, handleEdit, limit, page })}\r\n                    dataSource={getAffectedLocationWithPagination?.affectedLocations}\r\n                    rowKey={record => record.id}\r\n                    // size=\"small\"\r\n                    pagination={{\r\n                        total: getAffectedLocationWithPagination?.paginator?.totalDocs,\r\n                        // showSizeChanger: true,\r\n                        onChange:((page, pageSize) => {setPage(page);setLimit(pageSize)} )\r\n                    }}\r\n                    scroll={{ x: 1500 }}\r\n                    sticky\r\n                />\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n","import { Col, Row, Typography, Table } from 'antd'\r\nimport React, { useState, useContext, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { CaseController } from '../../context/caseContext'\r\nimport moment from 'moment'\r\n// import { subCaseCol } from './tableColumn/subCaseColumn'\r\nimport { PlusCircleOutlined, EditOutlined } from '@ant-design/icons';\r\n// import EditCase from './modal/editCase'\r\n// import AddSubCase from './modal/addSubCase'\r\n// import EditSubCase from './modal/editSubCase'\r\nimport { getRelated } from '../../function/fn'\r\nimport { useMutation, useQuery } from '@apollo/client'\r\nimport { GET_PERSON_BY_CASE } from '../../graphql/case'\r\nimport { GET_CASE_BY_ID } from '../../graphql/case'\r\n\r\nconst { Title } = Typography\r\n\r\nexport default function SubLocation() {\r\n    // const { subCaseData, subCaseDataDispatch } = useContext(CaseController)\r\n\r\n    let { id } = useParams();\r\n\r\n    const [headerData, setHeaderData] = useState()\r\n    const [updateSubData, setUpdateSubData] = useState({})\r\n\r\n    const [subCaseData, setSubCaseData] = useState([])\r\n    const [openEdit, setOpenEdit] = useState(false)\r\n    const [openAddSub, setOpenAddSub] = useState(false)\r\n    const [openEditSub, setOpenEditSub] = useState(false)\r\n    const [caseData, setCaseData] = useState({})\r\n\r\n    const [page, setPage] = useState(1)\r\n    const [limit, setLimit] = useState(10)\r\n    const [keyword, setKeyword] = useState(\"\")\r\n\r\n    const { data, refetch } = useQuery(GET_PERSON_BY_CASE, {\r\n        variables: {\r\n            page: page,\r\n            limit: limit,\r\n            keyword: keyword,\r\n            caseId: id\r\n        },\r\n        onCompleted: ({ getPersonalInfoByCaseWithPagination }) => {\r\n            console.log(getPersonalInfoByCaseWithPagination)\r\n            setSubCaseData(getPersonalInfoByCaseWithPagination)\r\n        }\r\n    })\r\n\r\n    const { data: dataCase } = useQuery(GET_CASE_BY_ID, {\r\n        variables: {\r\n            id: id\r\n        },\r\n        onCompleted: ({ getCaseById }) => {\r\n            console.log(getCaseById)\r\n            setCaseData(getCaseById)\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        refetch()\r\n    }, [page, limit, keyword])\r\n\r\n    // console.log(headerData)\r\n    const handleDelete = (e) => {\r\n        // subCaseDataDispatch({type: \"DELETE_SUB_CASE\", payload: e})\r\n    }\r\n\r\n    const handleEditSubCase = (e) => {\r\n        setUpdateSubData(e)\r\n        setOpenEditSub(true)\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            {/* <EditCase open={openEdit} setOpen={setOpenEdit} data={caseData} caseId={id} />\r\n            <AddSubCase open={openAddSub} setOpen={setOpenAddSub} caseId={id} />\r\n            <EditSubCase open={openEditSub} setOpen={setOpenEditSub} data={updateSubData} setData={setUpdateSubData} /> */}\r\n            <Col\r\n                xs={24}\r\n            >\r\n                <Title level={5}>ឈ្មោះករណី៖ {caseData?.caseName + \" \"}\r\n                    <EditOutlined className=\"link\" onClick={() => setOpenEdit(true)} />\r\n                </Title>\r\n            </Col>\r\n            <Col\r\n                xs={24}\r\n                md={11}\r\n                className=\"subCase-card\"\r\n            >\r\n                <p>កាលបរិច្ឆេទ៖ {moment(caseData?.date).format(\"ថ្ងែDD ខែMM ឆ្នាំYYYY\")}</p>\r\n\r\n                <p>អាសយដ្ឋាន៖ {\" \"}\r\n                    {caseData?.village !== \"ក្រៅសៀមរាប\" && caseData?.village + \",\"}\r\n                    {caseData?.commune !== \"ក្រៅសៀមរាប\" && caseData?.commune + \",\"}\r\n                    {caseData?.district !== \"ក្រៅសៀមរាប\" && caseData?.district + \",\"}\r\n                    {caseData?.province}</p>\r\n                <p>ចំនួនអ្នកពាក់ព័ន្ធករណី៖ {subCaseData?.personalInfos?.length}</p>\r\n                <p>ផ្សេងៗ៖ {caseData?.other}</p>\r\n            </Col>\r\n            <Col\r\n                xs={24}\r\n                md={{ span: 11, offset: 2 }}\r\n                className=\"subCase-card\"\r\n            >\r\n                <p>ចំនួនអ្នកពាក់ព័ន្ធផ្ទាល់៖ {getRelated(subCaseData?.personalInfos, true)}នាក់</p>\r\n                <p>ចំនួនអ្នកពាក់ព័ន្ធប្រយោល៖ {getRelated(subCaseData?.personalInfos, false)}នាក់</p>\r\n                {/* <p>ចំនួនអ្នកជាសះស្បើយ៖ {getRelated(subCaseData, \"សះស្បើយ\")}នាក់</p>\r\n                <p>ចំនួនអ្នកស្លាប់៖ {getRelated(subCaseData, \"ស្លាប់\")}នាក់</p> */}\r\n            </Col>\r\n\r\n\r\n            <Col\r\n                xs={24}\r\n                style={{ marginTop: 20 }}\r\n            >\r\n                <Title level={5}>\r\n                    អ្នកពាក់ព័ន្ធ៖\r\n                    {/* <PlusCircleOutlined className=\"link\" onClick={() => setOpenAddSub(true)}/> */}\r\n                </Title>\r\n\r\n            </Col>\r\n            <Col\r\n                xs={24}\r\n                md={24}\r\n            >\r\n                {/* <Table\r\n                    columns={subCaseCol({ handleDelete, handleEditSubCase })}\r\n                    dataSource={subCaseData?.personalInfos}\r\n                    rowKey={record => record.id}\r\n                    pagination={{\r\n                        total: subCaseData?.paginator?.totalDocs,\r\n                        // showSizeChanger: true,\r\n                        onChange: ((page, pageSize) => { setPage(page); setLimit(pageSize) })\r\n                    }}\r\n                    scroll={{ x: 240 }}\r\n                    sticky\r\n                /> */}\r\n            </Col>\r\n        </Row>\r\n\r\n\r\n    )\r\n}\r\n","import { Space } from 'antd'\r\nimport {\r\n    EyeOutlined\r\n} from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const interviewCol = ({ handleDelete, limit, page, handleEdit }) => {\r\n    let no = ((page - 1) * limit)\r\n    var array = [\r\n        {\r\n            title: 'ល.រ',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: 60,\r\n            render: (text, record, i) => (\r\n                <Space size=\"middle\">\r\n                    {no += 1}\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'អត្តសញ្ញាណប័ណ្ណ',\r\n            dataIndex: 'idCard',\r\n            key: 'idCard',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'លេខកូដអ្នកជំងឺ',\r\n            dataIndex: 'patientId',\r\n            key: 'patientId',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'ឈ្មោះ',\r\n            dataIndex: 'personalInfos',\r\n            key: 'personalInfos',\r\n            width: 200,\r\n            render: (text, record) => (\r\n                <span size=\"middle\">\r\n                    {\r\n                        record.lastName + \" \" + record.firstName\r\n                    }\r\n                </span>\r\n            ),\r\n        },\r\n        {\r\n            title: 'ភេទ',\r\n            dataIndex: 'gender',\r\n            key: 'gender',\r\n            width: 60,\r\n        },\r\n        {\r\n            title: 'អាយុ',\r\n            dataIndex: 'age',\r\n            key: 'age',\r\n            width: 60,\r\n        },\r\n        {\r\n            title: 'សញ្ជាតិ',\r\n            dataIndex: 'nationality',\r\n            key: 'nationality',\r\n            width: 70,\r\n        },\r\n        {\r\n            title: 'អាស័យដ្ឋាន',\r\n            dataIndex: 'address',\r\n            key: 'address',\r\n            width: 250,\r\n            render: (text, record) => (\r\n                <span>\r\n                    {(record.village !== \"ក្រៅសៀមរាប\") && record.village + \", \"}\r\n                    {record.commune !== \"ក្រៅសៀមរាប\" && record.commune + \", \"}\r\n                    {record.district !== \"ក្រៅសៀមរាប\" && record.district + \", \"}\r\n                    {record.province && record.province}\r\n                </span>\r\n            ),\r\n        },\r\n        {\r\n            title: 'ទូរស័ព្ទ',\r\n            dataIndex: 'tel',\r\n            key: 'tel',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'ចំណាំ',\r\n            dataIndex: 'other',\r\n            key: 'other',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'សម្ភាស',\r\n            dataIndex: 'interviewed',\r\n            key: 'interviewed',\r\n            width: 150,\r\n            render: (text, record) => (\r\n                <span>\r\n                    {record.interviewed ? \"រួចរាល់\" : \"មិនទាន់រួចរាល់\"}\r\n                </span>\r\n            )\r\n        },\r\n        {\r\n            key: 'action',\r\n            dataIndex: 'action',\r\n            fixed: 'right',\r\n            width: 80,\r\n            align: 'center',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    <Link className=\"link\" to={\"/subPeople/\" + record.id}><EyeOutlined /></Link>\r\n                </Space>\r\n            ),\r\n        }\r\n    ]\r\n    return array\r\n}","import React, { useContext, useState } from 'react'\r\nimport { Modal, Form, Input, Row, Col, Button, Select, Divider,DatePicker, message  } from 'antd'\r\nimport { provinceData, districtData, communeData, villageData, genderData} from '../../../context/headerContext'\r\nimport { ListSelect } from '../../../static/own-comp'\r\nimport { convertToCommune, convertToDistrict, convertToVillage } from '../../../function/fn'\r\nimport { PeopleController } from '../../../context/peopleContext'\r\nimport { useQuery, useMutation } from '@apollo/client'\r\nimport { GET_ALL_CASES_NO_LIMIT } from '../../../graphql/case'\r\nimport { CREATE_NEW_PERSON } from '../../../graphql/people'\r\nimport { setAddPeople } from '../../../function/set'\r\n\r\nconst { Option } = Select\r\n\r\nexport default function AddInterview({ open, setOpen }) {\r\n    \r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const [province, setProvince] = useState(\"\")\r\n    const [district, setDistrict] = useState(\"\")\r\n    const [commune, setCommune] = useState(\"\")\r\n    const [allCases, setAllCases] = useState([])\r\n\r\n    const [createPersonalInfo,{loading:loadingCreate,error:errorCreate}] = useMutation(CREATE_NEW_PERSON,{\r\n        onCompleted:({createPersonalInfo})=>{\r\n            message.success(\"បញ្ចូលទិន្នន័យជោគជ័យ\")\r\n        },\r\n        onError:(error)=>{\r\n            console.log(error.message)\r\n        }\r\n    })\r\n\r\n    const {data,loading,error} = useQuery(GET_ALL_CASES_NO_LIMIT,{\r\n        onCompleted:({allCases})=>{\r\n            // console.log(allCases)\r\n            setAllCases(allCases)\r\n        }\r\n    })\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Success:', setAddPeople(values));\r\n\r\n        createPersonalInfo({variables:setAddPeople(values)})\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const setToGenderFn = (e) => {\r\n        form.setFieldsValue({\r\n            gender: e\r\n        });\r\n    };\r\n\r\n    const setToProviceFn = (e) => {\r\n        form.setFieldsValue({\r\n            province: e,\r\n            district: null,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setProvince(e)\r\n        setDistrict(\"\")\r\n        setCommune(\"\")\r\n    };\r\n\r\n\r\n    const setToDistrictFn = (e) => {\r\n        form.setFieldsValue({\r\n            district: e,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setDistrict(e)\r\n        setCommune(\"\")\r\n    };\r\n\r\n    const setToCommuneFn = (e) => {\r\n        form.setFieldsValue({\r\n            commune: e,\r\n            village: null,\r\n        });\r\n\r\n        setCommune(e)\r\n    };\r\n\r\n    const setToVillageFn = (e) => {\r\n        form.setFieldsValue({\r\n            village: e\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            title=\"បង្កើតការសម្ភាស\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"addPeople\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 24 }}>\r\n                        <Form.Item\r\n                            name=\"idCard\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"អត្តសញ្ញាណប័ណ្ណ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"lastName\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"គោត្តនាម\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"firstName\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"នាម\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"gender\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n\r\n                            <ListSelect type={0} data={genderData} title=\"ភេទ\" setValue={setToGenderFn} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"age\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"អាយុ\" type=\"number\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"occupation\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"មុខរបរ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"tel\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"ទូរស័ព្ទ\" addonBefore=\"+855\" type=\"number\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"nationality\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"សញ្ជាតិ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"province\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <ListSelect type={1} data={provinceData} title=\"ខេត្ត/ក្រុង\" setValue={setToProviceFn} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {province === \"សៀមរាប\" ? (\r\n                        <>\r\n                            <Col xs={24} md={{ span: 11 }}>\r\n                                <Form.Item\r\n                                    name=\"district\"\r\n                                    rules={[{ required: true, message: 'Please input your username!' }]}\r\n                                >\r\n                                    <ListSelect type={0} data={convertToDistrict(districtData)} title=\"ស្រុក/ខណ្ឌ\" setValue={setToDistrictFn} disabled={province !== \"សៀមរាប\" ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                                <Form.Item\r\n                                    name=\"commune\"\r\n                                    rules={[{ required: true, message: 'Please input your username!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToCommune(district, communeData)} title=\"ឃុំ/សង្កាត់\" setValue={setToCommuneFn} disabled={district === \"\" || district === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 24 }}>\r\n                                <Form.Item\r\n                                    name=\"village\"\r\n                                    rules={[{ required: true, message: 'Please input your username!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToVillage(commune, villageData)} title=\"ភូមិ\" setValue={setToVillageFn} disabled={commune === \"\" || commune === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </>\r\n                    ) : null}\r\n\r\n                    <Col xs={24} md={{ span:24}}>\r\n                        <Form.Item\r\n                            name=\"vaccinated\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input type=\"number\" placeholder=\"ចំនួនចាក់វ៉ាក់សាំង\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Divider>ពាក់ព័ន្ធករណី</Divider>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"case\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            {/* <Input type=\"number\" placeholder=\"ចំនួនចាក់វ៉ាក់សាំង\" /> */}\r\n                            <Select placeholder=\"ករណី\" style={{ width: \"100%\" }} onChange={(e)=> console.log(e)}>\r\n                                {\r\n                                    allCases.map((c)=>(\r\n                                        <Option value={c.id}>{c.caseName}</Option>\r\n                                    ))\r\n                                }\r\n                                {/* <Option value={true}>ផ្ទាល់</Option>\r\n                                <Option value={false}>ប្រយោល</Option> */}\r\n\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset:2 }}>\r\n                        <Form.Item\r\n                            name=\"direct\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Select placeholder=\"លក្ខណៈពាក់ព័ន្ធ\" style={{ width: \"100%\" }}>\r\n                                <Option value={true}>ផ្ទាល់</Option>\r\n                                <Option value={false}>ប្រយោល</Option>\r\n\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {/* <Divider>ស្ថានភាពបច្ចុប្បន្ន</Divider>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"status\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Select placeholder=\"ស្ថានភាព\" style={{ width: \"100%\" }}>\r\n                                <Option value=\"អវិជ្ជមាន\">អវិជ្ជមាន</Option>\r\n                                <Option value=\"វិជ្ជមាន\">វិជ្ជមាន</Option>\r\n\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11,offset:2 }}>\r\n                        <Form.Item\r\n                            name=\"date\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <DatePicker placeholder=\"កាលបរិច្ឆេទ\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"direct\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Select placeholder=\"លក្ខណៈពាក់ព័ន្ធ\" style={{ width: \"100%\" }}>\r\n                                <Option value={true}>ផ្ទាល់</Option>\r\n                                <Option value={false}>ប្រយោល</Option>\r\n\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span:11, offset:2 }}>\r\n                        <Form.Item\r\n                            name=\"otherOfStatus\"\r\n                            \r\n                        >\r\n                            <Input placeholder=\"ផ្សេងៗ\" />\r\n                        </Form.Item>\r\n                    </Col> */}\r\n\r\n                    \r\n\r\n                    <Col xs={24} md={{ span:24}}>\r\n                        <Form.Item\r\n                            name=\"other\"\r\n                            \r\n                        >\r\n                            <Input placeholder=\"ចំណាំ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { Modal, Form, Input, Row, Col, Button, Select, Divider, DatePicker, message, Checkbox } from 'antd'\r\nimport { provinceData, districtData, communeData, villageData, genderData } from '../../../context/headerContext'\r\nimport { ListSelect } from '../../../static/own-comp'\r\nimport { convertToCommune, convertToDistrict, convertToVillage } from '../../../function/fn'\r\nimport { PeopleController } from '../../../context/peopleContext'\r\nimport { useQuery, useMutation } from '@apollo/client'\r\nimport { GET_ALL_CASES_NO_LIMIT } from '../../../graphql/case'\r\nimport { CREATE_NEW_PERSON } from '../../../graphql/people'\r\nimport { setAddPeople } from '../../../function/set'\r\nimport { convertEditData } from '../../../function/fn'\r\n\r\nconst { Option } = Select\r\n\r\nexport default function EditInterview({ open, setOpen, editData }) {\r\n\r\n\r\n    let [form] = Form.useForm()\r\n\r\n    const [province, setProvince] = useState(\"\")\r\n    const [district, setDistrict] = useState(\"\")\r\n    const [commune, setCommune] = useState(\"\")\r\n    const [allCases, setAllCases] = useState([])\r\n\r\n    const [createPersonalInfo, { loading: loadingCreate, error: errorCreate }] = useMutation(CREATE_NEW_PERSON, {\r\n        onCompleted: ({ createPersonalInfo }) => {\r\n            message.success(\"បញ្ចូលទិន្នន័យជោគជ័យ\")\r\n        },\r\n        onError: (error) => {\r\n            console.log(error.message)\r\n        }\r\n    })\r\n\r\n    const { data, loading, error } = useQuery(GET_ALL_CASES_NO_LIMIT, {\r\n        onCompleted: ({ allCases }) => {\r\n            // console.log(allCases)\r\n            setAllCases(allCases)\r\n        }\r\n    })\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Success:', setAddPeople(values));\r\n\r\n        createPersonalInfo({ variables: setAddPeople(values) })\r\n\r\n        setOpen(false)\r\n        form.resetFields()\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const setToGenderFn = (e) => {\r\n        form.setFieldsValue({\r\n            gender: e\r\n        });\r\n    };\r\n\r\n    const setToProviceFn = (e) => {\r\n        form.setFieldsValue({\r\n            province: e,\r\n            district: null,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setProvince(e)\r\n        setDistrict(\"\")\r\n        setCommune(\"\")\r\n    };\r\n\r\n\r\n    const setToDistrictFn = (e) => {\r\n        form.setFieldsValue({\r\n            district: e,\r\n            commune: null,\r\n            village: null,\r\n        });\r\n\r\n        setDistrict(e)\r\n        setCommune(\"\")\r\n    };\r\n\r\n    const setToCommuneFn = (e) => {\r\n        form.setFieldsValue({\r\n            commune: e,\r\n            village: null,\r\n        });\r\n\r\n        setCommune(e)\r\n    };\r\n\r\n    const setToVillageFn = (e) => {\r\n        form.setFieldsValue({\r\n            village: e\r\n        });\r\n    };\r\n\r\n    convertEditData(editData)\r\n    return (\r\n        <Modal\r\n            title=\"បង្កើតការសម្ភាស\"\r\n            visible={open}\r\n            onOk={() => setOpen(false)}\r\n            onCancel={() => setOpen(false)}\r\n            footer={null}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"addPeople\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n                fields={\r\n                    convertEditData(editData)\r\n                }\r\n            >\r\n                <Row>\r\n                    <Col xs={24} md={{ span: 24 }}>\r\n                        <Form.Item\r\n                            name=\"idCard\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"អត្តសញ្ញាណប័ណ្ណ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"lastName\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"គោត្តនាម\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"firstName\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"នាម\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"gender\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n\r\n                            <ListSelect type={0} data={genderData} title=\"ភេទ\" setValue={setToGenderFn} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"age\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"អាយុ\" type=\"number\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"occupation\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"មុខរបរ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"tel\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"ទូរស័ព្ទ\" addonBefore=\"+855\" type=\"number\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"nationality\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input placeholder=\"សញ្ជាតិ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"province\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <ListSelect type={1} data={provinceData} title=\"ខេត្ត/ក្រុង\" setValue={setToProviceFn} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {province === \"សៀមរាប\" ? (\r\n                        <>\r\n                            <Col xs={24} md={{ span: 11 }}>\r\n                                <Form.Item\r\n                                    name=\"district\"\r\n                                    rules={[{ required: true, message: 'Please input your username!' }]}\r\n                                >\r\n                                    <ListSelect type={0} data={convertToDistrict(districtData)} title=\"ស្រុក/ខណ្ឌ\" setValue={setToDistrictFn} disabled={province !== \"សៀមរាប\" ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                                <Form.Item\r\n                                    name=\"commune\"\r\n                                    rules={[{ required: true, message: 'Please input your username!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToCommune(district, communeData)} title=\"ឃុំ/សង្កាត់\" setValue={setToCommuneFn} disabled={district === \"\" || district === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col xs={24} md={{ span: 24 }}>\r\n                                <Form.Item\r\n                                    name=\"village\"\r\n                                    rules={[{ required: true, message: 'Please input your username!' }]}\r\n                                >\r\n                                    <ListSelect type={1} data={convertToVillage(commune, villageData)} title=\"ភូមិ\" setValue={setToVillageFn} disabled={commune === \"\" || commune === null ? true : false} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </>\r\n                    ) : null}\r\n\r\n                    <Col xs={24} md={{ span: 24 }}>\r\n                        <Form.Item\r\n                            name=\"vaccinated\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input type=\"number\" placeholder=\"ចំនួនចាក់វ៉ាក់សាំង\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Divider>ពាក់ព័ន្ធករណី</Divider>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"case\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            {/* <Input type=\"number\" placeholder=\"ចំនួនចាក់វ៉ាក់សាំង\" /> */}\r\n                            <Select placeholder=\"ករណី\" style={{ width: \"100%\" }} onChange={(e) => console.log(e)}>\r\n                                {\r\n                                    allCases.map((c) => (\r\n                                        <Option value={c.id}>{c.caseName}</Option>\r\n                                    ))\r\n                                }\r\n                                {/* <Option value={true}>ផ្ទាល់</Option>\r\n                                <Option value={false}>ប្រយោល</Option> */}\r\n\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11, offset: 2 }}>\r\n                        <Form.Item\r\n                            name=\"direct\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Select placeholder=\"លក្ខណៈពាក់ព័ន្ធ\" style={{ width: \"100%\" }}>\r\n                                <Option value={true}>ផ្ទាល់</Option>\r\n                                <Option value={false}>ប្រយោល</Option>\r\n\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {/* <Divider>ស្ថានភាពបច្ចុប្បន្ន</Divider>\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"status\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Select placeholder=\"ស្ថានភាព\" style={{ width: \"100%\" }}>\r\n                                <Option value=\"អវិជ្ជមាន\">អវិជ្ជមាន</Option>\r\n                                <Option value=\"វិជ្ជមាន\">វិជ្ជមាន</Option>\r\n\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11,offset:2 }}>\r\n                        <Form.Item\r\n                            name=\"date\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <DatePicker placeholder=\"កាលបរិច្ឆេទ\" style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span: 11 }}>\r\n                        <Form.Item\r\n                            name=\"direct\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Select placeholder=\"លក្ខណៈពាក់ព័ន្ធ\" style={{ width: \"100%\" }}>\r\n                                <Option value={true}>ផ្ទាល់</Option>\r\n                                <Option value={false}>ប្រយោល</Option>\r\n\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={24} md={{ span:11, offset:2 }}>\r\n                        <Form.Item\r\n                            name=\"otherOfStatus\"\r\n                            \r\n                        >\r\n                            <Input placeholder=\"ផ្សេងៗ\" />\r\n                        </Form.Item>\r\n                    </Col> */}\r\n\r\n\r\n\r\n                    <Col xs={24} md={{ span: 24 }}>\r\n                        <Form.Item\r\n                            name=\"other\"\r\n\r\n                        >\r\n                            <Input placeholder=\"ចំណាំ\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Form.Item\r\n                        name=\"confirm\"\r\n                        valuePropName=\"checked\"\r\n                    >\r\n                        <Checkbox>ទិន្នន័យជាក់លាក់</Checkbox>\r\n                    </Form.Item>\r\n\r\n                    <Col xs={24}>\r\n                        <Button\r\n                            htmlType=\"submit\"\r\n                            type=\"primary\"\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            បញ្ចូលទិន្នន័យ\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useContext, useState, useEffect } from 'react'\r\nimport { Row, Col, Button, Input, Table, message, Select } from 'antd'\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { PeopleController } from '../context/peopleContext';\r\nimport { interviewCol } from '../component/interview/tableColumn/interviewColumn';\r\nimport AddInterview from '../component/interview/modal/addInterview';\r\nimport EditInterview from '../component/interview/modal/editInterview';\r\nimport { useQuery, useMutation } from '@apollo/client';\r\nimport { DELETE_PERSONALINFO_BY_ID, GET_INTERVIEW } from '../graphql/people';\r\nimport { DELETE_HOSPITALINFO_BY_ID } from '../graphql/hospital';\r\nimport { ListSelect } from '../static/own-comp'\r\n\r\nconst {Option} = Select\r\n\r\nexport default function Interview() {\r\n\r\n    const [interviewType, setInterviewType] = useState(false)\r\n\r\n    const [openAdd, setOpenAdd] = useState(false)\r\n    const [openEdit, setOpenEdit] = useState(false)\r\n\r\n    const [editData, setEditData] = useState({})\r\n\r\n    const [page, setPage] = useState(1)\r\n    const [limit, setLimit] = useState(10)\r\n    const [keyword, setKeyword] = useState(\"\")\r\n    const [interviewedData, setInterviewedData] = useState([])\r\n\r\n    const { data, loading, error } = useQuery(GET_INTERVIEW, {\r\n        variables: {\r\n            interview: interviewType,\r\n            page: page,\r\n            limit: limit,\r\n            keyword: keyword,\r\n        },\r\n        onCompleted: ({ getConfirmedPersonalInfoByInterviewWithPagination }) => {\r\n            console.log(getConfirmedPersonalInfoByInterviewWithPagination)\r\n            setInterviewedData(getConfirmedPersonalInfoByInterviewWithPagination)\r\n        }\r\n    })\r\n    // const getPersonalInfoWithPagination \r\n    useEffect(() => {\r\n        if (data) {\r\n            setInterviewedData(data?.getConfirmedPersonalInfoByInterviewWithPagination)\r\n        }\r\n    }, [data])\r\n\r\n    const [deletePersonalInfo, { loading: deleteLoading }] = useMutation(DELETE_PERSONALINFO_BY_ID, {\r\n        onCompleted: () => {\r\n            message.success(\"លុបទិន្នន័យជោគជ័យ\")\r\n        }\r\n    })\r\n\r\n    const handleDelete = (e) => {\r\n        deletePersonalInfo({\r\n            variables: {\r\n                id: e\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleEdit = (e) => {\r\n        setEditData(e)\r\n        setOpenEdit(true)\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            {/* <AddInterview open={openAdd} setOpen={setOpenAdd} />\r\n            <EditInterview open={openEdit} setOpen={setOpenEdit} editData={editData}/> */}\r\n            <Col\r\n                xs={12}\r\n                md={13}\r\n            >\r\n                {/* <Button\r\n                    type=\"primary\"\r\n                    onClick={() => setOpenAdd(true)}\r\n                >\r\n                    បញ្ចូលប្រជាជន\r\n                    <PlusOutlined />\r\n                </Button> */}\r\n            </Col>\r\n            <Col\r\n                xs={12}\r\n                md={4}\r\n            >\r\n                <Select defaultValue={interviewType} style={{ width: \"100%\" }} onChange={(e) => setInterviewType(e) }>\r\n                    <Option value={true}>អ្នកសម្ភាសរួចរាល់</Option>\r\n                    <Option value={false}>អ្នកមិនទាន់សម្ភាស</Option>\r\n                </Select>\r\n            </Col>\r\n            <Col\r\n                xs={24}\r\n                md={{ span: 6, offset: 1 }}\r\n            >\r\n                <Input.Search\r\n                    onChange={(e) => setKeyword(e.target.value)}\r\n                    placeholder=\"ស្វែងរក...\"\r\n                />\r\n            </Col>\r\n            <Col\r\n                xs={24}\r\n                style={{ marginTop: 20 }}\r\n            >\r\n                <Table\r\n                    className=\"table-go-list\"\r\n                    columns={interviewCol({ handleDelete, limit, page, handleEdit })}\r\n                    dataSource={interviewedData?.personalInfos}\r\n                    rowKey={record => record.id}\r\n                    pagination={{\r\n                        total: interviewedData?.paginator?.totalDocs,\r\n                        //pageSizeOptions:[\"10\", \"20\"],\r\n                        // showSizeChanger: true,\r\n                        current: interviewedData?.paginator?.currentPage,\r\n                        onChange: ((page, pageSize) => { setPage(page); setLimit(pageSize) })\r\n                    }}\r\n                    scroll={{ x: 1000 }}\r\n                    sticky\r\n                />\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Result, Button } from 'antd';\r\nfunction NotFound() {\r\n    return (\r\n  <Result\r\n    status=\"404\"\r\n    title=\"404\"\r\n    subTitle=\"Sorry, the page you visited does not exist.\"\r\n    extra={<Button type=\"primary\">ត្រលប់ក្រោយ</Button>}\r\n  />\r\n    )\r\n}\r\n\r\nexport default NotFound\r\n","import React, { useState } from 'react'\r\nimport MenuHeader from './dynamic/menu';\r\nimport Navbar from './dynamic/navbar';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  // Link\r\n} from \"react-router-dom\";\r\nimport { Image } from 'antd'\r\nimport GoGlobalLogo from './asset/goglobalschool.png'\r\nimport HeaderContext from './context/headerContext';\r\nimport DashBoardContext from './context/dashboardContext'\r\nimport CaseContext from './context/caseContext'\r\nimport UserContext from './context/userContext';\r\nimport QuarantineContext from './context/quarantineContext';\r\nimport HospitalContext from './context/hospitalContext';\r\n\r\nimport Dashboard from './page/dashboard';\r\nimport Case from './page/case'\r\nimport SubCase from './component/case/subCase';\r\nimport User from './page/user';\r\nimport Quarantine from './page/quarantine'\r\nimport SubQuarantine from './component/quarantine/subQuarantine';\r\nimport PeopleContext from './context/peopleContext';\r\nimport People from './page/people';\r\nimport SubPeople from './component/people/subPeople';\r\nimport Hospital from './page/hospital';\r\nimport SubHospital from './component/hospital/subHospital';\r\nimport Login from './page/login'\r\nimport { Layout } from 'antd'\r\nimport { useQuery } from '@apollo/client'\r\nimport { IS_LOGGED_IN } from './graphql/auth'\r\nimport MapScreen from './page/map';\r\nimport Report from './page/report';\r\nimport Location from './page/location';\r\nimport SubLocation from './component/location/subLocation';\r\nimport Interview from './page/interview';\r\nimport NotFound from './component/NotFound';\r\nimport ImageBack from './asset/cover-bg.jpg'\r\nconst { Footer, Content } = Layout\r\nconst Routes = () => {\r\n  const { data: isLogin } = useQuery(IS_LOGGED_IN);\r\n  const login = isLogin.isLoggedIn;\r\n  {/* <Dashboard /> */ }\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Layout style={{ minHeight: '100vh' }}>\r\n          \r\n          {login ? <>\r\n            <HeaderContext>\r\n              <MenuHeader />\r\n            </HeaderContext>\r\n            <Layout className=\"site-layout\">\r\n              <HeaderContext>\r\n                <Navbar />\r\n              </HeaderContext>\r\n              <Content style={{ margin: '20px',  }}>\r\n                \r\n                <DashBoardContext>\r\n                  <CaseContext>\r\n                    <UserContext>\r\n                      <QuarantineContext>\r\n                        <PeopleContext>\r\n                          <HospitalContext>\r\n                            <Switch >\r\n                              <Route exact path=\"/\">\r\n                                <MapScreen />\r\n                              </Route>\r\n                              <Route path=\"/case\">\r\n                                <Case />\r\n                              </Route>\r\n                              <Route path=\"/subCase/:id\">\r\n                                <SubCase />\r\n                              </Route>\r\n                              <Route path=\"/people\">\r\n                                <People />\r\n                              </Route>\r\n                              <Route path=\"/subPeople/:id\">\r\n                                <SubPeople />\r\n                              </Route>\r\n                              <Route path=\"/user\">\r\n                                <User />\r\n                              </Route>\r\n                              <Route path=\"/quarantine\">\r\n                                <Quarantine />\r\n                              </Route>\r\n                              <Route path=\"/subQuarantine/:id\">\r\n                                <SubQuarantine />\r\n                              </Route>\r\n                              <Route path=\"/hospital\">\r\n                                <Hospital />\r\n                              </Route>\r\n                              <Route path=\"/subHospital/:id\">\r\n                                <SubHospital />\r\n                              </Route>\r\n                              <Route path=\"/reportdaily\">\r\n                                <Report />\r\n                              </Route>\r\n                              <Route path=\"/specifylocation\">\r\n                                <Location />\r\n                              </Route>\r\n                              <Route path=\"/subSpecifylocation/:id\">\r\n                                <SubLocation />\r\n                              </Route>\r\n                              <Route path=\"/interview\">\r\n                                <Interview />\r\n                              </Route>\r\n                              <Route path=\"*\">\r\n                                <NotFound/>\r\n                              </Route>\r\n                            </Switch>\r\n                          </HospitalContext>\r\n                        </PeopleContext>\r\n                      </QuarantineContext>\r\n                    </UserContext>\r\n                  </CaseContext>\r\n                </DashBoardContext>\r\n              </Content>\r\n\r\n              <Footer style={{ textAlign: 'center', color: 'red', fontSize: 17 }}>\r\n                <marquee>\r\n                  <span style={{}}>\r\n                    <span  style={{ marginRight:15 }} >\r\n                      <Image height=\"25px\" width=\"25px\" src={GoGlobalLogo} preview={false}/>\r\n                    </span>\r\n                    <span style={{position:'absolute', top:2}}>សាលាហ្គោគ្លូប៊ល | Go Global School &copy;2021</span>\r\n                  </span>\r\n                </marquee>\r\n\r\n              </Footer>\r\n            </Layout></> : <Switch>\r\n            <Route>\r\n              <Login />\r\n            </Route>\r\n          </Switch>\r\n          }\r\n        </Layout>\r\n      </div>\r\n\r\n\r\n\r\n\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default Routes\r\n","export default __webpack_public_path__ + \"static/media/cover-bg.ed223e12.jpg\";","import './static/App.css';\r\n\r\nimport React, { useState } from 'react'\r\nimport {cache} from './cache'\r\nimport {\r\n  split,\r\n   HttpLink,\r\n  ApolloClient,\r\n  InMemoryCache,\r\n  ApolloProvider\r\n} from \"@apollo/client\";\r\nimport { createUploadLink } from 'apollo-upload-client';\r\nimport { getMainDefinition } from '@apollo/client/utilities';\r\nimport { WebSocketLink } from '@apollo/client/link/ws';\r\nimport Routes from './Routes';\r\n\r\nconst token =()=>{\r\n  let newToken =  JSON.parse(localStorage.getItem('user'))\r\n  return newToken?.token\r\n}\r\n\r\nconst tokens = token()\r\nconsole.log(process.env.React_App_WS,\"env\")\r\n const upLoadLink = createUploadLink({\r\n    uri: process.env.React_App_URI,\r\n    headers:{\r\n      Authorization: tokens\r\n    }\r\n  })\r\n\r\nconst wsLink = new WebSocketLink({\r\n  uri: process.env.React_App_WS,\r\n  options: {\r\n    reconnect: true\r\n  }\r\n});\r\n\r\nconst splitLink = split(\r\n  ({ query }) => {\r\n    const definition = getMainDefinition(query);\r\n    return (\r\n      definition.kind === 'OperationDefinition' &&\r\n      definition.operation === 'subscription'\r\n    );\r\n  },\r\n  wsLink,\r\n  upLoadLink\r\n);\r\n\r\nconst client = new ApolloClient({\r\n  cache,\r\n  onError: ({ networkError, graphQLErrors }) => {\r\n    console.log('graphQLErrors', graphQLErrors)\r\n    console.log('networkError', networkError)\r\n  },\r\n  link:splitLink\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <Routes/>\r\n     \r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport './static/index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}